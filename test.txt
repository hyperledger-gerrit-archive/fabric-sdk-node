
####################################################
# debug log: /var/folders/9_/7nlk0c4x04l3wv8hscrxd3zc0000gn/T/hfc/test-log/debug.log
####################################################

[14:02:14] Using gulpfile ~/dev/fabric-sdk-node/gulpfile.js
[14:02:14] Starting 'test'...

####################################################
# debug log: /var/folders/9_/7nlk0c4x04l3wv8hscrxd3zc0000gn/T/hfc/test-log/debug.log
####################################################

[14:02:16] Using gulpfile ~/dev/fabric-sdk-node/gulpfile.js
[14:02:16] Starting 'clean-up'...
[14:02:16] Finished 'clean-up' after 14 ms
[14:02:16] Starting 'lint'...
[14:02:16] Starting 'pre-test'...
[14:02:16] Starting 'compile'...
[14:02:16] npm run compile
[14:02:16] Starting 'docker-clean'...
[14:02:16] docker kill $(docker ps | grep "dev-peer0.org[12].example.com-[en]" | awk '{print $1}')
[14:02:16] Starting 'ca'...
[14:02:16] Starting 'mocha-fabric-client'...
[14:02:16] Starting 'mocha-fabric-network'...

> fabric-sdk-node@1.3.0-snapshot compile /Users/liamg/dev/fabric-sdk-node
> tsc --project test/typescript

[14:02:17] gulp-debug: fabric-client/lib/api.js
4605bc79b9b7
d1be6d30fe3d
c8eebf60ff0d
a1a08e350923
e85b333096a8
3b368594debb
[14:02:18] gulp-debug: fabric-client/lib/hash.js
[14:02:18] docker rm $(docker ps -a | grep "dev-peer0.org[12].example.com-[en]" | awk '{print $1}')
4605bc79b9b7
d1be6d30fe3d
c8eebf60ff0d
a1a08e350923
e85b333096a8
3b368594debb
[14:02:19] docker rmi $(docker images | grep "^dev-peer0.org[12].example.com-[en]" | awk '{print $3}')
Untagged: dev-peer0.org2.example.com-network-e2enodecc-v0-4455dbec9c22dd92f91f6edf98f990c4b9207d94ae03c70899e485e5b616afd9:latest
Deleted: sha256:bef2584ba100f5de9558b1ae784008f4164746544b4c805f0564e0178ae322d9
Deleted: sha256:328b3831f0380f22b1b844d5c73e17d6a172c272b21eeeb11871dca2ffd7a925
Deleted: sha256:43de5df9d2a62f19a7348129d44b17eff9cdc31341462b517259c8a730ecfc44
Deleted: sha256:26da2aa88f32424e3afc623276d8da7267a6fa3fe7e070f60c8d68d5167a3e5f
[14:02:19] gulp-debug: fabric-client/lib/utils.js
[14:02:19] Finished 'compile' after 3.22 s
Untagged: dev-peer0.org1.example.com-network-e2enodecc-v0-f0ea899496760854d411765e3885a78e2a00d1e8419edb4a5a730033933b1f35:latest
Deleted: sha256:2e24dd4e2371c7f1e12421d09de39b8c5c518cb915d6eac97c25b752fab1cea8
Deleted: sha256:c24be418d1c9d38c9fddbcce9c77d046bd1c233fe50457675a6a193de3ccc618
Deleted: sha256:04c03099ec600f71381d74b984103a053edaad07e7a16fabb40b89c67bc52311
Deleted: sha256:c6f52a7860e34083eed3c150b21feeaae3745c7dfae021bb4ff9b540f8ff1135
[14:02:19] gulp-debug: fabric-client/lib/BaseClient.js
[14:02:19] gulp-debug: fabric-client/lib/Config.js
Untagged: dev-peer0.org1.example.com-e2enodecc-v1-51c979938c8b1894cd6d7283f286f4e8d7c8459241e8df9db618f7b184a527c7:latest
Deleted: sha256:5732127cef04db99f7cef6414ab9c07ab1111c5759328526c41c2e04cc9a35ce
Deleted: sha256:6487ce7932a5045e41fcf8fa5e409e353e8c2d2557bef23d8a4e0814933d1c02
Deleted: sha256:7405c7c48dc6fc04b15f727e71d7a1d5b9e5ff2619eb584ed9f406759114e03b
Deleted: sha256:4f03c8c2261068c00652238797c22d7382ec8e78999e21445138e13cc540b799
[14:02:19] gulp-debug: fabric-client/lib/Remote.js
[14:02:19] gulp-debug: fabric-client/lib/User.js
Untagged: dev-peer0.org2.example.com-e2enodecc-v1-d8837a85ad58d7fdaaeabc0e9ba1f3afa23697653b401c04755945ca06e8799a:latest
Deleted: sha256:fe78fc1baeed0e1deb1ddd2dde313f6319e965cb0e569e96142e8667eff7d89e
Deleted: sha256:189fac92b09620917e4a276aac3c71cae56139c84e01c0057dfe6de10293191e
Deleted: sha256:56b8b08554bca2d1b4a0568e7269aa99f297e157b3c350d74e70775408ed5da2
Deleted: sha256:3439fdaf00479761144814b89b6fd59cb5343b9591e764abab7a38a748a803d9
[14:02:19] gulp-debug: fabric-client/lib/impl/bccsp_pkcs11.js
[14:02:20] gulp-debug: fabric-client/lib/impl/CouchDBKeyValueStore.js
Untagged: dev-peer0.org1.example.com-e2enodecc-v0-70ad6a959a7accfe9e547d7648e65307b18d05a80f055bf1de425b3b4d61f4b6:latest
Deleted: sha256:1df4705555e4f5752da11d0a3a87c34bc03bcd64f5d54b86e339fa51527cbd55
Deleted: sha256:085c012343955b1128637a77787294896e9d810936c58460274f06bbfa100a29
Deleted: sha256:ab0cb8c8e242d98d92481018b9ff572952f9d1a6ee60089dcfbb6d488e70f3c7
Deleted: sha256:aa94a38161cdae0cdc2be5dc392a5fe6996913952f7f206a0bf9d051fd704901
[14:02:20] gulp-debug: fabric-client/lib/impl/CryptoSuite_ECDSA_AES.js
[14:02:20] gulp-debug: fabric-client/lib/impl/aes/pkcs11_key.js
Untagged: dev-peer0.org2.example.com-e2enodecc-v0-ea065bdcb166a15ec4bc1565e18f5f0361f3f7cae214b1d4447192fd1378bdf6:latest
Deleted: sha256:2ba4970e3288312edc164fb70165a4708c4225d7c3bf792197b6206c772e25be
Deleted: sha256:b7f5a60fef573bb7ee435eefdf94cc6c6241dc14d46337e58856fa6569324712
Deleted: sha256:5e82da8d09ea19f58636bbba2e8c1e33ed345dfbaf15326e5b4ccd5aeb373dbb
Deleted: sha256:29ae6c8af0e2ad55c894a133283a50b360c4c986b85e8f766945a8c56e6206b7
Error response from daemon: conflict: unable to delete 4d9678fcfc31 (must be forced) - image is referenced in multiple repositories
Error response from daemon: conflict: unable to delete 4d9678fcfc31 (must be forced) - image is referenced in multiple repositories
[14:02:20] gulp-debug: fabric-client/lib/impl/ecdsa/key.js
[14:02:20] docker-compose -f test/fixtures/docker-compose.yaml down
[14:02:20] gulp-debug: fabric-client/lib/impl/ecdsa/pkcs11_key.js
[14:02:20] gulp-debug: fabric-client/lib/impl/CryptoKeyStore.js
[14:02:21] gulp-debug: fabric-client/lib/impl/FileKeyValueStore.js
[14:02:21] gulp-debug: fabric-client/lib/msp/identity.js
[14:02:21] gulp-debug: fabric-client/lib/msp/msp.js
[14:02:21] gulp-debug: fabric-client/lib/protos/msp/identities.proto
[14:02:21] gulp-debug: fabric-client/lib/protos/msp/msp_config.proto
[14:02:21] gulp-debug: fabric-client/types/tsconfig.json
[14:02:21] gulp-debug: fabric-client/types/base.d.ts
[14:02:21] gulp-debug: 21 items
Stopping peer0.org2.example.com ... 
Stopping peer0.org1.example.com ... 
Stopping ca_peerOrg2            ... 
Stopping ca_peerOrg1            ... 
Stopping orderer.example.com    ... 
Stopping couchdb                ... 

    #getValue:   âœ“ #getValue: 0ms
    Contract #_validatePeerResponses should return all responses because all are valid:   âœ“ Contract #_validatePeerResponses should return all responses because all are valid: 2ms
    Contract #_validatePeerResponses should throw if no responses:   âœ“ Contract #_validatePeerResponses should throw if no responses: 0ms
    Contract #_validatePeerResponses should throw if no proposal responses:   âœ“ Contract #_validatePeerResponses should throw if no proposal responses: 1ms
    Contract #_validatePeerResponses should return only the valid responses:   âœ“ Contract #_validatePeerResponses should return only the valid responses: 1ms
    Contract #submitTransaction should throw if functionName not specified:   âœ“ Contract #submitTransaction should throw if functionName not specified: 1ms
    Contract #submitTransaction should throw if args contains non-string values:   âœ“ Contract #submitTransaction should throw if args contains non-string values: 0ms
    Contract #submitTransaction should return null if transaction response contains no response payload: (node:5140) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead
[1A[2KStopping couchdb                ... [32mdone[0m[1B  âœ“ Contract #submitTransaction should return null if transaction response contains no response payload: 4ms
    Contract #submitTransaction should return transaction response payload:   âœ“ Contract #submitTransaction should return transaction response payload: 1ms
    Contract #submitTransaction should get expected result with no event handler:   âœ“ Contract #submitTransaction should get expected result with no event handler: 1ms
    Contract #submitTransaction should send transaction proposal with supplied function and argument values:   âœ“ Contract #submitTransaction should send transaction proposal with supplied function and argument values: 2ms
    Contract #submitTransaction should throw if transaction proposals were not valid:   âœ“ Contract #submitTransaction should throw if transaction proposals were not valid: 1ms
    Contract #submitTransaction should throw if no valid proposal responses:   âœ“ Contract #submitTransaction should throw if no valid proposal responses: 1ms
    Contract #submitTransaction should throw an error if the orderer responds with an error:   âœ“ Contract #submitTransaction should throw an error if the orderer responds with an error: 1ms
    Contract #submitTransaction should preprend the namespace to transaction proposal if one has been given:   âœ“ Contract #submitTransaction should preprend the namespace to transaction proposal if one has been given: 1ms
    Contract #executeTransaction should query chaincode and handle a good response without return data:   âœ“ Contract #executeTransaction should query chaincode and handle a good response without return data: 1ms
    Contract #executeTransaction should query chaincode and handle a good response with return data:   âœ“ Contract #executeTransaction should query chaincode and handle a good response with return data: 0ms
    Contract #executeTransaction should query chaincode and handle an error response: [6A[2KStopping peer0.org2.example.com ... [32mdone[0m[6B  âœ“ Contract #executeTransaction should query chaincode and handle an error response: 1ms
    Contract #executeTransaction should query chaincode with namespace added to the function:   âœ“ Contract #executeTransaction should query chaincode with namespace added to the function: 1ms
    Gateway #_mergeOptions should return the default options when there are no overrides:   âœ“ Gateway #_mergeOptions should return the default options when there are no overrides: 0ms
    Gateway #_mergeOptions should change a default option:   âœ“ Gateway #_mergeOptions should change a default option: 1ms
    Gateway #_mergeOptions should add a new option:   âœ“ Gateway #_mergeOptions should add a new option: 0ms
    Gateway #_mergeOptions should add option structures:   âœ“ Gateway #_mergeOptions should add option structures: 0ms
    Gateway #_mergeOptions should merge option structures:   âœ“ Gateway #_mergeOptions should merge option structures: 0ms
    Gateway #constructor should instantiate a Gateway object:   âœ“ Gateway #constructor should instantiate a Gateway object: 2ms
    Gateway #connect should fail without options supplied:   âœ“ Gateway #connect should fail without options supplied: 0ms
    Gateway #connect should fail without wallet option supplied:   âœ“ Gateway #connect should fail without wallet option supplied: 0ms
    Gateway #connect should connect to the gateway with default plugins:   âœ“ Gateway #connect should connect to the gateway with default plugins: 1ms
    Gateway #connect should connect to the gateway with identity:   âœ“ Gateway #connect should connect to the gateway with identity: 0ms
    Gateway #connect should connect to the gateway with identity and set client tls crypto material:   âœ“ Gateway #connect should connect to the gateway with identity and set client tls crypto material: 0ms
    Gateway #connect should connect to the gateway with identity and set client tls crypto material using tlsInfo:   âœ“ Gateway #connect should connect to the gateway with identity and set client tls crypto material using tlsInfo: 1ms
    Gateway #connect should connect from an existing client object:   âœ“ Gateway #connect should connect from an existing client object: 1ms
    Gateway #connect should delete any default query handler options if the plugin doesn't match the default plugin:   âœ“ Gateway #connect should delete any default query handler options if the plugin doesn't match the default plugin: 0ms
    Gateway #connect should throw an error if it cannot load a query plugin:   âœ“ Gateway #connect should throw an error if it cannot load a query plugin: 1ms
    Gateway #connect should not create a query handler if explicitly set to null: WARNING: loading non-allowed module: ./impl/query/noqueryhandler
  âœ“ Gateway #connect should not create a query handler if explicitly set to null: 1ms
    Gateway #connect has default transaction event handling strategy if none specified:   âœ“ Gateway #connect has default transaction event handling strategy if none specified: 0ms
    Gateway #connect allows transaction event handling strategy to be specified:   âœ“ Gateway #connect allows transaction event handling strategy to be specified: 1ms
    Gateway #connect allows null transaction event handling strategy to be set:   âœ“ Gateway #connect allows null transaction event handling strategy to be set: 0ms
    Gateway #_createQueryHandler should create a query handler if class defined:   âœ“ Gateway #_createQueryHandler should create a query handler if class defined: 4ms
    Gateway #_createQueryHandler should do nothing if no class defined:   âœ“ Gateway #_createQueryHandler should do nothing if no class defined: 0ms
    Gateway getters #getCurrentIdentity should return the initialized identity:   âœ“ Gateway getters #getCurrentIdentity should return the initialized identity: 0ms
    Gateway getters #getClient should return the underlying client object:   âœ“ Gateway getters #getClient should return the underlying client object: 0ms
    Gateway getters #getOptions should return the initialized options:   âœ“ Gateway getters #getOptions should return the initialized options: 0ms
    Gateway network interactions #getNetwork should return a cached network object:   âœ“ Gateway network interactions #getNetwork should return a cached network object: 0ms
    Gateway network interactions #getNetwork should create a non-existent network object: [5A[2KStopping peer0.org1.example.com ... [32mdone[0m[5B  âœ“ Gateway network interactions #getNetwork should create a non-existent network object: 2ms
    Gateway network interactions #disconnect should cleanup the gateway and its networks:   âœ“ Gateway network interactions #disconnect should cleanup the gateway and its networks: 0ms
    Network #_initializeInternalChannel should initialize the network using the first peer: [14:02:22] Finished 'ca' after 6.42 s
  âœ“ Network #_initializeInternalChannel should initialize the network using the first peer: 0ms
    Network #_initializeInternalChannel should try other peers if initialization fails:   âœ“ Network #_initializeInternalChannel should try other peers if initialization fails: 1ms
    Network #_initializeInternalChannel should fail if all peers fail:   âœ“ Network #_initializeInternalChannel should fail if all peers fail: 1ms
    Network #_initializeInternalChannel should fail if there are no LEDGER_QUERY_ROLE peers:   âœ“ Network #_initializeInternalChannel should fail if there are no LEDGER_QUERY_ROLE peers: 1ms
    Network #initialize should return with no action if already initialized:   âœ“ Network #initialize should return with no action if already initialized: 0ms
    Network #initialize should initialize the internal channels:   âœ“ Network #initialize should initialize the internal channels: 1ms
    Network #_mapPeersToMSPid should initialize the peer map:   âœ“ Network #_mapPeersToMSPid should initialize the peer map: 1ms
    Network #_mapPeersToMSPid should throw error if no peers associated with MSPID:   âœ“ Network #_mapPeersToMSPid should throw error if no peers associated with MSPID: 0ms
    Network #getChannel should return the fabric-client channel object:   âœ“ Network #getChannel should return the fabric-client channel object: 0ms
    Network #getContract should throw an error if not initialized:   âœ“ Network #getContract should throw an error if not initialized: 1ms
    Network #getContract should return a cached contract object:   âœ“ Network #getContract should return a cached contract object: 2ms
    Network #getContract should create a non-existent contract object:   âœ“ Network #getContract should create a non-existent contract object: 1ms
    Network #getContract should return a newly created contract, with namespace:   âœ“ Network #getContract should return a newly created contract, with namespace: 0ms
    Network #getContract should create a non-existent contract object with namespace:   âœ“ Network #getContract should create a non-existent contract object with namespace: 0ms
    Network #_dispose should cleanup the network object:   âœ“ Network #_dispose should cleanup the network object: 1ms
    Network #_dispose should call dispose on the queryHandler if defined and work if no contracts have been got:   âœ“ Network #_dispose should call dispose on the queryHandler if defined and work if no contracts have been got: 0ms
    Network #_dispose calls close() on its channel:   âœ“ Network #_dispose calls close() on its channel: 0ms
    Network #getEventHubFactory Returns an EventHubFactory:   âœ“ Network #getEventHubFactory Returns an EventHubFactory: 0ms
    QueryHandler just returns calling initialize:   âœ“ QueryHandler just returns calling initialize: 0ms
    QueryHandler just returns calling dispose:   âœ“ QueryHandler just returns calling dispose: 0ms
    QueryHandler throws exception calling queryChaincode():   âœ“ QueryHandler throws exception calling queryChaincode(): 0ms
    Wallet throws exception calling setUserContext():   âœ“ Wallet throws exception calling setUserContext(): 0ms
    Wallet throws exception calling configureClientStores():   âœ“ Wallet throws exception calling configureClientStores(): 1ms
    Wallet throws exception calling import():   âœ“ Wallet throws exception calling import(): 0ms
    Wallet throws exception calling export():   âœ“ Wallet throws exception calling export(): 0ms
    Wallet throws exception calling list():   âœ“ Wallet throws exception calling list(): 0ms
    Wallet throws exception calling delete():   âœ“ Wallet throws exception calling delete(): 0ms
    Wallet throws exception calling exists():   âœ“ Wallet throws exception calling exists(): 0ms
    DefaultQueryHandler #constructor should create a list of all queryable peers:   âœ“ DefaultQueryHandler #constructor should create a list of all queryable peers: 1ms
    DefaultQueryHandler #constructor should handle no peers gracefully:   âœ“ DefaultQueryHandler #constructor should handle no peers gracefully: 0ms
    DefaultQueryHandler #queryChaincode should not switch to another peer if peer returns a payload which is an error:   âœ“ DefaultQueryHandler #queryChaincode should not switch to another peer if peer returns a payload which is an error: 1ms
    DefaultQueryHandler #queryChaincode should choose a valid peer:   âœ“ DefaultQueryHandler #queryChaincode should choose a valid peer: 0ms
    DefaultQueryHandler #queryChaincode should cache a valid peer and reuse:   âœ“ DefaultQueryHandler #queryChaincode should cache a valid peer and reuse: 1ms
    DefaultQueryHandler #queryChaincode should choose a valid peer if any respond with an error:   âœ“ DefaultQueryHandler #queryChaincode should choose a valid peer if any respond with an error: 1ms
    DefaultQueryHandler #queryChaincode should handle when the last successful peer fails: [14:02:22] Finished 'pre-test' after 6.78 s
  âœ“ DefaultQueryHandler #queryChaincode should handle when the last successful peer fails: 1ms
    DefaultQueryHandler #queryChaincode should throw if all peers respond with errors:   âœ“ DefaultQueryHandler #queryChaincode should throw if all peers respond with errors: 1ms
    DefaultQueryHandler #queryChaincode should throw if no peers are suitable to query:   âœ“ DefaultQueryHandler #queryChaincode should throw if no peers are suitable to query: 1ms
    DefaultQueryHandler #_querySinglePeer should query a single peer:   âœ“ DefaultQueryHandler #_querySinglePeer should query a single peer: 0ms
    DefaultQueryHandler #_querySinglePeer should throw if no responses are returned:   âœ“ DefaultQueryHandler #_querySinglePeer should throw if no responses are returned: 0ms
    DefaultQueryHandler #_querySinglePeer should return any responses that are chaincode errors:   âœ“ DefaultQueryHandler #_querySinglePeer should return any responses that are chaincode errors: 1ms
    DefaultQueryHandler #_querySinglePeer should throw any responses that are errors and code 14 being unavailable.:   âœ“ DefaultQueryHandler #_querySinglePeer should throw any responses that are errors and code 14 being unavailable.: 0ms
    DefaultQueryHandler #_querySinglePeer should throw if query request fails:   âœ“ DefaultQueryHandler #_querySinglePeer should throw if query request fails: 0ms
    DefaultQueryHandler Class level tests Should always work with the first peer in the list if no problems:   âœ“ DefaultQueryHandler Class level tests Should always work with the first peer in the list if no problems: 1ms
    DefaultQueryHandler Class level tests Should find,use and continue to use the next peer if first attempt to a peer fails:   âœ“ DefaultQueryHandler Class level tests Should find,use and continue to use the next peer if first attempt to a peer fails: 2ms
    DefaultQueryHandler Class level tests Should find, use and continue to use next peer if the good peer stops responding:   âœ“ DefaultQueryHandler Class level tests Should find, use and continue to use next peer if the good peer stops responding: 2ms
    DefaultQueryHandler Class level tests Should find and use first peer in the list again if other peers stop responding:   âœ“ DefaultQueryHandler Class level tests Should find and use first peer in the list again if other peers stop responding: 4ms
    DefaultQueryHandler Class level tests Should find and use first peer in the list again if other peers stop responding if non chaincode errors are in payload:   âœ“ DefaultQueryHandler Class level tests Should find and use first peer in the list again if other peers stop responding if non chaincode errors are in payload: 7ms
    BaseWallet #constructor should default to X509 wallet mixin:   âœ“ BaseWallet #constructor should default to X509 wallet mixin: 1ms
    BaseWallet #constructor should accept a mixin parameter:   âœ“ BaseWallet #constructor should accept a mixin parameter: 1ms
    BaseWallet Unimplemented methods throws exception calling import():   âœ“ BaseWallet Unimplemented methods throws exception calling import(): 1ms
    BaseWallet Unimplemented methods throws exception calling export():   âœ“ BaseWallet Unimplemented methods throws exception calling export(): 1ms
    BaseWallet Unimplemented methods throws exception calling delete():   âœ“ BaseWallet Unimplemented methods throws exception calling delete(): 0ms
    BaseWallet Unimplemented methods throws exception calling exists():   âœ“ BaseWallet Unimplemented methods throws exception calling exists(): 0ms
    BaseWallet Unimplemented methods throws exception calling getCryptoSuite():   âœ“ BaseWallet Unimplemented methods throws exception calling getCryptoSuite(): 0ms
    BaseWallet Unimplemented methods throws exception calling getAllLabels():   âœ“ BaseWallet Unimplemented methods throws exception calling getAllLabels(): 0ms
    CouchDBWallet #constructor should throw an error if path not defined:   âœ“ CouchDBWallet #constructor should throw an error if path not defined: 1ms
    CouchDBWallet #constructor should throw an error if path not defined:   âœ“ CouchDBWallet #constructor should throw an error if path not defined: 0ms
    CouchDBWallet #constructor should default to X509 wallet mixin:   âœ“ CouchDBWallet #constructor should default to X509 wallet mixin: 0ms
    CouchDBWallet #constructor should accept a mixin parameter:   âœ“ CouchDBWallet #constructor should accept a mixin parameter: 1ms
    CouchDBWallet #constructor should create a Nano object:   âœ“ CouchDBWallet #constructor should create a Nano object: 1ms
    CouchDBWallet #constructor should set dbOptions:   âœ“ CouchDBWallet #constructor should set dbOptions: 1ms
    CouchDBWallet #_createOptions should give the default options and the correct url:   âœ“ CouchDBWallet #_createOptions should give the default options and the correct url: 0ms
    CouchDBWallet #getStateStore should create a KV store and log that it was created:   âœ“ CouchDBWallet #getStateStore should create a KV store and log that it was created: 0ms
    CouchDBWallet #getCryptoSuite should set the cryptoSuite:   âœ“ CouchDBWallet #getCryptoSuite should set the cryptoSuite: 1ms
    CouchDBWallet #delete should delete an identity from the wallet if it exists:   âœ“ CouchDBWallet #delete should delete an identity from the wallet if it exists: 0ms
    CouchDBWallet #exists should return true if identity exists:   âœ“ CouchDBWallet #exists should return true if identity exists: 0ms
    CouchDBWallet #getAllLabels should list all identities in the wallet:   âœ“ CouchDBWallet #getAllLabels should list all identities in the wallet: 0ms
    CouchDBWalletKeyValueStore #delete should return true if the key is deleted:   âœ“ CouchDBWalletKeyValueStore #delete should return true if the key is deleted: 0ms
    CouchDBWalletKeyValueStore #delete should return false if there was an error during deletion:   âœ“ CouchDBWalletKeyValueStore #delete should return false if there was an error during deletion: 1ms
    CouchDBWalletKeyValueStore #exists should return true if the key is found:   âœ“ CouchDBWalletKeyValueStore #exists should return true if the key is found: 1ms
    CouchDBWalletKeyValueStore #exists should return false the key is not found:   âœ“ CouchDBWalletKeyValueStore #exists should return false the key is not found: 0ms
    CouchDBWalletKeyValueStore #exists should throw an error if unknown error is thrown:   âœ“ CouchDBWalletKeyValueStore #exists should throw an error if unknown error is thrown: 1ms
    CouchDBWalletKeyValueStore #getAllLabels should return a list of labels without prefixes:   âœ“ CouchDBWalletKeyValueStore #getAllLabels should return a list of labels without prefixes: 1ms
    CouchDBWalletKeyValueStore #getAllLabels should throw an error:   âœ“ CouchDBWalletKeyValueStore #getAllLabels should throw an error: 0ms
    FileSystemWallet #constructor should throw an error if path not defined:   âœ“ FileSystemWallet #constructor should throw an error if path not defined: 1ms
    FileSystemWallet #constructor should default to X509 wallet mixin:   âœ“ FileSystemWallet #constructor should default to X509 wallet mixin: 0ms
    FileSystemWallet #constructor should accept a mixin parameter:   âœ“ FileSystemWallet #constructor should accept a mixin parameter: 0ms
    FileSystemWallet #_createFileKVS should create a File Key Value Store:   âœ“ FileSystemWallet #_createFileKVS should create a File Key Value Store: 1ms
    FileSystemWallet #_getPartitionedPath should create partitioned path:   âœ“ FileSystemWallet #_getPartitionedPath should create partitioned path: 1ms
    FileSystemWallet #_isDirectory should return true if a directory:   âœ“ FileSystemWallet #_isDirectory should return true if a directory: 0ms
    FileSystemWallet #_isDirectory should return false if not a directory:   âœ“ FileSystemWallet #_isDirectory should return false if not a directory: 1ms
    FileSystemWallet #_isDirectory should return false if an error is thrown:   âœ“ FileSystemWallet #_isDirectory should return false if an error is thrown: 0ms
    FileSystemWallet #getStateStore should create a KV store:   âœ“ FileSystemWallet #getStateStore should create a KV store: 0ms
    FileSystemWallet #getCryptoSuite should create a KV store: 
(node:5142) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead
    KeyValueStore #getName should return undefined:   âœ“ KeyValueStore #getName should return undefined: 1ms
    KeyValueStore #setValue should return undefined:   âœ“ KeyValueStore #setValue should return undefined: 0ms
    CryptoSuite #generateKey should return undefined:   âœ“ CryptoSuite #generateKey should return undefined: 0ms
    CryptoSuite #generateEphemeralKey should return undefined:   âœ“ CryptoSuite #generateEphemeralKey should return undefined: 0ms
    CryptoSuite #deriveKey should return undefined:   âœ“ CryptoSuite #deriveKey should return undefined: 0ms
    CryptoSuite #importKey should return undefined:   âœ“ CryptoSuite #importKey should return undefined: 0ms
    CryptoSuite #getKey should return undefined:   âœ“ CryptoSuite #getKey should return undefined: 0ms
    CryptoSuite #hash should return undefined:   âœ“ CryptoSuite #hash should return undefined: 0ms
    CryptoSuite #sign should return undefined:   âœ“ CryptoSuite #sign should return undefined: 0ms
    CryptoSuite #verify should return undefined:   âœ“ CryptoSuite #verify should return undefined: 0ms
    CryptoSuite #encrypt should return undefined:   âœ“ CryptoSuite #encrypt should return undefined: 0ms
    CryptoSuite #decrypt should return undefined:   âœ“ CryptoSuite #decrypt should return undefined: 0ms
    CryptoSuite #setCryptoKeyStore should throw an error if cryptoKeyStore not set:   âœ“ CryptoSuite #setCryptoKeyStore should throw an error if cryptoKeyStore not set: 2ms
    CryptoSuite #setCryptoKeyStore should throw an error if cryptoKeyStore is set:   âœ“ CryptoSuite #setCryptoKeyStore should throw an error if cryptoKeyStore is set: 0ms
    Key #getSKI should return undefined:   âœ“ Key #getSKI should return undefined: 0ms
    Key #isSymmetric should return undefined:   âœ“ Key #isSymmetric should return undefined: 0ms
    Key #isPrivate should return undefined:   âœ“ Key #isPrivate should return undefined: 0ms
    Key #getPublicKey should return undefined:   âœ“ Key #getPublicKey should return undefined: 1ms
    Key #toBytes should return undefined:   âœ“ Key #toBytes should return undefined: 0ms
    Hash #constructor should set the _blockSize and call reset():   âœ“ Hash #constructor should set the _blockSize and call reset(): 2ms
    Hash #hash should return the correct function:   âœ“ Hash #hash should return the correct function: 1ms
    Hash #reset should return an instance of itself:   âœ“ Hash #reset should return an instance of itself: 0ms
    Hash #update should call _hash.update and return an instance of itself:   âœ“ Hash #update should call _hash.update and return an instance of itself: 0ms
    Hash #finalize should not throw:   âœ“ Hash #finalize should not throw: 0ms
    EndorsementHandler #endorse should throw when params are given:   âœ“ EndorsementHandler #endorse should throw when params are given: 0ms
    EndorsementHandler #endorse should throw when params are not given:   âœ“ EndorsementHandler #endorse should throw when params are not given: 0ms
    EndorsementHandler #endorse should throw:   âœ“ EndorsementHandler #endorse should throw: 0ms
    EndorsementHandler create should throw when params are given:   âœ“ EndorsementHandler create should throw when params are given: 0ms
    EndorsementHandler create should throw when params are not given:   âœ“ EndorsementHandler create should throw when params are not given: 0ms
    CommitHandler #commit should throw when params are given:   âœ“ CommitHandler #commit should throw when params are given: 0ms
    CommitHandler #commit should throw when params are not given:   âœ“ CommitHandler #commit should throw when params are not given: 0ms
    CommitHandler #initialize should throw when params are given:   âœ“ CommitHandler #initialize should throw when params are given: 0ms
    CommitHandler create should throw when params are given:   âœ“ CommitHandler create should throw when params are given: 0ms
    CommitHandler create should throw when params are not given:   âœ“ CommitHandler create should throw when params are not given: 0ms
    BaseClient #constructor should set `_cryptoSuite` to null:   âœ“ BaseClient #constructor should set `_cryptoSuite` to null: 0ms
    BaseClient #BaseClient.newCryptoSuite should call `sdkUtils.newCryptoSuite` with passed parameters and return result:   âœ“ BaseClient #BaseClient.newCryptoSuite should call `sdkUtils.newCryptoSuite` with passed parameters and return result: 0ms
    BaseClient #BaseClient.newCryptoKeyStore should call `sdkUtils.newCryptoKeyStore` with passed parameters and return result:   âœ“ BaseClient #BaseClient.newCryptoKeyStore should call `sdkUtils.newCryptoKeyStore` with passed parameters and return result: 0ms
    BaseClient #BaseClient.newDefaultKeyValueStore should call `sdkUtils.newKeyValueStore` with passed parameters and return result:   âœ“ BaseClient #BaseClient.newDefaultKeyValueStore should call `sdkUtils.newKeyValueStore` with passed parameters and return result: 0ms
    BaseClient #BaseClient.setLogger should throw if passed logger does not implement any methods:   âœ“ BaseClient #BaseClient.setLogger should throw if passed logger does not implement any methods: 0ms
    BaseClient #BaseClient.setLogger should throw if passed logger does not implement debug:   âœ“ BaseClient #BaseClient.setLogger should throw if passed logger does not implement debug: 0ms
    BaseClient #BaseClient.setLogger should throw if passed logger does not implement info:   âœ“ BaseClient #BaseClient.setLogger should throw if passed logger does not implement info: 0ms
    BaseClient #BaseClient.setLogger should throw if passed logger does not implement warn:   âœ“ BaseClient #BaseClient.setLogger should throw if passed logger does not implement warn: 0ms
    BaseClient #BaseClient.setLogger should throw if passed logger does not implement error:   âœ“ BaseClient #BaseClient.setLogger should throw if passed logger does not implement error: 1ms
    BaseClient #BaseClient.setLogger should overwrite the NodeJS.global logger if it already exists:   âœ“ BaseClient #BaseClient.setLogger should overwrite the NodeJS.global logger if it already exists: 1ms
    BaseClient #BaseClient.setLogger should set the NodeJS.global logger if it doesnt exist:   âœ“ BaseClient #BaseClient.setLogger should set the NodeJS.global logger if it doesnt exist: 1ms
    BaseClient #BaseClient.getConfigSetting should call `sdkUtils.getConfigSetting` with passed parameters and return result:   âœ“ BaseClient #BaseClient.getConfigSetting should call `sdkUtils.getConfigSetting` with passed parameters and return result: 0ms
    BaseClient #getConfigSetting should call `BaseClient.getConfigSetting` with passed parameters and return result:   âœ“ BaseClient #getConfigSetting should call `BaseClient.getConfigSetting` with passed parameters and return result: 0ms
    BaseClient #BaseClient.addConfigFile should call `sdkUtils.addConfigFile` with passed parameters:   âœ“ BaseClient #BaseClient.addConfigFile should call `sdkUtils.addConfigFile` with passed parameters: 0ms
    BaseClient #BaseClient.setConfigSetting should call `sdkUtils.setConfigSetting` with passed parameters:   âœ“ BaseClient #BaseClient.setConfigSetting should call `sdkUtils.setConfigSetting` with passed parameters: 1ms
    BaseClient #setConfigSetting should call `BaseClient.setConfigSetting` with passed parameters and return result:   âœ“ BaseClient #setConfigSetting should call `BaseClient.setConfigSetting` with passed parameters and return result: 0ms
    BaseClient #BaseClient.getLogger should call `sdkUtils.getLogger` with passed parameters and return result:   âœ“ BaseClient #BaseClient.getLogger should call `sdkUtils.getLogger` with passed parameters and return result: 0ms
    BaseClient #setCryptoSuite should set the CryptoSuite:   âœ“ BaseClient #setCryptoSuite should set the CryptoSuite: 0ms
    BaseClient #getCryptoSuite should return the CryptoSuite:   âœ“ BaseClient #getCryptoSuite should return the CryptoSuite: 0ms
    BaseClient #BaseClient.normalizeX509 should call `sdkUtils.normalizeX509` with passed parameters and return result:   âœ“ BaseClient #BaseClient.normalizeX509 should call `sdkUtils.normalizeX509` with passed parameters and return result: 0ms
    BlockDecoder #BlockDecoder.decode should throw error if not given a byte buffer:   âœ“ BlockDecoder #BlockDecoder.decode should throw error if not given a byte buffer: 0ms
    BlockDecoder #BlockDecoder.decode should parse genesis block with IMPLICIT_META type:   âœ“ BlockDecoder #BlockDecoder.decode should parse genesis block with IMPLICIT_META type: 18ms
    BlockDecoder #BlockDecoder.decode should throw and log error object:   âœ“ BlockDecoder #BlockDecoder.decode should throw and log error object: 2ms
    BlockDecoder #BlockDecoder.decode should throw and log string:   âœ“ BlockDecoder #BlockDecoder.decode should throw and log string: 0ms
    BlockDecoder #BlockDecoder.decodeBlock should throw error if block input data is missing:   âœ“ BlockDecoder #BlockDecoder.decodeBlock should throw error if block input data is missing: 0ms
    BlockDecoder #BlockDecoder.decodeBlock should decode Block object:   âœ“ BlockDecoder #BlockDecoder.decodeBlock should decode Block object: 1ms
    BlockDecoder #BlockDecoder.decodeBlock should throw and log error object:   âœ“ BlockDecoder #BlockDecoder.decodeBlock should throw and log error object: 1ms
    BlockDecoder #BlockDecoder.decodeBlock should throw and log string:   âœ“ BlockDecoder #BlockDecoder.decodeBlock should throw and log string: 0ms
    BlockDecoder #BlockDecoder.decodeTransaction should throw error if not given a byte buffer:   âœ“ BlockDecoder #BlockDecoder.decodeTransaction should throw error if not given a byte buffer: 0ms
    BlockDecoder #BlockDecoder.decodeTransaction should generate a processed transaction:   âœ“ BlockDecoder #BlockDecoder.decodeTransaction should generate a processed transaction: 0ms
    BlockDecoder #decodeBlockHeader should return a decoded block header:   âœ“ BlockDecoder #decodeBlockHeader should return a decoded block header: 0ms
    BlockDecoder #decodeBlockData should call _commonProto.Envelope.decode with buffer twice:   âœ“ BlockDecoder #decodeBlockData should call _commonProto.Envelope.decode with buffer twice: 0ms
    BlockDecoder #decodeBlockData should call _commonProto.Envelope.decode with no proto:   âœ“ BlockDecoder #decodeBlockData should call _commonProto.Envelope.decode with no proto: 0ms
    BlockDecoder #decodeBlockMetaData should return the correct meta data with no paramaters:   âœ“ BlockDecoder #decodeBlockMetaData should return the correct meta data with no paramaters: 0ms
    BlockDecoder #decodeBlockMetaData should populate the metadata:   âœ“ BlockDecoder #decodeBlockMetaData should populate the metadata: 0ms
    BlockDecoder #decodeTransactionFilter should return null if metadata_bytes not given:   âœ“ BlockDecoder #decodeTransactionFilter should return null if metadata_bytes not given: 0ms
    BlockDecoder #decodeTransactionFilter should convert a not buffer to a buffer if string given:   âœ“ BlockDecoder #decodeTransactionFilter should convert a not buffer to a buffer if string given: 1ms
    BlockDecoder #decodeTransactionFilter should add each value in metadata_bytes to transaction_filter:   âœ“ BlockDecoder #decodeTransactionFilter should add each value in metadata_bytes to transaction_filter: 0ms
    BlockDecoder #decodeLastConfigSequenceNumber should return an object with value property if metadata_bytes not given:   âœ“ BlockDecoder #decodeLastConfigSequenceNumber should return an object with value property if metadata_bytes not given: 0ms
    BlockDecoder #decodeMetadataSignatures should decode the metadata signatures and call decodeMetadataValueSignatures:   âœ“ BlockDecoder #decodeMetadataSignatures should decode the metadata signatures and call decodeMetadataValueSignatures: 1ms
    BlockDecoder #decodeMetadataValueSignatures should return an empty array if no meta signatures are given:   âœ“ BlockDecoder #decodeMetadataValueSignatures should return an empty array if no meta signatures are given: 0ms
    BlockDecoder #decodeMetadataValueSignatures should create return a list of signatures:   âœ“ BlockDecoder #decodeMetadataValueSignatures should create return a list of signatures: 0ms
    BlockDecoder #decodeBlockDataEnvelope should return the decoded envelope:   âœ“ BlockDecoder #decodeBlockDataEnvelope should return the decoded envelope: 0ms
    BlockDecoder #decodeEndorserTransaction should log an error when an error is thrown:   âœ“ BlockDecoder #decodeEndorserTransaction should log an error when an error is thrown: 0ms
    BlockDecoder #decodeEndorserTransaction should add actions to data when transaction with actions is given:   âœ“ BlockDecoder #decodeEndorserTransaction should add actions to data when transaction with actions is given: 1ms
    BlockDecoder #decodeEndorserTransaction should return an empty object if transaction is not given:   âœ“ BlockDecoder #decodeEndorserTransaction should return an empty object if transaction is not given: 0ms
    BlockDecoder #decodeEndorserTransaction should return an empty object if transaction is given with no actions:   âœ“ BlockDecoder #decodeEndorserTransaction should return an empty object if transaction is given with no actions: 1ms
    BlockDecoder #decodeConfigEnvelope should return the correct config envelope:   âœ“ BlockDecoder #decodeConfigEnvelope should return the correct config envelope: 1ms
    BlockDecoder #decodeConfig should decode the config given:   âœ“ BlockDecoder #decodeConfig should decode the config given: 0ms
    BlockDecoder #decodeConfigUpdateEnvelope should return the config update envelope:   âœ“ BlockDecoder #decodeConfigUpdateEnvelope should return the config update envelope: 1ms
    BlockDecoder #decodeConfigUpdate should create the correct config update:   âœ“ BlockDecoder #decodeConfigUpdate should create the correct config update: 1ms
    BlockDecoder #decodeConfigGroups should return an empty object when no proto group config given:   âœ“ BlockDecoder #decodeConfigGroups should return an empty object when no proto group config given: 0ms
    BlockDecoder #decodeConfigGroups should call decodeConfigGroup for each group:   âœ“ BlockDecoder #decodeConfigGroups should call decodeConfigGroup for each group: 0ms
    BlockDecoder #decodeConfigGroup should return null when no proto_config_group is given:   âœ“ BlockDecoder #decodeConfigGroup should return null when no proto_config_group is given: 0ms
[2A[2KStopping orderer.example.com    ... [32mdone[0m[2B    BlockDecoder #decodeConfigValues should call decodeConfigValue for each key in config_value_map:   âœ“ BlockDecoder #decodeConfigValues should call decodeConfigValue for each key in config_value_map: 0ms
    BlockDecoder #decodeConfigValue should return the correct config value for AnchorPeers:   âœ“ BlockDecoder #decodeConfigValue should return the correct config value for AnchorPeers: 1ms
    BlockDecoder #decodeConfigValue should return an empty config for AnchorPeers when no anchor peers given:   âœ“ BlockDecoder #decodeConfigValue should return an empty config for AnchorPeers when no anchor peers given: 1ms
    BlockDecoder #decodeConfigValue should return the correct config value for MSP when config type is 0:   âœ“ BlockDecoder #decodeConfigValue should return the correct config value for MSP when config type is 0: 1ms
    BlockDecoder #decodeConfigValue should return the correct config value for MSP when config type is not 0:   âœ“ BlockDecoder #decodeConfigValue should return the correct config value for MSP when config type is not 0: 2ms
    BlockDecoder #decodeConfigValue should return the correct config value for Consortium:   âœ“ BlockDecoder #decodeConfigValue should return the correct config value for Consortium: 1ms
    BlockDecoder #decodeConfigValue should return the correct config value for OrdererAddresses when no proto addresses are found:   âœ“ BlockDecoder #decodeConfigValue should return the correct config value for OrdererAddresses when no proto addresses are found: 0ms
    BlockDecoder #decodeConfigPolicies should call deocdeConfigPolicy twice:   âœ“ BlockDecoder #decodeConfigPolicies should call deocdeConfigPolicy twice: 0ms
    BlockDecoder #decodeConfigPolicy should return the correct config policy if no policy is given:   âœ“ BlockDecoder #decodeConfigPolicy should return the correct config policy if no policy is given: 0ms
    BlockDecoder #decodeConfigPolicy should return the correct config polict if plicy is MSP:   âœ“ BlockDecoder #decodeConfigPolicy should return the correct config polict if plicy is MSP: 0ms
    BlockDecoder #decodeConfigPolicy should throw error if it doesnt recognise the policy type:   âœ“ BlockDecoder #decodeConfigPolicy should throw error if it doesnt recognise the policy type: 0ms
    BlockDecoder #decodeImplicitMetaPolicy should decode the implicit meta policy:   âœ“ BlockDecoder #decodeImplicitMetaPolicy should decode the implicit meta policy: 0ms
    BlockDecoder #decodeSignaturePolicyEnvelope should return the correct signature policy envelope without identities given:   âœ“ BlockDecoder #decodeSignaturePolicyEnvelope should return the correct signature policy envelope without identities given: 0ms
    BlockDecoder #decodeSignaturePolicy should throw error when unknown signature policy is given:   âœ“ BlockDecoder #decodeSignaturePolicy should throw error when unknown signature policy is given: 0ms
    BlockDecoder #decodeMSPPrincipal should return the correct msp principal with role other than 0 or 1:   âœ“ BlockDecoder #decodeMSPPrincipal should return the correct msp principal with role other than 0 or 1: 0ms
    BlockDecoder #decodeMSPPrincipal should return the correct msp principal with principal_classification ORGANISATION_UNIT:   âœ“ BlockDecoder #decodeMSPPrincipal should return the correct msp principal with principal_classification ORGANISATION_UNIT: 1ms
    BlockDecoder #decodeMSPPrincipal should return the correct msp principal with principal_clasification IDENTITY:   âœ“ BlockDecoder #decodeMSPPrincipal should return the correct msp principal with principal_clasification IDENTITY: 0ms
    BlockDecoder #decodeConfigSignature should return the correct decoded config signature:   âœ“ BlockDecoder #decodeConfigSignature should return the correct decoded config signature: 0ms
    BlockDecoder #decodeSignatureHeader should decode the signature header and identity before returning decoded signature header:   âœ“ BlockDecoder #decodeSignatureHeader should decode the signature header and identity before returning decoded signature header: 0ms
    BlockDecoder #decodeIdentity should return a decoded identity:   âœ“ BlockDecoder #decodeIdentity should return a decoded identity: 0ms
    BlockDecoder #decodeIdentity should log an error when identity decoding fails:   âœ“ BlockDecoder #decodeIdentity should log an error when identity decoding fails: 0ms
    BlockDecoder #decodeIdentity should log a string error when identity decoding fails:   âœ“ BlockDecoder #decodeIdentity should log a string error when identity decoding fails: 0ms
    BlockDecoder #decodeFabricMSPConfig should decode a fabric msp config:   âœ“ BlockDecoder #decodeFabricMSPConfig should decode a fabric msp config: 1ms
    BlockDecoder #decodeFabricOUIdentifier should return an empty array if no unit identifiers given:   âœ“ BlockDecoder #decodeFabricOUIdentifier should return an empty array if no unit identifiers given: 0ms
    BlockDecoder #decodeFabricOUIdentifier should return the correct identifiers:   âœ“ BlockDecoder #decodeFabricOUIdentifier should return the correct identifiers: 0ms
    BlockDecoder #decodeSigningIdentityInfo should return the correct identity info:   âœ“ BlockDecoder #decodeSigningIdentityInfo should return the correct identity info: 0ms
    BlockDecoder #decodeKeyInfo should return the correct key info:   âœ“ BlockDecoder #decodeKeyInfo should return the correct key info: 0ms
    BlockDecoder #decodeKeyInfo should return an empty object if no key info bytes are given:   âœ“ BlockDecoder #decodeKeyInfo should return an empty object if no key info bytes are given: 0ms
    BlockDecoder #decodeHeader should decode and return the header:   âœ“ BlockDecoder #decodeHeader should decode and return the header: 1ms
    BlockDecoder #decodeChannelHeader should decode and return te channel header:   âœ“ BlockDecoder #decodeChannelHeader should decode and return te channel header: 0ms
    BlockDecoder timeStampToDate() should return null for empty timestamp:   âœ“ BlockDecoder timeStampToDate() should return null for empty timestamp: 0ms
    BlockDecoder timeStampToDate() should return ISO8601 string for a valid timestamp:   âœ“ BlockDecoder timeStampToDate() should return ISO8601 string for a valid timestamp: 1ms
    BlockDecoder #decodeChaincodeActionPayload should return the correct chaincode action payload:   âœ“ BlockDecoder #decodeChaincodeActionPayload should return the correct chaincode action payload: 0ms
    BlockDecoder #decodeChaincodeProposalPayload should return the correct chaincode proposal payload:   âœ“ BlockDecoder #decodeChaincodeProposalPayload should return the correct chaincode proposal payload: 0ms
    BlockDecoder #decodeChaincodeProposalPayloadInput should return the correct chaincode proposal payload input:   âœ“ BlockDecoder #decodeChaincodeProposalPayloadInput should return the correct chaincode proposal payload input: 0ms
    BlockDecoder #chaincodeTypeToString should return the correct chaincode type when one is given:   âœ“ BlockDecoder #chaincodeTypeToString should return the correct chaincode type when one is given: 0ms
    BlockDecoder #chaincodeTypeToString should return an unknown chaincode type:   âœ“ BlockDecoder #chaincodeTypeToString should return an unknown chaincode type: 0ms
    BlockDecoder #decodeChaincodeSpec should return the correct decoded chaincode spec:   âœ“ BlockDecoder #decodeChaincodeSpec should return the correct decoded chaincode spec: 0ms
    BlockDecoder #decodeChaincodeInput should return the correct decoded chaincode input:   âœ“ BlockDecoder #decodeChaincodeInput should return the correct decoded chaincode input: 0ms
    BlockDecoder #decodeChaincodeEndorsedAction should return the correct endorsed action:   âœ“ BlockDecoder #decodeChaincodeEndorsedAction should return the correct endorsed action: 0ms
    BlockDecoder #decodeEndorsement should return the correct endorsement:   âœ“ BlockDecoder #decodeEndorsement should return the correct endorsement: 0ms
    BlockDecoder #decodeProposalResponsePayload should return the correct proposal response payload:   âœ“ BlockDecoder #decodeProposalResponsePayload should return the correct proposal response payload: 0ms
    BlockDecoder #decodeChaincodeAction should return the correct chaincode action payload:   âœ“ BlockDecoder #decodeChaincodeAction should return the correct chaincode action payload: 0ms
    BlockDecoder #decodeChaincodeEvents should return the correct decoded event:   âœ“ BlockDecoder #decodeChaincodeEvents should return the correct decoded event: 0ms
    BlockDecoder #decodeChaincodeID should log and return an empty object when no proto_chaincode_id is given:   âœ“ BlockDecoder #decodeChaincodeID should log and return an empty object when no proto_chaincode_id is given: 0ms
    BlockDecoder #decodeChaincodeID should return the correct decoded chaincode id:   âœ“ BlockDecoder #decodeChaincodeID should return the correct decoded chaincode id: 0ms
    BlockDecoder #decodeReadWriteSets should return the correct read write set when data model not KV:   âœ“ BlockDecoder #decodeReadWriteSets should return the correct read write set when data model not KV: 1ms
    BlockDecoder #decodeReadWriteSets should return the correct read write set when the data model is KV:   âœ“ BlockDecoder #decodeReadWriteSets should return the correct read write set when the data model is KV: 1ms
    BlockDecoder #decodeKVRWSet should return the correct decoded kv_rw_set:   âœ“ BlockDecoder #decodeKVRWSet should return the correct decoded kv_rw_set: 1ms
    BlockDecoder #decodeKVRead should return the correct kv read:   âœ“ BlockDecoder #decodeKVRead should return the correct kv read: 0ms
    BlockDecoder #decodeKVRead should return the correct kv read when proto_version not present:   âœ“ BlockDecoder #decodeKVRead should return the correct kv read when proto_version not present: 0ms
    BlockDecoder #decodeRangeQueryInfo should return the correct range query info:   âœ“ BlockDecoder #decodeRangeQueryInfo should return the correct range query info: 1ms
    BlockDecoder #decodeRangeQueryInfo should return the correct range query info where there are no raw reads or merkle hashes:   âœ“ BlockDecoder #decodeRangeQueryInfo should return the correct range query info where there are no raw reads or merkle hashes: 1ms
    BlockDecoder #decodeKVWrite should return the correct kv write:   âœ“ BlockDecoder #decodeKVWrite should return the correct kv write: 0ms
    BlockDecoder #decodeKVMetadataWrite should return the correct kv metadata:   âœ“ BlockDecoder #decodeKVMetadataWrite should return the correct kv metadata: 0ms
    BlockDecoder decodeKVMetadataEntry should return the correct kv metadata entry:   âœ“ BlockDecoder decodeKVMetadataEntry should return the correct kv metadata entry: 0ms
    BlockDecoder #decodeResponse should return the correct response:   âœ“ BlockDecoder #decodeResponse should return the correct response: 1ms
    BlockDecoder #decodeResponse should return nul when no proto response is given:   âœ“ BlockDecoder #decodeResponse should return nul when no proto response is given: 0ms
    BlockDecoder #decodeVersion should return the verson number of type int:   âœ“ BlockDecoder #decodeVersion should return the verson number of type int: 0ms
    BlockDecoder #decodeCollectionHashedRWSet should return the correct collection hashed rw set:   âœ“ BlockDecoder #decodeCollectionHashedRWSet should return the correct collection hashed rw set: 1ms
    BlockDecoder #decodeHashedRwset should return the correct hashe rw set:   âœ“ BlockDecoder #decodeHashedRwset should return the correct hashe rw set: 0ms
    BlockDecoder #decodeKVReadHash should return the correct kv read hash:   âœ“ BlockDecoder #decodeKVReadHash should return the correct kv read hash: 0ms
    BlockDecoder #decodeKVReadHash should return the correct kv read hash when version is not given:   âœ“ BlockDecoder #decodeKVReadHash should return the correct kv read hash when version is not given: 0ms
    BlockDecoder #decodeKVWriteHash should return the correct key hash:   âœ“ BlockDecoder #decodeKVWriteHash should return the correct key hash: 0ms
    BlockDecoder #decodeKVMetadataWriteHash should return the correct kv metadata write hash:   âœ“ BlockDecoder #decodeKVMetadataWriteHash should return the correct kv metadata write hash: 0ms
    BlockDecoder #HeaderType.convertToString should log an error:   âœ“ BlockDecoder #HeaderType.convertToString should log an error: 1ms
    BlockDecoder #HeaderType.convertToString should return the correct type:   âœ“ BlockDecoder #HeaderType.convertToString should return the correct type: 0ms
    BlockDecoder #HeaderType.decodePayloadBasedOnType should call decodeConfigEnvelope:   âœ“ BlockDecoder #HeaderType.decodePayloadBasedOnType should call decodeConfigEnvelope: 0ms
    BlockDecoder #HeaderType.decodePayloadBasedOnType should call decodeConfigUpdateEnvelope:   âœ“ BlockDecoder #HeaderType.decodePayloadBasedOnType should call decodeConfigUpdateEnvelope: 0ms
    BlockDecoder #HeaderType.decodePayloadBasedOnType should call decodeEndorserTransaction:   âœ“ BlockDecoder #HeaderType.decodePayloadBasedOnType should call decodeEndorserTransaction: 0ms
    BlockDecoder #HeaderType.decodePayloadBasedOnType should return an empty object and call Logger.debug as a default case:   âœ“ BlockDecoder #HeaderType.decodePayloadBasedOnType should return an empty object and call Logger.debug as a default case: 1ms
    CertificateAuthority #constructor should throw error if no name parameter:   âœ“ CertificateAuthority #constructor should throw error if no name parameter: 1ms
    CertificateAuthority #constructor should throw error if name parameter is null:   âœ“ CertificateAuthority #constructor should throw error if name parameter is null: 0ms
    CertificateAuthority #constructor should throw error if no url parameter:   âœ“ CertificateAuthority #constructor should throw error if no url parameter: 1ms
    CertificateAuthority #constructor should throw error if url parameter is null:   âœ“ CertificateAuthority #constructor should throw error if url parameter is null: 0ms
    CertificateAuthority #constructor should log and consditionally initialize all internal parameters if caname:   âœ“ FileSystemWallet #getCryptoSuite should create a KV store: 200ms
    FileSystemWallet #exists should return true if directory and file of same name exists:   âœ“ FileSystemWallet #exists should return true if directory and file of same name exists: 1ms
    FileSystemWallet #exists should return false if directory but file of same name does not exist:   âœ“ FileSystemWallet #exists should return false if directory but file of same name does not exist: 0ms
    FileSystemWallet #exists should return false if directory does not exist:   âœ“ FileSystemWallet #exists should return false if directory does not exist: 1ms
    FileSystemWallet #delete should delete an identity from the wallet if it exists:   âœ“ FileSystemWallet #delete should delete an identity from the wallet if it exists: 1ms
    FileSystemWallet #delete should return false if identity does not exist:   âœ“ FileSystemWallet #delete should return false if identity does not exist: 1ms
    FileSystemWallet #delete should throw an error if delete fails:   âœ“ FileSystemWallet #delete should throw an error if delete fails: 0ms
    FileSystemWallet #getAllLabels should list all identities in the wallet:   âœ“ CertificateAuthority #constructor should log and consditionally initialize all internal parameters if caname: 1ms
    CertificateAuthority #constructor should log and consditionally initialize all internal parameters if no caname:   âœ“ CertificateAuthority #constructor should log and consditionally initialize all internal parameters if no caname: 0ms
    CertificateAuthority #getName should return the object name:   âœ“ CertificateAuthority #getName should return the object name: 0ms
    CertificateAuthority #getCaName should return the object caname:   âœ“ CertificateAuthority #getCaName should return the object caname: 0ms
    CertificateAuthority #getUrl should return the object url:   âœ“ CertificateAuthority #getUrl should return the object url: 0ms
    CertificateAuthority #getConnectionOptions should return the object connection_options:   âœ“ CertificateAuthority #getConnectionOptions should return the object connection_options: 0ms
    CertificateAuthority #getTlsCACerts should return the object tlsCACerts:   âœ“ CertificateAuthority #getTlsCACerts should return the object tlsCACerts: 0ms
    CertificateAuthority #getRegistrar should return the object registrar:   âœ“ CertificateAuthority #getRegistrar should return the object registrar: 0ms
    CertificateAuthority #setFabricCAServices should set the object FabricCAServices:   âœ“ CertificateAuthority #setFabricCAServices should set the object FabricCAServices: 0ms
  âœ“ FileSystemWallet #getAllLabels should list all identities in the wallet: 2ms
    FileSystemWallet #getAllLabels should handle no entries in the wallet - 1:   âœ“ FileSystemWallet #getAllLabels should handle no entries in the wallet - 1: 0ms
    FileSystemWallet #getAllLabels should handle no entries in the wallet - 2:   âœ“ FileSystemWallet #getAllLabels should handle no entries in the wallet - 2: 0ms
    FileSystemWallet #getAllLabels should handle no entries in the wallet - 3:   âœ“ FileSystemWallet #getAllLabels should handle no entries in the wallet - 3: 0ms
    FileSystemWallet Functional tests should perform all the actions of a wallet correctly:   âœ“ FileSystemWallet Functional tests should perform all the actions of a wallet correctly: 38ms
    HSMWalletMixin createIdentity should return the identity with the type, mspId and cert:   âœ“ HSMWalletMixin createIdentity should return the identity with the type, mspId and cert: 0ms
    HSMWalletMixin clearHSMCache should call HSMSuite.clear():   âœ“ HSMWalletMixin clearHSMCache should call HSMSuite.clear(): 1ms
    HSMWalletMixin closeDown should call close session and finalize every value in HSMSuite:   âœ“ HSMWalletMixin closeDown should call close session and finalize every value in HSMSuite: 1ms
    HSMWalletMixin #constructor should set default hsm parameters and usertype:   âœ“ HSMWalletMixin #constructor should set default hsm parameters and usertype: 0ms
    HSMWalletMixin #constructor should set default hsm parameters and usertype:   âœ“ HSMWalletMixin #constructor should set default hsm parameters and usertype: 1ms
    HSMWalletMixin #getCryptoSuite should set and return the cryptoSuite if one is available:   âœ“ HSMWalletMixin #getCryptoSuite should set and return the cryptoSuite if one is available: 1ms
    HSMWalletMixin #getCryptoSuite should set and return a new cryptoSuite:   âœ“ HSMWalletMixin #getCryptoSuite should set and return a new cryptoSuite: 0ms
    HSMWalletMixin #importIdentity should create a new identity:   âœ“ HSMWalletMixin #importIdentity should create a new identity: 2ms
    HSMWalletMixin #exportIdentity should export an existing identity:     CertificateAuthority #getFabricCAServices should return the object FabricCAServices:   âœ“ CertificateAuthority #getFabricCAServices should return the object FabricCAServices: 1ms
    CertificateAuthority #register should call register on the `FabricCAServices`:   âœ“ CertificateAuthority #register should call register on the `FabricCAServices`: 1ms
    CertificateAuthority #enroll should call enroll on the `FabricCAServices`:   âœ“ CertificateAuthority #enroll should call enroll on the `FabricCAServices`: 0ms
    CertificateAuthority #reenroll should call reenroll on the `FabricCAServices`:   âœ“ CertificateAuthority #reenroll should call reenroll on the `FabricCAServices`: 0ms
    CertificateAuthority #revoke should call revoke on the `FabricCAServices`:   âœ“ CertificateAuthority #revoke should call revoke on the `FabricCAServices`: 0ms
    CertificateAuthority #generateCRL should call generateCRL on the `FabricCAServices`:   âœ“ CertificateAuthority #generateCRL should call generateCRL on the `FabricCAServices`: 1ms
    CertificateAuthority #newCertificateService should call newCertificateService on the `FabricCAServices`:   âœ“ CertificateAuthority #newCertificateService should call newCertificateService on the `FabricCAServices`: 1ms
    CertificateAuthority #newIdentityService should call newIdentityService on the `FabricCAServices`:   âœ“ CertificateAuthority #newIdentityService should call newIdentityService on the `FabricCAServices`: 0ms
    CertificateAuthority #newAffiliationService should call newAffiliationService on the `FabricCAServices`:   âœ“ CertificateAuthority #newAffiliationService should call newAffiliationService on the `FabricCAServices`: 0ms
    CertificateAuthority #toString should return a string representatino of the object:   âœ“ CertificateAuthority #toString should return a string representatino of the object: 0ms
    Channel #constructor throws if no name parameter:   âœ“ HSMWalletMixin #exportIdentity should export an existing identity: 1ms
    HSMWalletMixin #exportIdentity should return null if no identity is found:   âœ“ HSMWalletMixin #exportIdentity should return null if no identity is found: 0ms
    HSMWalletMixin #getIdentityInfo should return identity info:   âœ“ HSMWalletMixin #getIdentityInfo should return identity info: 1ms
    HSMWalletMixin #getIdentityInfo should return null if no identity is found:   âœ“ HSMWalletMixin #getIdentityInfo should return null if no identity is found: 0ms
    InMemoryWallet #constructor should default to X509 wallet mixin:   âœ“ InMemoryWallet #constructor should default to X509 wallet mixin: 0ms
    InMemoryWallet #constructor should accept a mixin parameter:   âœ“ InMemoryWallet #constructor should accept a mixin parameter: 0ms
    InMemoryWallet #getStateStore should create a KV store:   âœ“ InMemoryWallet #getStateStore should create a KV store: 1ms
    InMemoryWallet #getCryptoSuite should create a KV store:   âœ“ InMemoryWallet #getCryptoSuite should create a KV store: 0ms
    InMemoryWallet #setUserContext should throw setting the user context for an unregistered id:   âœ“ Channel #constructor throws if no name parameter: 0ms
    Channel #constructor throws if name parameter not a string:   âœ“ Channel #constructor throws if name parameter not a string: 0ms
    Channel #constructor throws if name parameters does not match channel-name-regex-checker:   âœ“ Channel #constructor throws if name parameters does not match channel-name-regex-checker: 1ms
    Channel #constructor no regex check of name parameter if configuration contains an empty object:   âœ“ InMemoryWallet #setUserContext should throw setting the user context for an unregistered id: 1ms
    InMemoryWallet #setUserContext should return loaded identity:   âœ“ InMemoryWallet #setUserContext should return loaded identity: 1ms
    InMemoryWallet #setUserContext #configureClientStores should set the crypto suite:   âœ“ Channel #constructor no regex check of name parameter if configuration contains an empty object: 1ms
    Channel #constructor no regex check of name parameter if no channel-name-regx-checker configuration present:   âœ“ Channel #constructor no regex check of name parameter if no channel-name-regx-checker configuration present: 1ms
    Channel #constructor throws if no clientContext parameter:   âœ“ InMemoryWallet #setUserContext #configureClientStores should set the crypto suite: 1ms
    InMemoryWallet label storage #import should throw if there is no wallet mixin:   âœ“ Channel #constructor throws if no clientContext parameter: 0ms
    Channel add/remove peers new channel has no peers:   âœ“ Channel add/remove peers new channel has no peers: 1ms
    Channel add/remove peers throws getting a non-existent peer:   âœ“ Channel add/remove peers throws getting a non-existent peer: 0ms
    Channel add/remove peers can get added peer:   âœ“ Channel add/remove peers can get added peer: 0ms
    Channel add/remove peers channel has only added peer:   âœ“ Channel add/remove peers channel has only added peer: 0ms
    Channel add/remove peers throws getting removed peer:   âœ“ Channel add/remove peers throws getting removed peer: 1ms
    Channel add/remove peers channel does not have removed peer:   âœ“ Channel add/remove peers channel does not have removed peer: 1ms
    Channel add/remove peers throws adding a duplicate peer with replace parameter unset:   âœ“ Channel add/remove peers throws adding a duplicate peer with replace parameter unset: 0ms
    Channel add/remove peers allows adding a duplicate peer with replace parameter set:   âœ“ Channel add/remove peers allows adding a duplicate peer with replace parameter set: 0ms
    Channel add/remove peers sets specified roles on added peer:   âœ“ Channel add/remove peers sets specified roles on added peer: 0ms
    Channel #getPeersForOrg returns empty array for non-existent org:   âœ“ Channel #getPeersForOrg returns empty array for non-existent org: 1ms
    Channel #getPeersForOrg returns peers for org:   âœ“ InMemoryWallet label storage #import should throw if there is no wallet mixin: 1ms
    InMemoryWallet label storage #export should export the wallet:   âœ“ InMemoryWallet label storage #export should export the wallet: 3ms
    InMemoryWallet label storage #export should return null if export an identity that's not in the wallet:   âœ“ InMemoryWallet label storage #export should return null if export an identity that's not in the wallet: 1ms
    InMemoryWallet label storage #export should throw if there is no wallet mixin:   âœ“ InMemoryWallet label storage #export should throw if there is no wallet mixin: 1ms
    InMemoryWallet label storage #exists should test the existence of an identity from the wallet:   âœ“ InMemoryWallet label storage #exists should test the existence of an identity from the wallet: 0ms
    InMemoryWallet label storage #exists should test the non-existence of an identity from the wallet:   âœ“ InMemoryWallet label storage #exists should test the non-existence of an identity from the wallet: 0ms
    InMemoryWallet label storage #delete should delete an identity from the wallet:   âœ“ InMemoryWallet label storage #delete should delete an identity from the wallet: 1ms
    InMemoryWallet label storage #getAllLabels should list all identities in the wallet:   âœ“ Channel #getPeersForOrg returns peers for org: 1ms
    Channel #getPeersForOrg uses org from client if none supplied:   âœ“ Channel #getPeersForOrg uses org from client if none supplied: 12ms
    Channel add/remove orderers new channel has no orderers:   âœ“ Channel add/remove orderers new channel has no orderers: 1ms
    Channel add/remove orderers throws getting a non-existent peer:   âœ“ Channel add/remove orderers throws getting a non-existent peer: 0ms
    Channel add/remove orderers can get added orderer:   âœ“ Channel add/remove orderers can get added orderer: 1ms
    Channel add/remove orderers channel has only added orderer:   âœ“ Channel add/remove orderers channel has only added orderer: 0ms
    Channel add/remove orderers throws getting removed orderer:   âœ“ InMemoryWallet label storage #getAllLabels should list all identities in the wallet: 0ms
    InMemoryWallet label storage #list should list all identities in the wallet:   âœ“ Channel add/remove orderers throws getting removed orderer: 0ms
    Channel add/remove orderers channel does not have removed orderer:   âœ“ Channel add/remove orderers channel does not have removed orderer: 0ms
    Channel add/remove orderers throws adding a duplicate orderer with replace parameter unset:   âœ“ Channel add/remove orderers throws adding a duplicate orderer with replace parameter unset: 1ms
    Channel add/remove orderers allows adding a duplicate peer with replace parameter set:   âœ“ Channel add/remove orderers allows adding a duplicate peer with replace parameter set: 0ms
    Channel #close calls close on all channel peers:   âœ“ Channel #close calls close on all channel peers: 2ms
    Channel #close calls close on all orderers:   âœ“ Channel #close calls close on all orderers: 0ms
    Channel #getName returns the channel name:   âœ“ Channel #getName returns the channel name: 0ms
    Channel #newChannelEventHub returns a channel event hub for a peer:   âœ“ Channel #newChannelEventHub returns a channel event hub for a peer: 0ms
    Channel #newChannelEventHub returns a channel event hub for a named peer assigned to the channel:   âœ“ Channel #newChannelEventHub returns a channel event hub for a named peer assigned to the channel: 0ms
    Channel #newChannelEventHub throws for a named peer not assigned to the channel:   âœ“ Channel #newChannelEventHub throws for a named peer not assigned to the channel: 1ms
    Channel #getChannelEventHub throws for non-string name parameter:   âœ“ Channel #getChannelEventHub throws for non-string name parameter: 0ms
    Channel #getChannelEventHub returns a channel event hub for a named peer assigned to the channel:   âœ“ Channel #getChannelEventHub returns a channel event hub for a named peer assigned to the channel: 0ms
    Channel #getChannelEventHub returns the same channel event hub on subsequent calls:   âœ“ Channel #getChannelEventHub returns the same channel event hub on subsequent calls: 0ms
    Channel #getChannelEventHub throws for a peer not assigned to the channel:   âœ“ Channel #getChannelEventHub throws for a peer not assigned to the channel: 0ms
    Channel #getChannelEventHubsForOrg returns empty results if no peers in org:   âœ“ Channel #getChannelEventHubsForOrg returns empty results if no peers in org: 0ms
    Channel #getChannelEventHubsForOrg returns channel event hubs for peers in a given organization:   âœ“ Channel #getChannelEventHubsForOrg returns channel event hubs for peers in a given organization: 0ms
    Channel #getChannelEventHubsForOrg returns channel event hubs for channel's orgnanization if no organization specified:   âœ“ InMemoryWallet label storage #list should list all identities in the wallet: 4ms
    InMemoryWallet label storage #list should return an empty list for no identities in the wallet:   âœ“ InMemoryWallet label storage #list should return an empty list for no identities in the wallet: 1ms
    DefaultEventHandlerStrategies MSPID_SCOPE_ALLFORTX Returns a TransactionEventHandler:   âœ“ DefaultEventHandlerStrategies MSPID_SCOPE_ALLFORTX Returns a TransactionEventHandler: 0ms
    DefaultEventHandlerStrategies MSPID_SCOPE_ALLFORTX Sets transaction ID on event handler:   âœ“ Channel #getChannelEventHubsForOrg returns channel event hubs for channel's orgnanization if no organization specified: 1ms
    Channel #getChannelEventHubsForOrg does not return channel event hubs for peers that are not event sources:   âœ“ Channel #getChannelEventHubsForOrg does not return channel event hubs for peers that are not event sources: 1ms
    Channel organizations set/get MSP manager:   âœ“ Channel organizations set/get MSP manager: 0ms
    Channel organizations returns empty array if no member services providers:   âœ“ Channel organizations returns empty array if no member services providers: 0ms
    Channel organizations returns member services provider IDs from MSP manager:   âœ“ DefaultEventHandlerStrategies MSPID_SCOPE_ALLFORTX Sets transaction ID on event handler: 0ms
    DefaultEventHandlerStrategies MSPID_SCOPE_ALLFORTX Sets options on event handler:   âœ“ DefaultEventHandlerStrategies MSPID_SCOPE_ALLFORTX Sets options on event handler: 0ms
    DefaultEventHandlerStrategies MSPID_SCOPE_ALLFORTX Sets correct strategy on event handler:   âœ“ DefaultEventHandlerStrategies MSPID_SCOPE_ALLFORTX Sets correct strategy on event handler: 0ms
    DefaultEventHandlerStrategies MSPID_SCOPE_ANYFORTX Returns a TransactionEventHandler:   âœ“ DefaultEventHandlerStrategies MSPID_SCOPE_ANYFORTX Returns a TransactionEventHandler: 0ms
    DefaultEventHandlerStrategies MSPID_SCOPE_ANYFORTX Sets transaction ID on event handler:   âœ“ DefaultEventHandlerStrategies MSPID_SCOPE_ANYFORTX Sets transaction ID on event handler: 0ms
    DefaultEventHandlerStrategies MSPID_SCOPE_ANYFORTX Sets options on event handler:   âœ“ DefaultEventHandlerStrategies MSPID_SCOPE_ANYFORTX Sets options on event handler: 1ms
    DefaultEventHandlerStrategies MSPID_SCOPE_ANYFORTX Sets correct strategy on event handler:   âœ“ DefaultEventHandlerStrategies MSPID_SCOPE_ANYFORTX Sets correct strategy on event handler: 0ms
    DefaultEventHandlerStrategies NETWORK_SCOPE_ALLFORTX Returns a TransactionEventHandler:   âœ“ DefaultEventHandlerStrategies NETWORK_SCOPE_ALLFORTX Returns a TransactionEventHandler: 0ms
    DefaultEventHandlerStrategies NETWORK_SCOPE_ALLFORTX Sets transaction ID on event handler:   âœ“ DefaultEventHandlerStrategies NETWORK_SCOPE_ALLFORTX Sets transaction ID on event handler: 0ms
    DefaultEventHandlerStrategies NETWORK_SCOPE_ALLFORTX Sets options on event handler:   âœ“ DefaultEventHandlerStrategies NETWORK_SCOPE_ALLFORTX Sets options on event handler: 0ms
    DefaultEventHandlerStrategies NETWORK_SCOPE_ALLFORTX Sets correct strategy on event handler:   âœ“ DefaultEventHandlerStrategies NETWORK_SCOPE_ALLFORTX Sets correct strategy on event handler: 0ms
    DefaultEventHandlerStrategies NETWORK_SCOPE_ANYFORTX Returns a TransactionEventHandler:   âœ“ DefaultEventHandlerStrategies NETWORK_SCOPE_ANYFORTX Returns a TransactionEventHandler: 0ms
    DefaultEventHandlerStrategies NETWORK_SCOPE_ANYFORTX Sets transaction ID on event handler:   âœ“ DefaultEventHandlerStrategies NETWORK_SCOPE_ANYFORTX Sets transaction ID on event handler: 0ms
    DefaultEventHandlerStrategies NETWORK_SCOPE_ANYFORTX Sets options on event handler:   âœ“ DefaultEventHandlerStrategies NETWORK_SCOPE_ANYFORTX Sets options on event handler: 0ms
    DefaultEventHandlerStrategies NETWORK_SCOPE_ANYFORTX Sets correct strategy on event handler:   âœ“ DefaultEventHandlerStrategies NETWORK_SCOPE_ANYFORTX Sets correct strategy on event handler: 0ms
    EventHubFactory #constructor takes a Channel argument:   âœ“ EventHubFactory #constructor takes a Channel argument: 0ms
    EventHubFactory #constructor throws if no channel argument is supplied:   âœ“ EventHubFactory #constructor throws if no channel argument is supplied: 0ms
    EventHubFactory #getEventHubs returns empty array for no peer arguments:   âœ“ EventHubFactory #getEventHubs returns empty array for no peer arguments: 0ms
    EventHubFactory #getEventHubs returns eventHub for peer1:   âœ“ EventHubFactory #getEventHubs returns eventHub for peer1: 1ms
    EventHubFactory #getEventHubs returns eventHubs for peer1 and peer2:   âœ“ EventHubFactory #getEventHubs returns eventHubs for peer1 and peer2: 1ms
    EventHubFactory #getEventHubs does not reconnect a connected event hub:   âœ“ EventHubFactory #getEventHubs does not reconnect a connected event hub: 0ms
    EventHubFactory #getEventHubs connects an unconnected event hub:   âœ“ EventHubFactory #getEventHubs connects an unconnected event hub: 0ms
    EventHubFactory #getEventHubs does not fail on error connecting event hub:   âœ“ EventHubFactory #getEventHubs does not fail on error connecting event hub: 0ms
    Event Strategy Implementations AllForTxStrategy common behaviour #constructor throws if event hubs argument is not a promise:   âœ“ Event Strategy Implementations AllForTxStrategy common behaviour #constructor throws if event hubs argument is not a promise: 0ms
    Event Strategy Implementations AllForTxStrategy common behaviour #getConnectedEventHubs returns only the connected event hubs:   âœ“ Event Strategy Implementations AllForTxStrategy common behaviour #getConnectedEventHubs returns only the connected event hubs: 1ms
    Event Strategy Implementations AllForTxStrategy common behaviour #getConnectedEventHubs throws if no event hubs are connected:   âœ“ Event Strategy Implementations AllForTxStrategy common behaviour #getConnectedEventHubs throws if no event hubs are connected: 0ms
    Event Strategy Implementations AnyForTxStrategy common behaviour #constructor throws if event hubs argument is not a promise:   âœ“ Event Strategy Implementations AnyForTxStrategy common behaviour #constructor throws if event hubs argument is not a promise: 0ms
    Event Strategy Implementations AnyForTxStrategy common behaviour #getConnectedEventHubs returns only the connected event hubs:   âœ“ Event Strategy Implementations AnyForTxStrategy common behaviour #getConnectedEventHubs returns only the connected event hubs: 0ms
    Event Strategy Implementations AnyForTxStrategy common behaviour #getConnectedEventHubs throws if no event hubs are connected:   âœ“ Event Strategy Implementations AnyForTxStrategy common behaviour #getConnectedEventHubs throws if no event hubs are connected: 0ms
    Event Strategy Implementations AbstractEventStrategy #checkCompletion (abstract) throws if not overridden:   âœ“ Channel organizations returns member services provider IDs from MSP manager: 217ms
    Channel #toString include channel name:   âœ“ Channel #toString include channel name: 1ms
    Channel #toString include peers:   âœ“ Channel #toString include peers: 0ms
    Channel #toString include orderers:   âœ“ Channel #toString include orderers: 0ms
    Channel #compareProposalResponseResults throws if argument is not an array:   âœ“ Channel #compareProposalResponseResults throws if argument is not an array: 1ms
    Channel #compareProposalResponseResults throws if argument is an empty array:   âœ“ Channel #compareProposalResponseResults throws if argument is an empty array: 0ms
    Channel #compareProposalResponseResults returns true for a single poposal response:   âœ“ Channel #compareProposalResponseResults returns true for a single poposal response: 2ms
    Channel #compareProposalResponseResults returns true for matching poposal responses:   âœ“ Channel #compareProposalResponseResults returns true for matching poposal responses: 1ms
    Channel #compareProposalResponseResults returns false for non-matching poposal responses:   âœ“ Channel #compareProposalResponseResults returns false for non-matching poposal responses: 0ms
    Channel #generateUnsignedProposal throws if request is missing:   âœ“ Channel #generateUnsignedProposal throws if request is missing: 0ms
    Channel #generateUnsignedProposal throws if request.args is not an array:   âœ“ Channel #generateUnsignedProposal throws if request.args is not an array: 1ms
    Channel #generateUnsignedProposal throws if request.chaincodeId is missing:   âœ“ Channel #generateUnsignedProposal throws if request.chaincodeId is missing: 0ms
    Channel #generateUnsignedProposal returns proposal with args array of [functionName, requestArgs...]:   âœ“ Channel #generateUnsignedProposal returns proposal with args array of [functionName, requestArgs...]: 4ms
    Channel #generateUnsignedProposal returns a proposal with function name "invoke" if no request.fcn is missing:   âœ“ Channel #generateUnsignedProposal returns a proposal with function name "invoke" if no request.fcn is missing: 2ms
    Channel #generateUnsignedProposal returns a proposal with request.argbytes appended to args array:   âœ“ Channel #generateUnsignedProposal returns a proposal with request.argbytes appended to args array: 2ms
    Channel #generateUnsignedProposal returns a transaction ID:   âœ“ Channel #generateUnsignedProposal returns a transaction ID: 1ms
    Channel #generateUnsignedProposal returns admin transaction ID if admin parameter is true:   âœ“ Channel #generateUnsignedProposal returns admin transaction ID if admin parameter is true: 1ms
    Channel #generateUnsignedProposal returns non-admin transaction ID if admin parameter is false:   âœ“ Event Strategy Implementations AbstractEventStrategy #checkCompletion (abstract) throws if not overridden: 0ms
    Event Strategy Implementations AllForTxStrategy event handling does not call callbacks on first event of two expected events:   âœ“ Event Strategy Implementations AllForTxStrategy event handling does not call callbacks on first event of two expected events: 0ms
    Event Strategy Implementations AllForTxStrategy event handling calls success callback on second event of two expected events:   âœ“ Event Strategy Implementations AllForTxStrategy event handling calls success callback on second event of two expected events: 1ms
    Event Strategy Implementations AllForTxStrategy event handling calls success callback on error then event of two expected events:   âœ“ Event Strategy Implementations AllForTxStrategy event handling calls success callback on error then event of two expected events: 0ms
    Event Strategy Implementations AllForTxStrategy event handling does not call callbacks on first error of two expected events:   âœ“ Event Strategy Implementations AllForTxStrategy event handling does not call callbacks on first error of two expected events: 0ms
    Event Strategy Implementations AllForTxStrategy event handling calls fail callback on second error of two expected events:   âœ“ Event Strategy Implementations AllForTxStrategy event handling calls fail callback on second error of two expected events: 0ms
    Event Strategy Implementations AllForTxStrategy event handling calls success callback on event then error of two expected events:   âœ“ Event Strategy Implementations AllForTxStrategy event handling calls success callback on event then error of two expected events: 0ms
    Event Strategy Implementations AnyForTxStrategy event handling calls success callback on first event of two expected events:   âœ“ Event Strategy Implementations AnyForTxStrategy event handling calls success callback on first event of two expected events: 0ms
    Event Strategy Implementations AnyForTxStrategy event handling calls success callback on error then event of two expected events:   âœ“ Event Strategy Implementations AnyForTxStrategy event handling calls success callback on error then event of two expected events: 0ms
    Event Strategy Implementations AnyForTxStrategy event handling does not call callbacks on first error of two expected events:   âœ“ Event Strategy Implementations AnyForTxStrategy event handling does not call callbacks on first error of two expected events: 0ms
    Event Strategy Implementations AnyForTxStrategy event handling calls fail callback on second error of two expected events:   âœ“ Event Strategy Implementations AnyForTxStrategy event handling calls fail callback on second error of two expected events: 1ms
    TransactionEventHandler #constructor has a default timeout of zero if no options supplied:   âœ“ Channel #generateUnsignedProposal returns non-admin transaction ID if admin parameter is false: 1ms
    Channel #verifyProposalResponse throws if proposal_response is missing:   âœ“ Channel #verifyProposalResponse throws if proposal_response is missing: 1ms
    Channel #verifyProposalResponse throws if parameter is not a ProposalResponse:   âœ“ Channel #verifyProposalResponse throws if parameter is not a ProposalResponse: 0ms
    Channel #verifyProposalResponse throws for unknown MSP ID in proposal response:   âœ“ Channel #verifyProposalResponse throws for unknown MSP ID in proposal response: 0ms
    Channel #verifyProposalResponse returns false if MSP unable to deserialize identity:   âœ“ Channel #verifyProposalResponse returns false if MSP unable to deserialize identity: 2ms
    Channel #verifyProposalResponse returns false if identity not valid:   âœ“ TransactionEventHandler #constructor has a default timeout of zero if no options supplied: 0ms
    TransactionEventHandler #constructor uses timeout from supplied options:   âœ“ TransactionEventHandler #constructor uses timeout from supplied options: 1ms
    TransactionEventHandler event handling: calls registerTxEvent() on event hub with transaction ID:   âœ“ TransactionEventHandler event handling: calls registerTxEvent() on event hub with transaction ID: 0ms
    TransactionEventHandler event handling: calls eventReceived() on strategy when event hub sends valid event:   âœ“ TransactionEventHandler event handling: calls eventReceived() on strategy when event hub sends valid event: 1ms
    TransactionEventHandler event handling: does not call errorReceived() on strategy when event hub sends valid event:   âœ“ TransactionEventHandler event handling: does not call errorReceived() on strategy when event hub sends valid event: 0ms
    TransactionEventHandler event handling: calls errorReceived() on strategy when event hub sends an error:   âœ“ TransactionEventHandler event handling: calls errorReceived() on strategy when event hub sends an error: 0ms
    TransactionEventHandler event handling: does not call eventReceived() on strategy when event hub sends an error:   âœ“ TransactionEventHandler event handling: does not call eventReceived() on strategy when event hub sends an error: 1ms
    TransactionEventHandler event handling: calls unregisterTxEvent() on event hub when event hub sends an event:   âœ“ TransactionEventHandler event handling: calls unregisterTxEvent() on event hub when event hub sends an event: 0ms
    TransactionEventHandler event handling: calls unregisterTxEvent() on event hub when event hub sends an error:   âœ“ TransactionEventHandler event handling: calls unregisterTxEvent() on event hub when event hub sends an error: 1ms
    TransactionEventHandler event handling: fails when event hub sends an invalid event:   âœ“ TransactionEventHandler event handling: fails when event hub sends an invalid event: 1ms
    TransactionEventHandler event handling: succeeds when strategy calls success function after event received:   âœ“ TransactionEventHandler event handling: succeeds when strategy calls success function after event received: 0ms
    TransactionEventHandler event handling: fails when strategy calls fail function after event received:   âœ“ TransactionEventHandler event handling: fails when strategy calls fail function after event received: 0ms
    TransactionEventHandler event handling: succeeds when strategy calls success function after error received:   âœ“ Channel #verifyProposalResponse returns false if identity not valid: 3ms
    Channel #verifyProposalResponse returns false if signature not valid:   âœ“ Channel #verifyProposalResponse returns false if signature not valid: 0ms
    Channel #verifyProposalResponse returns false if signature verification errors:   âœ“ Channel #verifyProposalResponse returns false if signature verification errors: 1ms
    Channel #verifyProposalResponse returns true for valid proposal response:   âœ“ Channel #verifyProposalResponse returns true for valid proposal response: 1ms
    Channel #generateUnsignedTransaction throws if request missing:   âœ“ Channel #generateUnsignedTransaction throws if request missing: 0ms
    Channel #generateUnsignedTransaction throws if request.proposalResponses is not an array:   âœ“ TransactionEventHandler event handling: succeeds when strategy calls success function after error received: 1ms
    TransactionEventHandler event handling: fails when strategy calls fail function after error received:   âœ“ Channel #generateUnsignedTransaction throws if request.proposalResponses is not an array: 0ms
    Channel #generateUnsignedTransaction throws if request.proposal missing:   âœ“ Channel #generateUnsignedTransaction throws if request.proposal missing: 0ms
    Channel #generateUnsignedTransaction throws if no endorsed proposal responses:   âœ“ Channel #generateUnsignedTransaction throws if no endorsed proposal responses: 1ms
    Channel #generateUnsignedTransaction throws if no endorsed proposal responses:   âœ“ Channel #generateUnsignedTransaction throws if no endorsed proposal responses: 0ms
    Channel #generateUnsignedTransaction returns a transaction payload containing first input proposal response payload:   âœ“ TransactionEventHandler event handling: fails when strategy calls fail function after error received: 0ms
    TransactionEventHandler event handling: succeeds immediately with no event hubs:   âœ“ TransactionEventHandler event handling: succeeds immediately with no event hubs: 1ms
    TransactionEventHandler timeouts: fails on timeout if timeout set:   âœ“ TransactionEventHandler timeouts: fails on timeout if timeout set: 2ms
    TransactionEventHandler timeouts: does not timeout if timeout set to zero:   âœ“ TransactionEventHandler timeouts: does not timeout if timeout set to zero: 0ms
    TransactionEventHandler timeouts: timeout failure message includes event hubs that have not responded:   âœ“ TransactionEventHandler timeouts: timeout failure message includes event hubs that have not responded: 1ms
    TransactionEventHandler timeouts: does not timeout if no event hubs:   âœ“ Channel #generateUnsignedTransaction returns a transaction payload containing first input proposal response payload: 1ms
    Channel #sendSignedProposal returns results of calling sendProposal() on peers as an array:   âœ“ Channel #sendSignedProposal returns results of calling sendProposal() on peers as an array: 2ms
    Channel #initialize throws if no request parameter and no peer added:   âœ“ Channel #initialize throws if no request parameter and no peer added: 4ms
    Channel #initialize successful with peer added and no request parameter:   âœ“ TransactionEventHandler timeouts: does not timeout if no event hubs: 0ms

  230 passing (2s)

  âœ“ Channel #initialize successful with peer added and no request parameter: 5ms
    Channel #initialize successful with two peers added and peer name supplied as request target parameter:   âœ“ Channel #initialize successful with two peers added and peer name supplied as request target parameter: 3ms
    Channel #initialize successful with no peer added and a Peer supplied as request target parameter:   âœ“ Channel #initialize successful with no peer added and a Peer supplied as request target parameter: 2ms
    Channel #initialize successful with no peer added and a ChannelPeer supplied as request target parameter:   âœ“ Channel #initialize successful with no peer added and a ChannelPeer supplied as request target parameter: 3ms
    Channel #initialize throws if specified target peer name does not exist:   âœ“ Channel #initialize throws if specified target peer name does not exist: 1ms
    Channel #initialize throws if specified target peer is not a Peer or ChannelPeer:   âœ“ Channel #initialize throws if specified target peer is not a Peer or ChannelPeer: 0ms
    Channel #initialize specified endorsement handler is initialized:   âœ“ Channel #initialize specified endorsement handler is initialized: 2ms
    Channel #initialize specified commit handler is initialized:   âœ“ Channel #initialize specified commit handler is initialized: 2ms
    Channel #initialize successful with no commit handler specified and no commit handler configuration: [14:02:23] Finished 'mocha-fabric-network' after 7.75 s
  âœ“ Channel #initialize successful with no commit handler specified and no commit handler configuration: 3ms
    Channel #initialize configuration update:   âœ“ Channel #initialize configuration update: 1ms
    ChannelEventHub #constructor should log on entry:   âœ“ ChannelEventHub #constructor should log on entry: 0ms
    ChannelEventHub #constructor should call _setReplayDefaults:   âœ“ ChannelEventHub #constructor should call _setReplayDefaults: 0ms
    ChannelEventHub #constructor should throw if channel arg isnt given:   âœ“ ChannelEventHub #constructor should throw if channel arg isnt given: 1ms
    ChannelEventHub #constructor should throw if peer argument isnt given:   âœ“ ChannelEventHub #constructor should throw if peer argument isnt given: 0ms
    ChannelEventHub #getName should call and return _peer.getName():   âœ“ ChannelEventHub #getName should call and return _peer.getName(): 0ms
    ChannelEventHub #getPeerAddr should return null if peer is not set:   âœ“ ChannelEventHub #getPeerAddr should return null if peer is not set: 0ms
    ChannelEventHub #getPeerAddr should return the addr if peer is set:   âœ“ ChannelEventHub #getPeerAddr should return the addr if peer is set: 0ms
    ChannelEventHub #lastBlockNumber should throw an error if a block has not been seen:   âœ“ ChannelEventHub #lastBlockNumber should throw an error if a block has not been seen: 0ms
    ChannelEventHub #lastBlockNumber should return the last block seen:   âœ“ ChannelEventHub #lastBlockNumber should return the last block seen: 1ms
    ChannelEventHub #_checkAllowRegistrations should throw an error if registration is not allowed:   âœ“ ChannelEventHub #_checkAllowRegistrations should throw an error if registration is not allowed: 0ms
    ChannelEventHub #_checkAllowRegistrations should not throw an error if registration is allowed:   âœ“ ChannelEventHub #_checkAllowRegistrations should not throw an error if registration is allowed: 0ms
    ChannelEventHub #isconnected should return the value of the _connected property:   âœ“ ChannelEventHub #isconnected should return the value of the _connected property: 0ms
    ChannelEventHub #connect should throw an error if required fields are not instantiated:   âœ“ ChannelEventHub #connect should throw an error if required fields are not instantiated: 0ms
    ChannelEventHub #connect should call the correct logs on exit:   âœ“ ChannelEventHub #connect should call the correct logs on exit: 0ms
    ChannelEventHub #connect should validate a signed event:   âœ“ ChannelEventHub #connect should validate a signed event: 1ms
    ChannelEventHub #connect should not validate a null signed event:   âœ“ ChannelEventHub #connect should not validate a null signed event: 0ms
    ChannelEventHub #connect should log when options are null:   âœ“ ChannelEventHub #connect should log when options are null: 0ms
    ChannelEventHub #connect should log when options are undefined:   âœ“ ChannelEventHub #connect should log when options are undefined: 0ms
    ChannelEventHub #connect should call _connect:   âœ“ ChannelEventHub #connect should call _connect: 1ms
    ChannelEventHub #_connect should log on entry:   âœ“ ChannelEventHub #_connect should log on entry: 1ms
    ChannelEventHub #_connect should log if _connect_running:   âœ“ ChannelEventHub #_connect should log if _connect_running: 0ms
    ChannelEventHub #_connect should log if _connected:   âœ“ ChannelEventHub #_connect should log if _connected: 0ms
    ChannelEventHub #_connect should throw an error if there is no peer:   âœ“ ChannelEventHub #_connect should throw an error if there is no peer: 1ms
    ChannelEventHub #_connect should set up the class before setting up the disconnect timeout:   âœ“ ChannelEventHub #_connect should set up the class before setting up the disconnect timeout: 0ms
    ChannelEventHub #_connect should log and call _disconnect on timeout:   âœ“ ChannelEventHub #_connect should log and call _disconnect on timeout: 1ms
    ChannelEventHub #_connect should generate the correct config and log it:   âœ“ ChannelEventHub #_connect should generate the correct config and log it: 1ms
    ChannelEventHub #_connect should call stream on data and log about an unbknown response:   âœ“ ChannelEventHub #_connect should call stream on data and log about an unbknown response: 1ms
    ChannelEventHub #_connect should call stream on data log about an success response and not success status:   âœ“ ChannelEventHub #_connect should call stream on data log about an success response and not success status: 1ms
    ChannelEventHub #_connect should call stream on data log about an success response and success status if _ending_block_seen and _last_block_seen set:   âœ“ ChannelEventHub #_connect should call stream on data log about an success response and success status if _ending_block_seen and _last_block_seen set: 1ms
    ChannelEventHub #_connect should call stream on data log about an success response and success status if _ending_block_seen and _last_block_seen not set:   âœ“ ChannelEventHub #_connect should call stream on data log about an success response and success status if _ending_block_seen and _last_block_seen not set: 1ms
    ChannelEventHub #_connect should log if the stream id and _current stream are not the same:   âœ“ ChannelEventHub #_connect should log if the stream id and _current stream are not the same: 1ms
    ChannelEventHub #_connect should log debug and errors if connected and an error is detected:   âœ“ ChannelEventHub #_connect should log debug and errors if connected and an error is detected: 2ms
    ChannelEventHub #_connect should log debug and errors if connected and a string error is detected:   âœ“ ChannelEventHub #_connect should log debug and errors if connected and a string error is detected: 1ms
    ChannelEventHub #_connect should create a block and update _last_seen_block:   âœ“ ChannelEventHub #_connect should create a block and update _last_seen_block: 1ms
    ChannelEventHub #_connect should parse a filtered block and update _last_seen_block:   âœ“ ChannelEventHub #_connect should parse a filtered block and update _last_seen_block: 2ms
    ChannelEventHub #_connect should call disconnect if called with instance of Error:   âœ“ ChannelEventHub #_connect should call disconnect if called with instance of Error: 1ms
    ChannelEventHub #disconnect should call a debug log:   âœ“ ChannelEventHub #disconnect should call a debug log: 0ms
    ChannelEventHub #disconnect should log, call _disconnect and change disconnect_running to false:   âœ“ ChannelEventHub #disconnect should log, call _disconnect and change disconnect_running to false: 0ms
    ChannelEventHub #close should be an alias of disconnect:   âœ“ ChannelEventHub #close should be an alias of disconnect: 0ms
    ChannelEventHub #_disconnect should log and call the correct functions:   âœ“ ChannelEventHub #_disconnect should log and call the correct functions: 0ms
    ChannelEventHub #_shutdown should cancel and end the stream:   âœ“ ChannelEventHub #_shutdown should cancel and end the stream: 0ms
    ChannelEventHub #_shutdown should close the event client:   âœ“ ChannelEventHub #_shutdown should close the event client: 0ms
    ChannelEventHub #_sendRegistration should call _stream.write with the correct params:   âœ“ ChannelEventHub #_sendRegistration should call _stream.write with the correct params: 1ms
    ChannelEventHub #_validateSignedEvent should log entry:   âœ“ ChannelEventHub #_validateSignedEvent should log entry: 0ms
    ChannelEventHub #_validateSignedEvent should log exit:   âœ“ ChannelEventHub #_validateSignedEvent should log exit: 0ms
    ChannelEventHub #_validateSignedEvent should throw an error if no signature is given:   âœ“ ChannelEventHub #_validateSignedEvent should throw an error if no signature is given: 0ms
    ChannelEventHub #_validateSignedEvent should throw an error if no payload is given:   âœ“ ChannelEventHub #_validateSignedEvent should throw an error if no payload is given: 1ms
    ChannelEventHub #_validateSignedEvent should return the correct event:   âœ“ ChannelEventHub #_validateSignedEvent should return the correct event: 0ms
    ChannelEventHub #_sendSignedRegistration should log on entry:   âœ“ ChannelEventHub #_sendSignedRegistration should log on entry: 0ms
    ChannelEventHub #_sendSignedRegistration should call _stream.write:   âœ“ ChannelEventHub #_sendSignedRegistration should call _stream.write: 0ms
    ChannelEventHub #generateUnsignedRegistration should log on entry:   âœ“ ChannelEventHub #generateUnsignedRegistration should log on entry: 0ms
    ChannelEventHub #generateUnsignedRegistration should throw if options arg is not given:   âœ“ ChannelEventHub #generateUnsignedRegistration should throw if options arg is not given: 0ms
    ChannelEventHub #generateUnsignedRegistration should throw if no txId arg is given:   âœ“ ChannelEventHub #generateUnsignedRegistration should throw if no txId arg is given: 0ms
    ChannelEventHub #generateUnsignedRegistration should throw if no txId arg is given:   âœ“ ChannelEventHub #generateUnsignedRegistration should throw if no txId arg is given: 0ms
    ChannelEventHub #generateUnsignedRegistration should throw if no certificate arg is given:   âœ“ ChannelEventHub #generateUnsignedRegistration should throw if no certificate arg is given: 0ms
    ChannelEventHub #generateUnsignedRegistration should throw if no mspId arg is given:   âœ“ ChannelEventHub #generateUnsignedRegistration should throw if no mspId arg is given: 0ms
    ChannelEventHub #generateUnsignedRegistration should create a new Identity and TransactionID if they arent given:   âœ“ ChannelEventHub #generateUnsignedRegistration should create a new Identity and TransactionID if they arent given: 1ms
    ChannelEventHub #generateUnsignedRegistration should return the seek payload with more than zero blocks:   âœ“ ChannelEventHub #generateUnsignedRegistration should return the seek payload with more than zero blocks: 0ms
    ChannelEventHub #generateUnsignedRegistration should return the seek payload with more than zero blocks given identity and txId:   âœ“ ChannelEventHub #generateUnsignedRegistration should return the seek payload with more than zero blocks given identity and txId: 0ms
    ChannelEventHub #generateUnsignedRegistration should return the seek payload with more than zero blocks given identity and txId:   âœ“ ChannelEventHub #generateUnsignedRegistration should return the seek payload with more than zero blocks given identity and txId: 1ms
    ChannelEventHub #generateUnsignedRegistration should return the seek payload with more than zero blocks given identity and txId:   âœ“ ChannelEventHub #generateUnsignedRegistration should return the seek payload with more than zero blocks given identity and txId: 1ms
    ChannelEventHub #generateUnsignedRegistration should return the seek payload with zero blocks given identity and txId:   âœ“ ChannelEventHub #generateUnsignedRegistration should return the seek payload with zero blocks given identity and txId: 0ms
    ChannelEventHub #generateUnsignedRegistration should return the seek payload with zero blocks given identity and txId:   âœ“ ChannelEventHub #generateUnsignedRegistration should return the seek payload with zero blocks given identity and txId: 1ms
    ChannelEventHub #_closeAllCallbacks should log on entry and exit:   âœ“ ChannelEventHub #_closeAllCallbacks should log on entry and exit: 0ms
    ChannelEventHub #_closeAllCallbacks should log if no onError method in block registration:   âœ“ ChannelEventHub #_closeAllCallbacks should log if no onError method in block registration: 1ms
    ChannelEventHub #_closeAllCallbacks should log and call onError if onError method in block registration:   âœ“ ChannelEventHub #_closeAllCallbacks should log and call onError if onError method in block registration: 1ms
    ChannelEventHub #_closeAllCallbacks should log if no onError method on transaction registration:   âœ“ ChannelEventHub #_closeAllCallbacks should log if no onError method on transaction registration: 0ms
    ChannelEventHub #_closeAllCallbacks should log and call onError if onError method in block registration:   âœ“ ChannelEventHub #_closeAllCallbacks should log and call onError if onError method in block registration: 0ms
    ChannelEventHub #_closeAllCallbacks should log for each chaincode registration:   âœ“ ChannelEventHub #_closeAllCallbacks should log for each chaincode registration: 0ms
    ChannelEventHub #_closeAllCallbacks should call onError if onError method in chaincode registration:   âœ“ ChannelEventHub #_closeAllCallbacks should call onError if onError method in chaincode registration: 0ms
    ChannelEventHub #_checkReplay should log on entry and exit:   âœ“ ChannelEventHub #_checkReplay should log on entry and exit: 0ms
    ChannelEventHub #_checkReplay should throw if there is a problem with the startBlock parameter:   âœ“ ChannelEventHub #_checkReplay should throw if there is a problem with the startBlock parameter: 0ms
    ChannelEventHub #_checkReplay should return 1 when startBlock is set:   âœ“ ChannelEventHub #_checkReplay should return 1 when startBlock is set: 0ms
    ChannelEventHub #_checkReplay should throw an error if there is a problem with the endBlock parameter:   âœ“ ChannelEventHub #_checkReplay should throw an error if there is a problem with the endBlock parameter: 0ms
    ChannelEventHub #_checkReplay should throw an error if startBlock is greater than endBlock:   âœ“ ChannelEventHub #_checkReplay should throw an error if startBlock is greater than endBlock: 1ms
    ChannelEventHub #_checkReplay should throw an error if startBlock given and _haveRegistrations is true:   âœ“ ChannelEventHub #_checkReplay should throw an error if startBlock given and _haveRegistrations is true: 0ms
    ChannelEventHub #_checkReplay should throw an error if endBlock given and _haveRegistrations is true:   âœ“ ChannelEventHub #_checkReplay should throw an error if endBlock given and _haveRegistrations is true: 1ms
    ChannelEventHub #_checkReplay should throw an error if startBlock and _connected:   âœ“ ChannelEventHub #_checkReplay should throw an error if startBlock and _connected: 0ms
    ChannelEventHub #_checkReplay should throw an error if endBlock and _connected:   âœ“ ChannelEventHub #_checkReplay should throw an error if endBlock and _connected: 1ms
    ChannelEventHub #_checkReplay should return 2 if endBlock is set:   âœ“ ChannelEventHub #_checkReplay should return 2 if endBlock is set: 0ms
    ChannelEventHub #_checkReplay should return 2 if endBlock is set to newest:   âœ“ ChannelEventHub #_checkReplay should return 2 if endBlock is set to newest: 0ms
    ChannelEventHub #_haveRegistrations should return true if count is greater than 0:   âœ“ ChannelEventHub #_haveRegistrations should return true if count is greater than 0: 0ms
    ChannelEventHub #_haveRegistrations should return false if count is less than 1:   âœ“ ChannelEventHub #_haveRegistrations should return false if count is less than 1: 0ms
    ChannelEventHub #_checkConnection should log on entry and exit:   âœ“ ChannelEventHub #_checkConnection should log on entry and exit: 0ms
    ChannelEventHub #_checkConnection should log if not connected and connect is not running:   âœ“ ChannelEventHub #_checkConnection should log if not connected and connect is not running: 0ms
    ChannelEventHub #_checkConnection should check stream and log if connected:   âœ“ ChannelEventHub #_checkConnection should check stream and log if connected: 1ms
    ChannelEventHub #_checkConnection should check stream and log if connect running:   âœ“ ChannelEventHub #_checkConnection should check stream and log if connect running: 0ms
    ChannelEventHub #_checkConnection should call _diconnect and throw an error if not ready and connect is not running:   âœ“ ChannelEventHub #_checkConnection should call _diconnect and throw an error if not ready and connect is not running: 0ms
    ChannelEventHub #checkConnection should log and call isStreamReady twice if force_reconnect is false:   âœ“ ChannelEventHub #checkConnection should log and call isStreamReady twice if force_reconnect is false: 1ms
    ChannelEventHub #checkConnection should throw a string and call _disconnect if _stream is not set but force_reconnect is:   âœ“ ChannelEventHub #checkConnection should throw a string and call _disconnect if _stream is not set but force_reconnect is: 0ms
    ChannelEventHub #checkConnection should throw a string and call _disconnect if _stream is not set but force_reconnect is:   âœ“ ChannelEventHub #checkConnection should throw a string and call _disconnect if _stream is not set but force_reconnect is: 1ms
    ChannelEventHub #checkConnection should call resume if connection is paused:   âœ“ ChannelEventHub #checkConnection should call resume if connection is paused: 1ms
    ChannelEventHub #checkConnection should call connect if not ready:   âœ“ ChannelEventHub #checkConnection should call connect if not ready: 0ms
    ChannelEventHub #checkConnection should do nothing if not paused and ready:   âœ“ ChannelEventHub #checkConnection should do nothing if not paused and ready: 0ms
    ChannelEventHub #checkConnection should call _connect if _stream not set:   âœ“ ChannelEventHub #checkConnection should call _connect if _stream not set: 0ms
    ChannelEventHub #registerChaincodeEvent should throw if ccid is missing:   âœ“ ChannelEventHub #registerChaincodeEvent should throw if ccid is missing: 1ms
    ChannelEventHub #registerChaincodeEvent should throw if eventname is missing:   âœ“ ChannelEventHub #registerChaincodeEvent should throw if eventname is missing: 0ms
    ChannelEventHub #registerChaincodeEvent should throw if onEvent is missing:   âœ“ ChannelEventHub #registerChaincodeEvent should throw if onEvent is missing: 0ms
    ChannelEventHub #registerChaincodeEvent should call _checkAllowRegistrations, _checkReplay and _checkConnection:   âœ“ ChannelEventHub #registerChaincodeEvent should call _checkAllowRegistrations, _checkReplay and _checkConnection: 0ms
    ChannelEventHub #registerChaincodeEvent should use an existing cbtable:   âœ“ ChannelEventHub #registerChaincodeEvent should use an existing cbtable: 1ms
    ChannelEventHub #unregisterChaincodeEvent should log on entry:   âœ“ ChannelEventHub #unregisterChaincodeEvent should log on entry: 1ms
    ChannelEventHub #unregisterChaincodeEvent should throw an error if listen_handle is not given:   âœ“ ChannelEventHub #unregisterChaincodeEvent should throw an error if listen_handle is not given: 0ms
    ChannelEventHub #unregisterChaincodeEvent should throw an error if chaincodeRegistrant is not found and throw is true:   âœ“ ChannelEventHub #unregisterChaincodeEvent should throw an error if chaincodeRegistrant is not found and throw is true: 0ms
    ChannelEventHub #unregisterChaincodeEvent should call delete if chaincodeRegistrant is not found and throw is false:   âœ“ ChannelEventHub #unregisterChaincodeEvent should call delete if chaincodeRegistrant is not found and throw is false: 0ms
    ChannelEventHub #unregisterChaincodeEvent should call not delete the _chaincodeRegistrants entry if the set has length > 0:   âœ“ ChannelEventHub #unregisterChaincodeEvent should call not delete the _chaincodeRegistrants entry if the set has length > 0: 0ms
    ChannelEventHub #unregisterChaincodeEvent should not call delete if cbtable not found:   âœ“ ChannelEventHub #unregisterChaincodeEvent should not call delete if cbtable not found: 1ms
    ChannelEventHub #registerBlockEvent should throw an error if onEvent is missing:   âœ“ ChannelEventHub #registerBlockEvent should throw an error if onEvent is missing: 1ms
    ChannelEventHub #registerBlockEvent should call _checkAllowRegistrations and _checkConnection:   âœ“ ChannelEventHub #registerBlockEvent should call _checkAllowRegistrations and _checkConnection: 1ms
    ChannelEventHub #registerBlockEvent shold change default_disconnect to true:   âœ“ ChannelEventHub #registerBlockEvent shold change default_disconnect to true: 0ms
    ChannelEventHub #registerBlockEvent should set _start_stop_registration, unregister_action callback and call unregisterBlockEvent:   âœ“ ChannelEventHub #registerBlockEvent should set _start_stop_registration, unregister_action callback and call unregisterBlockEvent: 0ms
    ChannelEventHub #unregisterBlockEvent should log on entry:   âœ“ ChannelEventHub #unregisterBlockEvent should log on entry: 0ms
    ChannelEventHub #unregisterBlockEvent should delete the registration from the _transactionRegistrations object:   âœ“ ChannelEventHub #unregisterBlockEvent should delete the registration from the _transactionRegistrations object: 0ms
    ChannelEventHub #unregisterBlockEvent should throw if no transaction for txid found and throwError is true:   âœ“ ChannelEventHub #unregisterBlockEvent should throw if no transaction for txid found and throwError is true: 0ms
    ChannelEventHub #unregisterBlockEvent should not throw if no transaction for txid found and throwError is false:   âœ“ ChannelEventHub #unregisterBlockEvent should not throw if no transaction for txid found and throwError is false: 0ms
    ChannelEventHub #registerTxEvent should log on entry:   âœ“ ChannelEventHub #registerTxEvent should log on entry: 1ms
    ChannelEventHub #registerTxEvent should throw if txid is missing:   âœ“ ChannelEventHub #registerTxEvent should throw if txid is missing: 1ms
    ChannelEventHub #registerTxEvent should throw if txid is not a string:   âœ“ ChannelEventHub #registerTxEvent should throw if txid is not a string: 1ms
    ChannelEventHub #registerTxEvent should throw if onEvent is missing:   âœ“ ChannelEventHub #registerTxEvent should throw if onEvent is missing: 0ms
    ChannelEventHub #registerTxEvent should throw if transactionId has already been registered:   âœ“ ChannelEventHub #registerTxEvent should throw if transactionId has already been registered: 0ms
    ChannelEventHub #registerTxEvent should all _CheckAllowRegistrations and _checkReplay:   âœ“ ChannelEventHub #registerTxEvent should all _CheckAllowRegistrations and _checkReplay: 0ms
    ChannelEventHub #registerTxEvent should cahnge txid to lowercase change default_unregister to false and change default_disconnect to true:   âœ“ ChannelEventHub #registerTxEvent should cahnge txid to lowercase change default_unregister to false and change default_disconnect to true: 0ms
    ChannelEventHub #registerTxEvent should set the unregister_action:   âœ“ ChannelEventHub #registerTxEvent should set the unregister_action: 1ms
    ChannelEventHub #unregisterTxEvent should log on entry:   âœ“ ChannelEventHub #unregisterTxEvent should log on entry: 0ms
    ChannelEventHub #unregisterTxEvent should delete the registration from the _transactionRegistrations object:   âœ“ ChannelEventHub #unregisterTxEvent should delete the registration from the _transactionRegistrations object: 0ms
    ChannelEventHub #unregisterTxEvent should throw if no transaction for txid found and throwError is true:   âœ“ ChannelEventHub #unregisterTxEvent should throw if no transaction for txid found and throwError is true: 1ms
    ChannelEventHub #unregisterTxEvent should not throw if no transaction for txid found and throwError is false:   âœ“ ChannelEventHub #unregisterTxEvent should not throw if no transaction for txid found and throwError is false: 0ms
    ChannelEventHub #_processBlockEvents should return null and do nothing if there are no _blockRegistrations:   âœ“ ChannelEventHub #_processBlockEvents should return null and do nothing if there are no _blockRegistrations: 0ms
    ChannelEventHub #_processBlockEvents should call onEvent for each block:   âœ“ ChannelEventHub #_processBlockEvents should call onEvent for each block: 0ms
    ChannelEventHub #_processTxEvents should log if there are no transaction registrations:   âœ“ ChannelEventHub #_processTxEvents should log if there are no transaction registrations: 0ms
    ChannelEventHub #_processTxEvents should log if given a block number:   âœ“ ChannelEventHub #_processTxEvents should log if given a block number: 0ms
    ChannelEventHub #_processTxEvents should call _checkTransactionId for each filtered transaction:   âœ“ ChannelEventHub #_processTxEvents should call _checkTransactionId for each filtered transaction: 0ms
    ChannelEventHub #_processTxEvents should log if not given a block number:   âœ“ ChannelEventHub #_processTxEvents should log if not given a block number: 0ms
    ChannelEventHub #_processTxEvents should call _checkTransaction id for each data item:   âœ“ ChannelEventHub #_processTxEvents should call _checkTransaction id for each data item: 0ms
    ChannelEventHub #_checkTransactionId should not call _callTransactionListener if trans_reg is null:   âœ“ ChannelEventHub #_checkTransactionId should not call _callTransactionListener if trans_reg is null: 0ms
    ChannelEventHub #_checkTransactionId should call _callTransactionListener if trans_reg is not null:   âœ“ ChannelEventHub #_checkTransactionId should call _callTransactionListener if trans_reg is not null: 0ms
    ChannelEventHub #_checkTransactionId should call _callTransactionListener if all_trans_reg is not null:   âœ“ ChannelEventHub #_checkTransactionId should call _callTransactionListener if all_trans_reg is not null: 0ms
    ChannelEventHub #_callTransactionListener should log on entry:   âœ“ ChannelEventHub #_callTransactionListener should log on entry: 0ms
    ChannelEventHub #_callTransactionListener shold call convertValidationCode and trans_reg.onEvent:   âœ“ ChannelEventHub #_callTransactionListener shold call convertValidationCode and trans_reg.onEvent: 0ms
    ChannelEventHub #_callTransactionListener should call unregisterTxEvent and log:   âœ“ ChannelEventHub #_callTransactionListener should call unregisterTxEvent and log: 0ms
    ChannelEventHub #_callTransactionListener should call unregisterTxEvent and log:   âœ“ ChannelEventHub #_callTransactionListener should call unregisterTxEvent and log: 0ms
    ChannelEventHub #_processChaincodeEvents should log and return if no chaincodeRegistrants are present:   âœ“ ChannelEventHub #_processChaincodeEvents should log and return if no chaincodeRegistrants are present: 0ms
    ChannelEventHub #_processChaincodeEvents should do nothing if there are no filtered_transactions:   âœ“ ChannelEventHub #_processChaincodeEvents should do nothing if there are no filtered_transactions: 0ms
    ChannelEventHub #_processChaincodeEvents should do nothing if there are no transaction_actions on a filtered transaction:   âœ“ ChannelEventHub #_processChaincodeEvents should do nothing if there are no transaction_actions on a filtered transaction: 1ms
    ChannelEventHub #_processChaincodeEvents should do nothing if there are no chaincode_actions on a filtered transaction_actions:   âœ“ ChannelEventHub #_processChaincodeEvents should do nothing if there are no chaincode_actions on a filtered transaction_actions: 0ms
    ChannelEventHub #_processChaincodeEvents should call _callChaincodeListener for every chaincode_action:   âœ“ ChannelEventHub #_processChaincodeEvents should call _callChaincodeListener for every chaincode_action: 0ms
    ChannelEventHub #_processChaincodeEvents should log for for each data in the block:   âœ“ ChannelEventHub #_processChaincodeEvents should log for for each data in the block: 1ms
    ChannelEventHub #_processChaincodeEvents should log if an error is thrown when unmarshalling the transaction:   âœ“ ChannelEventHub #_processChaincodeEvents should log if an error is thrown when unmarshalling the transaction: 0ms
    ChannelEventHub #_processChaincodeEvents should log if block is not of type endorser:   âœ“ ChannelEventHub #_processChaincodeEvents should log if block is not of type endorser: 0ms
    ChannelEventHub #_processChaincodeEvents should log if there are no transactions:   âœ“ ChannelEventHub #_processChaincodeEvents should log if there are no transactions: 0ms
    ChannelEventHub #_processChaincodeEvents should log if there are no transaction actions:   âœ“ ChannelEventHub #_processChaincodeEvents should log if there are no transaction actions: 0ms
    ChannelEventHub #_processChaincodeEvents should log and call _callChaincodeListener:   âœ“ ChannelEventHub #_processChaincodeEvents should log and call _callChaincodeListener: 1ms
    ChannelEventHub #_callChaincodeListener should log and return if chaincode registrant is not found:   âœ“ ChannelEventHub #_callChaincodeListener should log and return if chaincode registrant is not found: 1ms
    ChannelEventHub #_callChaincodeListener should log and call convertValidationCode:   âœ“ ChannelEventHub #_callChaincodeListener should log and call convertValidationCode: 0ms
    ChannelEventHub #_callChaincodeListener should log if the event name does not match the filter:   âœ“ ChannelEventHub #_callChaincodeListener should log if the event name does not match the filter: 0ms
    ChannelEventHub #_callChaincodeListener should delete the payload from the chaincode event if filtered is true:   âœ“ ChannelEventHub #_callChaincodeListener should delete the payload from the chaincode event if filtered is true: 0ms
    ChannelEventHub #_callChaincodeListener should call delete if unregister is true:   âœ“ ChannelEventHub #_callChaincodeListener should call delete if unregister is true: 0ms
    ChannelEventHub #_callChaincodeListener should call disconnect if disconnect is true:   âœ“ ChannelEventHub #_callChaincodeListener should call disconnect if disconnect is true: 0ms
    ChannelEventHub #_checkReplayEnd should exit without calling if _ending_block_number is null:   âœ“ ChannelEventHub #_checkReplayEnd should exit without calling if _ending_block_number is null: 0ms
    ChannelEventHub #_checkReplayEnd should exit if _ending_block_number is greater than _last_block_seen:   âœ“ ChannelEventHub #_checkReplayEnd should exit if _ending_block_number is greater than _last_block_seen: 0ms
    ChannelEventHub #_checkReplayEnd should exit if _start_stop_registration is null:   âœ“ ChannelEventHub #_checkReplayEnd should exit if _start_stop_registration is null: 0ms
    ChannelEventHub #_checkReplayEnd should exit if _start_stop_registration is not null and unregister is false:   âœ“ ChannelEventHub #_checkReplayEnd should exit if _start_stop_registration is not null and unregister is false: 0ms
    ChannelEventHub #_checkReplayEnd should exit if _start_stop_registration is not null and unregister is true after calling unregister_action:   âœ“ ChannelEventHub #_checkReplayEnd should exit if _start_stop_registration is not null and unregister is true after calling unregister_action: 1ms
    ChannelEventHub #_checkReplayEnd should exit if _start_stop_registration is not null and disconnect is true after calling disconnect:   âœ“ ChannelEventHub #_checkReplayEnd should exit if _start_stop_registration is not null and disconnect is true after calling disconnect: 0ms
    convertValidationCode should return the code if it is a string:   âœ“ convertValidationCode should return the code if it is a string: 0ms
    convertValidationCode should retrieve the code from a list and return it:   âœ“ convertValidationCode should retrieve the code from a list and return it: 0ms
    isStreamReady should return a defualt false ready status:   âœ“ isStreamReady should return a defualt false ready status: 1ms
    isStreamReady should log evetyhing and return true ready status:   âœ“ isStreamReady should log evetyhing and return true ready status: 0ms
    ChaincodeRegistration #constructor should set the correct properties:   âœ“ ChaincodeRegistration #constructor should set the correct properties: 1ms
    EventRegistration #constructor should log if unregister is not defined:   âœ“ EventRegistration #constructor should log if unregister is not defined: 0ms
    EventRegistration #constructor should set unregister if it is boolean:   âœ“ EventRegistration #constructor should set unregister if it is boolean: 0ms
    EventRegistration #constructor should throw an error if unregister is not undefined, null or boolean:   âœ“ EventRegistration #constructor should throw an error if unregister is not undefined, null or boolean: 0ms
    EventRegistration #constructor should log if disconnect is not defined:   âœ“ EventRegistration #constructor should log if disconnect is not defined: 0ms
    EventRegistration #constructor should set disconnect if it is boolean:   âœ“ EventRegistration #constructor should set disconnect if it is boolean: 0ms
    EventRegistration #constructor should throw an error if disconnect is not undefined, null or boolean:   âœ“ EventRegistration #constructor should throw an error if disconnect is not undefined, null or boolean: 1ms
    EventRegistration #constructor should set the correct parameters:   âœ“ EventRegistration #constructor should set the correct parameters: 0ms
    Client #constructor should define the correct properties:   âœ“ Client #constructor should define the correct properties: 1ms
    Client loadFromConfig should create a Client instance and call loadFromConfig:   âœ“ Client loadFromConfig should create a Client instance and call loadFromConfig: 1ms
    Client #loadFromConfig should get additional network config and set _network_config to it:   âœ“ Client #loadFromConfig should get additional network config and set _network_config to it: 1ms
    Client #loadFromConfig should get additional network config and merge it with the existing config:   âœ“ Client #loadFromConfig should get additional network config and merge it with the existing config: 0ms
    Client #loadFromConfig should get additional network config and set adming and set mspid:   âœ“ Client #loadFromConfig should get additional network config and set adming and set mspid: 0ms
    Client #setTlsClientCertAndKey should set clientCert, cleintKey, clientCerthash and call logger.debug:   âœ“ Client #setTlsClientCertAndKey should set clientCert, cleintKey, clientCerthash and call logger.debug: 0ms
    Client #addTlsClientCertAndKey should generate a new ephemeral key and set _tls_mutual:   âœ“ Client #addTlsClientCertAndKey should generate a new ephemeral key and set _tls_mutual: 1ms
    Client #addTlsClientCertAndKey should generate a new ephemeral key and set _tls_mutual when only clientKey is missing:   âœ“ Client #addTlsClientCertAndKey should generate a new ephemeral key and set _tls_mutual when only clientKey is missing: 1ms
    Client #addTlsClientCertAndKey should add the current _tls_mutual values to the options object:   âœ“ Client #addTlsClientCertAndKey should add the current _tls_mutual values to the options object: 0ms
    Client #addTlsClientCertAndKey should add the current _tls_mutual values to the options object:   âœ“ Client #addTlsClientCertAndKey should add the current _tls_mutual values to the options object: 0ms
    Client #isDevMode should return _devMode:   âœ“ Client #isDevMode should return _devMode: 0ms
    Client #setDevMove should set the value of _devMode:   âœ“ Client #setDevMove should set the value of _devMode: 0ms
    Client #newChannel should throw if _channels.get returns true:   âœ“ Client #newChannel should throw if _channels.get returns true: 0ms
    Client #newChannel should create, add and return a new channel:   âœ“ Client #newChannel should create, add and return a new channel: 1ms
    Client #getChannel should get the channel with its name and return it:   âœ“ Client #getChannel should get the channel with its name and return it: 0ms
    Client #getChannel should get a channel wihtout its name and return it:   âœ“ Client #getChannel should get a channel wihtout its name and return it: 0ms
    Client #getChannel should check the _network_config if no channel is returned and returned the discovered channel:   âœ“ Client #getChannel should check the _network_config if no channel is returned and returned the discovered channel: 1ms
    Client #getChannel should return null as channel does not exist:   âœ“ Client #getChannel should return null as channel does not exist: 0ms
    Client #getChannel should return null since no channels are defined in _network_config:   âœ“ Client #getChannel should return null since no channels are defined in _network_config: 0ms
    Client #getChannel should return null since _network_config does not exist:   âœ“ Client #getChannel should return null since _network_config does not exist: 0ms
    Client #getChannel should call logger.error and return null if errors are turned off:   âœ“ Client #getChannel should call logger.error and return null if errors are turned off: 0ms
    Client #getChannel should call logger.error and throw an error if errors are turned on:   âœ“ Client #getChannel should call logger.error and throw an error if errors are turned on: 0ms
    Client #newPeer should create and return a new peer instance:   âœ“ Client #newPeer should create and return a new peer instance: 0ms
    Client #getPeer should return a peer:   âœ“ Client #getPeer should return a peer: 1ms
    Client #getPeer should throw an error if _network_config not defined:   âœ“ Client #getPeer should throw an error if _network_config not defined: 0ms
    Client #getPeersForOrg should return a list of peers tied to an organisation when given an mspid:   âœ“ Client #getPeersForOrg should return a list of peers tied to an organisation when given an mspid: 0ms
    Client #getPeersForOrg should return a list of peers tied to an organisation when mspid given in client:   âœ“ Client #getPeersForOrg should return a list of peers tied to an organisation when mspid given in client: 1ms
    Client #getPeersForOrg should return an empty list if no mspid is present:   âœ“ Client #getPeersForOrg should return an empty list if no mspid is present: 0ms
    Client #getPeersForOrg should return an empty list if organisation is not found:   âœ“ Client #getPeersForOrg should return an empty list if organisation is not found: 1ms
    Client #newOrderer should create and return a new peer instance:   âœ“ Client #newOrderer should create and return a new peer instance: 0ms
    Client #getOrderer should return an orderer:   âœ“ Client #getOrderer should return an orderer: 0ms
    Client #getOrderer should throw an error when an orderer is not found:   âœ“ Client #getOrderer should throw an error when an orderer is not found: 0ms
    Client #getPeersForOrgOnChannel should return an array of peers in an org available on the channel:   âœ“ Client #getPeersForOrgOnChannel should return an array of peers in an org available on the channel: 1ms
    Client #getPeersForOrgOnChannel should return an array of peers in an org available on the channel when given a single channel name:   âœ“ Client #getPeersForOrgOnChannel should return an array of peers in an org available on the channel when given a single channel name: 0ms
    Client #getCertificateAuthority should throw an error if _network_config is not given:   âœ“ Client #getCertificateAuthority should throw an error if _network_config is not given: 1ms
    Client #getCertificateAuthority should throw an error if _cryptoSuite is not given:   âœ“ Client #getCertificateAuthority should throw an error if _cryptoSuite is not given: 0ms
    Client #getCertificateAuthority should throw an error if ca info is not found:   âœ“ Client #getCertificateAuthority should throw an error if ca info is not found: 1ms
    Client #getCertificateAuthority should throw an error if the client config is not found:   âœ“ Client #getCertificateAuthority should throw an error if the client config is not found: 0ms
    Client #getCertificateAuthority should throw an error if the organization config is not found:   âœ“ Client #getCertificateAuthority should throw an error if the organization config is not found: 0ms
    Client #getCertificateAuthority should throw an error if no ca's are found:   âœ“ Client #getCertificateAuthority should throw an error if no ca's are found: 0ms
    Client #getCertificateAuthority should discover certificate authorities and return the first it finds:   âœ“ Client #getCertificateAuthority should discover certificate authorities and return the first it finds: 0ms
    Client #_buildCAfromConfig should return the ca service:   âœ“ Client #_buildCAfromConfig should return the ca service: 1ms
    Client #_buildCAfromConfig should return the ca service if no certs are returned:   âœ“ Client #_buildCAfromConfig should return the ca service if no certs are returned: 0ms
    Client #getClientConfig should return the client config:   âœ“ Client #getClientConfig should return the client config: 0ms
    Client #getClientConfig should return null:   âœ“ Client #getClientConfig should return null: 0ms
    Client #getMspid should return _mspid:   âœ“ Client #getMspid should return _mspid: 0ms
    Client #newTransactionID should throw if typeof admin is not boolean:   âœ“ Client #newTransactionID should throw if typeof admin is not boolean: 1ms
    Client #newTransactionID should call logger.debug and create a new transactionID instance if admin is not set:   âœ“ Client #newTransactionID should call logger.debug and create a new transactionID instance if admin is not set: 1ms
    Client #newTransactionID should call logger.debug and create a new transactionID instance if admin is true:   âœ“ Client #newTransactionID should call logger.debug and create a new transactionID instance if admin is true: 0ms
    Client #newTransactionID should call logger.debug and create a new transactionID instance if admin is false:   âœ“ Client #newTransactionID should call logger.debug and create a new transactionID instance if admin is false: 0ms
    Client #extractChannelConfig should return the config update as a buffer:   âœ“ Client #extractChannelConfig should return the config update as a buffer: 0ms
    Client #signChannelConfig should throw an error if no config is given:   âœ“ Client #signChannelConfig should throw an error if no config is given: 1ms
    Client #signChannelConfig should throw an error if config is not a buffer:   âœ“ Client #signChannelConfig should throw an error if config is not a buffer: 0ms
    Client #signChannelConfig should return a proto config signature:   âœ“ Client #signChannelConfig should return a proto config signature: 0ms
    Client #createChannel should create a new channel:   âœ“ Client #createChannel should create a new channel: 0ms
    Client #updateChannel should update an existing channel:   âœ“ Client #updateChannel should update an existing channel: 0ms
    Client #_createOrUpdateChannel should throw an error if request is not given:   âœ“ Client #_createOrUpdateChannel should throw an error if request is not given: 0ms
    Client #_createOrUpdateChannel should throw an error if request.name is not given:   âœ“ Client #_createOrUpdateChannel should throw an error if request.name is not given: 0ms
    Client #_createOrUpdateChannel should throw an error if request.txId is not given:   âœ“ Client #_createOrUpdateChannel should throw an error if request.txId is not given: 0ms
    Client #_createOrUpdateChannel should throw an error if request.config is not given:   âœ“ Client #_createOrUpdateChannel should throw an error if request.config is not given: 0ms
    Client #_createOrUpdateChannel should throw an error if request.signatures is not given:   âœ“ Client #_createOrUpdateChannel should throw an error if request.signatures is not given: 1ms
    Client #_createOrUpdateChannel should throw an error if request.signatures is not an array:   âœ“ Client #_createOrUpdateChannel should throw an error if request.signatures is not an array: 0ms
    Client #_createOrUpdateChannel should return the results of the broadcast when have_envelope is true:   âœ“ Client #_createOrUpdateChannel should return the results of the broadcast when have_envelope is true: 0ms
    Client #_createOrUpdateChannel should return the results of the boradcase when have_envelope is false:   âœ“ Client #_createOrUpdateChannel should return the results of the boradcase when have_envelope is false: 1ms
    Client #queryPeers should throw an error if no request is given:   âœ“ Client #queryPeers should throw an error if no request is given: 0ms
    Client #queryPeers should throw an error if no request.target is given:   âœ“ Client #queryPeers should throw an error if no request.target is given: 0ms
    Client #queryPeers should throw an error if undefined target peers are found:   âœ“ Client #queryPeers should throw an error if undefined target peers are found: 1ms
    Client #queryPeers should throw an error if no target peers are found:   âœ“ Client #queryPeers should throw an error if no target peers are found: 1ms
    Client #queryPeers should throw if creating a channel object throws:   âœ“ Client #queryPeers should throw if creating a channel object throws: 1ms
    Client #queryPeers should call discover with the generated discover_request and return the discovered peers:   âœ“ Client #queryPeers should call discover with the generated discover_request and return the discovered peers: 0ms
    Client #queryChannels should throw an error if peer is not given:   âœ“ Client #queryChannels should throw an error if peer is not given: 1ms
    Client #queryChannels should throw an error if the response is an instance of error:   âœ“ Client #queryChannels should throw an error if the response is an instance of error: 1ms
    Client #queryChannels should throw an error if the transaction proposal is not found:   âœ“ Client #queryChannels should throw an error if the transaction proposal is not found: 1ms
    Client #queryChannels should throw an error if we are unsure what is happening:   âœ“ Client #queryChannels should throw an error if we are unsure what is happening: 1ms
    Client #queryChannels should throw an error if transaction proposal results are not arrays:   âœ“ Client #queryChannels should throw an error if transaction proposal results are not arrays: 0ms
    Client #queryChannels should return the query trans for a channel:   âœ“ Client #queryChannels should return the query trans for a channel: 0ms
    Client #queryInstalledChaincodes should throw an error if peer is not given:   âœ“ Client #queryInstalledChaincodes should throw an error if peer is not given: 1ms
    Client #queryInstalledChaincodes should throw an error if we are unsure what is happening:   âœ“ Client #queryInstalledChaincodes should throw an error if we are unsure what is happening: 1ms
    Client #queryInstalledChaincodes should throw an error if the response is not an array:   âœ“ Client #queryInstalledChaincodes should throw an error if the response is not an array: 1ms
    Client #queryInstalledChaincodes should throw an error if the response has no response property:   âœ“ Client #queryInstalledChaincodes should throw an error if the response has no response property: 0ms
    Client #queryInstalledChaincodes should throw an error if the transaction proposal is not found:   âœ“ Client #queryInstalledChaincodes should throw an error if the transaction proposal is not found: 0ms
    Client #queryInstalledChaincodes should return the query trans for a channel:   âœ“ Client #queryInstalledChaincodes should return the query trans for a channel: 0ms
    Client #installChaincode should throw error if not request given:   âœ“ Client #installChaincode should throw error if not request given: 0ms
    Client #installChaincode should throw error if chaincodeId not specified:   âœ“ Client #installChaincode should throw error if chaincodeId not specified: 0ms
    Client #installChaincode should throw error if chaincodeVersion not specified:   âœ“ Client #installChaincode should throw error if chaincodeVersion not specified: 0ms
    Client #installChaincode should throw error if chaincodePath not specified:   âœ“ Client #installChaincode should throw error if chaincodePath not specified: 1ms
    Client #installChaincode should throw error if no peers found: request.targets undefined
  âœ“ Client #installChaincode should throw error if no peers found: 1ms
    Client #installChaincode should install using chaincode ID, chaincode version, and chaincode path: request.targets [ 'peer' ]
  âœ“ Client #installChaincode should install using chaincode ID, chaincode version, and chaincode path: 2ms
    Client #installChaincode should install using chaincode ID, chaincode version, chaincode path, and chaincode type: request.targets [ 'peer' ]
  âœ“ Client #installChaincode should install using chaincode ID, chaincode version, chaincode path, and chaincode type: 1ms
    Client #installChaincode should install using a chaincode package: request.targets [ 'peer' ]
  âœ“ Client #installChaincode should install using a chaincode package: 0ms
    Client #installChaincode should install using an explicit transaction ID: request.targets []
  âœ“ Client #installChaincode should install using an explicit transaction ID: 1ms
    Client #installChaincode should install using the specified target peers: request.targets []
  âœ“ Client #installChaincode should install using the specified target peers: 1ms
    Client #installChaincode should install using the peers discovered for the channel: request.targets undefined
  âœ“ Client #installChaincode should install using the peers discovered for the channel: 0ms
    Client #initCredentialStores should throw an error if no _network_config is present:   âœ“ Client #initCredentialStores should throw an error if no _network_config is present: 1ms
    Client #initCredentialStores should throw an error if no client config is returned:   âœ“ Client #initCredentialStores should throw an error if no client config is returned: 1ms
    Client #initCredentialStores should return true and set the cryptokeystore:   âœ“ Client #initCredentialStores should return true and set the cryptokeystore: 1ms
    Client #setStateStore should thow an error if a class method in keyValueStore is not a function:   âœ“ Client #setStateStore should thow an error if a class method in keyValueStore is not a function: 1ms
    Client #setStateStore should set _stateStore and _userContext properties:   âœ“ Client #setStateStore should set _stateStore and _userContext properties: 0ms
    Client #_getSigningIdentity should throw an error if not admin identity and no user context present:   âœ“ Client #_getSigningIdentity should throw an error if not admin identity and no user context present: 0ms
    Client #_getSigningIdentity should reutrn the admin identity:   âœ“ Client #_getSigningIdentity should reutrn the admin identity: 0ms
    Client #_getSigningIdentity should return the users signing identify:   âœ“ Client #_getSigningIdentity should return the users signing identify: 0ms
    Client #setAdminSigningIdentity should throw if no private key is given:   âœ“ Client #setAdminSigningIdentity should throw if no private key is given: 0ms
    Client #setAdminSigningIdentity should throw if private key is null:   âœ“ Client #setAdminSigningIdentity should throw if private key is null: 0ms
    Client #setAdminSigningIdentity should throw if private key is empty string:   âœ“ Client #setAdminSigningIdentity should throw if private key is empty string: 0ms
    Client #setAdminSigningIdentity should throw if no certificate key is given:   âœ“ Client #setAdminSigningIdentity should throw if no certificate key is given: 0ms
    Client #setAdminSigningIdentity should throw if certificate is null:   âœ“ Client #setAdminSigningIdentity should throw if certificate is null: 0ms
    Client #setAdminSigningIdentity should throw if certificate is empty string:   âœ“ Client #setAdminSigningIdentity should throw if certificate is empty string: 1ms
    Client #setAdminSigningIdentity should throw if no mspid is given:   âœ“ Client #setAdminSigningIdentity should throw if no mspid is given: 1ms
    Client #setAdminSigningIdentity should throw if certificate is null:   âœ“ Client #setAdminSigningIdentity should throw if certificate is null: 0ms
    Client #setAdminSigningIdentity should throw if certificate is empty string:   âœ“ Client #setAdminSigningIdentity should throw if certificate is empty string: 0ms
    Client #setAdminSigningIdentity should retrieve CryptoSuite and import the public and private keys before creating an identity:   âœ“ Client #setAdminSigningIdentity should retrieve CryptoSuite and import the public and private keys before creating an identity: 0ms
    Client #setAdminSigningIdentity should create a new CryptoSuite and import the public and private keys before creating an identity:   âœ“ Client #setAdminSigningIdentity should create a new CryptoSuite and import the public and private keys before creating an identity: 0ms
    Client #_setAdminFromConfig should throw an error if no network config is present:   âœ“ Client #_setAdminFromConfig should throw an error if no network config is present: 0ms
    Client #_setAdminFromConfig should not call anything if client config is null:   âœ“ Client #_setAdminFromConfig should not call anything if client config is null: 0ms
    Client #_setAdminFromConfig should attempt to retrieve organization info:   âœ“ Client #_setAdminFromConfig should attempt to retrieve organization info: 0ms
    Client #_setAdminFromConfig should retrieve organization info and call setAdmnSigningIdentity with it:   âœ“ Client #_setAdminFromConfig should retrieve organization info and call setAdmnSigningIdentity with it: 0ms
    Client #_setMspidFromConfig should throw if network config is not found:   âœ“ Client #_setMspidFromConfig should throw if network config is not found: 0ms
    Client #_setMspidFromConfig should call nothing if getClientConfig returns nothing:   âœ“ Client #_setMspidFromConfig should call nothing if getClientConfig returns nothing: 0ms
    Client #_setMspidFromConfig should call nothing if getOrganization returns nothing:   âœ“ Client #_setMspidFromConfig should call nothing if getOrganization returns nothing: 0ms
    Client #_setMspidFromConfig should set _mspid:   âœ“ Client #_setMspidFromConfig should set _mspid: 0ms
    Client #_setUserFromConfig should throw an error if no username option is given:   âœ“ Client #_setUserFromConfig should throw an error if no username option is given: 0ms
    Client #_setUserFromConfig should throw if _network_config not set:   âœ“ Client #_setUserFromConfig should throw if _network_config not set: 0ms
    Client #_setUserFromConfig should throw if _stateStore not set:   âœ“ Client #_setUserFromConfig should throw if _stateStore not set: 0ms
    Client #_setUserFromConfig should throw if _cryptoSuite not set:   âœ“ Client #_setUserFromConfig should throw if _cryptoSuite not set: 0ms
    Client #_setUserFromConfig should return the user:   âœ“ Client #_setUserFromConfig should return the user: 1ms
    Client #_setUserFromConfig should throw an error if user is not enrolled and no password is given:   âœ“ Client #_setUserFromConfig should throw an error if user is not enrolled and no password is given: 0ms
    Client #_setUserFromConfig should throw an error if no client config is found:   âœ“ Client #_setUserFromConfig should throw an error if no client config is found: 0ms
    Client #_setUserFromConfig should throw an error if no organization config is found:   âœ“ Client #_setUserFromConfig should throw an error if no organization config is found: 0ms
    Client #_setUserFromConfig should create a user when private key is accessible:   âœ“ Client #_setUserFromConfig should create a user when private key is accessible: 0ms
    Client #_setUserFromConfig should create a user when private key is not accessible:   âœ“ Client #_setUserFromConfig should create a user when private key is not accessible: 0ms
    Client #_setUserFromConfig should create a user when private key is not accessible and whos key is valid:   âœ“ Client #_setUserFromConfig should create a user when private key is not accessible and whos key is valid: 0ms
    Client #saveUserToStateStore should throw if no _userContext found:   âœ“ Client #saveUserToStateStore should throw if no _userContext found: 0ms
    Client #saveUserToStateStore should throw if _userContext.name is not found:   âœ“ Client #saveUserToStateStore should throw if _userContext.name is not found: 0ms
    Client #saveUserToStateStore should throw if _stateStore is not found:   âœ“ Client #saveUserToStateStore should throw if _stateStore is not found: 0ms
    Client #saveUserToStateStore should return the user context:   âœ“ Client #saveUserToStateStore should return the user context: 0ms
    Client #setUserContext should throw an error if user is not set:   âœ“ Client #setUserContext should throw an error if user is not set: 1ms
    Client #setUserContext should save the user to the state store and return it:   âœ“ Client #setUserContext should save the user to the state store and return it: 0ms
    Client #setUserContext should return the user:   âœ“ Client #setUserContext should return the user: 0ms
    Client #setUserContext should return the user:   âœ“ Client #setUserContext should return the user: 1ms
    Client #getUserContext should throw an error if name is undefined and checkPersistence is truthy:   âœ“ Client #getUserContext should throw an error if name is undefined and checkPersistence is truthy: 1ms
    Client #getUserContext should throw an error if checkPersistence truthy and name invalid:   âœ“ Client #getUserContext should throw an error if checkPersistence truthy and name invalid: 0ms
    Client #getUserContext should throw an error if checkPersistence truthy and name invalid:   âœ“ Client #getUserContext should throw an error if checkPersistence truthy and name invalid: 0ms
    Client #getUserContext should throw an error if checkPersistence truthy and name invalid:   âœ“ Client #getUserContext should throw an error if checkPersistence truthy and name invalid: 1ms
    Client #getUserContext should throw an error if checkPersistence truthy and name invalid:   âœ“ Client #getUserContext should throw an error if checkPersistence truthy and name invalid: 0ms
    Client #getUserContext should return _userContext if _userContext.getName returns value:   âœ“ Client #getUserContext should return _userContext if _userContext.getName returns value: 0ms
    Client #getUserContext should return _userContext if _userContext and name given:   âœ“ Client #getUserContext should return _userContext if _userContext and name given: 0ms
    Client #getUserContext should return null if name is not set:   âœ“ Client #getUserContext should return null if name is not set: 0ms
    Client #getUserContext should return null if _stateStore is null:   âœ“ Client #getUserContext should return null if _stateStore is null: 0ms
    Client #getUserContext should return the retrieved user context:   âœ“ Client #getUserContext should return the retrieved user context: 0ms
    Client #getUserContext should return null when user context not found:   âœ“ Client #getUserContext should return null when user context not found: 1ms
    Client #getUserContext should return null when checkPersistence is not a boolean:   âœ“ Client #getUserContext should return null when checkPersistence is not a boolean: 0ms
    Client #loadUserFromStateStore should return null if no memberStr found:   âœ“ Client #loadUserFromStateStore should return null if no memberStr found: 0ms
    Client #loadUserFromStateStore should return null if newUser to data returns nothing:   âœ“ Client #loadUserFromStateStore should return null if newUser to data returns nothing: 0ms
    Client #loadUserFromStateStore should return the user:   âœ“ Client #loadUserFromStateStore should return the user: 1ms
    Client #getStateStore should return the _stateStore:   âœ“ Client #getStateStore should return the _stateStore: 0ms
    Client #createUser should throw an error if no opts are given:   âœ“ Client #createUser should throw an error if no opts are given: 0ms
    Client #createUser should throw an error if opts.username is not given:   âœ“ Client #createUser should throw an error if opts.username is not given: 0ms
    Client #createUser should throw an error if opts.username is less than 1 character long:   âœ“ Client #createUser should throw an error if opts.username is less than 1 character long: 0ms
    Client #createUser should throw an error if opts.mspid is less than 1 character long:   âœ“ Client #createUser should throw an error if opts.mspid is less than 1 character long: 0ms
    Client #createUser should throw an error if opts.cryptoContent is not given:   âœ“ Client #createUser should throw an error if opts.cryptoContent is not given: 1ms
    Client #createUser should throw an error if opts.cryptoContent.privateKey and privateKeyPEM are not given:   âœ“ Client #createUser should throw an error if opts.cryptoContent.privateKey and privateKeyPEM are not given: 1ms
    Client #createUser should throw an error if opts.cryptoContent.privateKey, privateKeyPEM and privateKeyObj are not given:   âœ“ Client #createUser should throw an error if opts.cryptoContent.privateKey, privateKeyPEM and privateKeyObj are not given: 0ms
    Client #createUser should throw an error if opts.cryptoContent.signedCert and signedCertPEM are not given:   âœ“ Client #createUser should throw an error if opts.cryptoContent.signedCert and signedCertPEM are not given: 0ms
    Client #createUser should return a user:   âœ“ Client #createUser should return a user: 0ms
    Client #createUser should return a user if getCryptoSuite returns null:   âœ“ Client #createUser should return a user if getCryptoSuite returns null: 3ms
    Client #createUser should return a user if getCryptoSuite does not return null:   âœ“ Client #createUser should return a user if getCryptoSuite does not return null: 0ms
    Client #createUser should return a user if getCryptoSuite does not return null:   âœ“ Client #createUser should return a user if getCryptoSuite does not return null: 1ms
    Client #createUser should return a user if getCryptoSuite does not return null:   âœ“ Client #createUser should return a user if getCryptoSuite does not return null: 1ms
    Client #createUser should return a user if getCryptoSuite does not return null:   âœ“ Client #createUser should return a user if getCryptoSuite does not return null: 1ms
    Client #getTargetPeers should throw an error if the target peer is empty object:   âœ“ Client #getTargetPeers should throw an error if the target peer is empty object: 1ms
    Client #getTargetPeers should return null if no targets are provided:   âœ“ Client #getTargetPeers should return null if no targets are provided: 0ms
    Client #getTargetPeers should get the peer if peer names are given:   âœ“ Client #getTargetPeers should get the peer if peer names are given: 1ms
    Client #getTargetPeers should return the peer if list of peer objects passed in:   âœ“ Client #getTargetPeers should return the peer if list of peer objects passed in: 0ms
    Client #getTargetOrderer should throw an error if request_orderer is not given:   âœ“ Client #getTargetOrderer should throw an error if request_orderer is not given: 0ms
    Client #getTargetOrderer should throw an error if request_orderer is not a string or instance of Orderer:   âœ“ Client #getTargetOrderer should throw an error if request_orderer is not a string or instance of Orderer: 1ms
    Client #getTargetOrderer should throw an error if no channel config is found:   âœ“ Client #getTargetOrderer should throw an error if no channel config is found: 0ms
    Client #getTargetOrderer should throw an error if orderers arent found:   âœ“ Client #getTargetOrderer should throw an error if orderers arent found: 0ms
    Client #getTargetOrderer should return the orderer if orderer given as string:   âœ“ Client #getTargetOrderer should return the orderer if orderer given as string: 0ms
    Client #getTargetOrderer should return the orderer if orderer is instance of Orderer:   âœ“ Client #getTargetOrderer should return the orderer if orderer is instance of Orderer: 0ms
    Client #getTargetOrderer should return channel orderer if request_orderers not given:   âœ“ Client #getTargetOrderer should return channel orderer if request_orderers not given: 0ms
    Client #getTargetOrderer should get a channel and return an orderer:   âœ“ Client #getTargetOrderer should get a channel and return an orderer: 1ms
    Client #getClientCertHash should return he clientCertHash in client._tls_mutual:   âœ“ Client #getClientCertHash should return he clientCertHash in client._tls_mutual: 1ms
    Client #getClientCertHash should create a cert and key and return null:   âœ“ Client #getClientCertHash should create a cert and key and return null: 1ms
    Client #getClientCertHash should create a cert and key and return the cert hash:   âœ“ Client #getClientCertHash should create a cert and key and return the cert hash: 1ms
    Client #_checkTLScert_n_key should return opts:   âœ“ Client #_checkTLScert_n_key should return opts: 0ms
    Client #_checkTLScert_n_key should call addTlsClientCertAndKey and return opts:   âœ“ Client #_checkTLScert_n_key should call addTlsClientCertAndKey and return opts: 0ms
    Client computeHash should return then hash:   âœ“ Client computeHash should return then hash: 0ms
    Client readFile should reject with error:   âœ“ Client readFile should reject with error: 1ms
    Client readFile should resolve with null:   âœ“ Client readFile should resolve with null: 1ms
    Client readFile should resolve with the data:   âœ“ Client readFile should resolve with the data: 0ms
    Client _getChaincodeDeploymentSpec should return the stored chaincode spec:   âœ“ Client _getChaincodeDeploymentSpec should return the stored chaincode spec: 0ms
    Client _getChaincodeDeploymentSpec should be rejected:   âœ“ Client _getChaincodeDeploymentSpec should be rejected: 0ms
    Client _getChaincodeDeploymentSpec should return a chaincode deployment spec when package returns no data:   âœ“ Client _getChaincodeDeploymentSpec should return a chaincode deployment spec when package returns no data: 0ms
    Client _getChaincodeDeploymentSpec should return a chaincode deployment spec when package returns data:   âœ“ Client _getChaincodeDeploymentSpec should return a chaincode deployment spec when package returns data: 0ms
    Client _stringToSignature should return an empty aray if no signatures are given:   âœ“ Client _stringToSignature should return an empty aray if no signatures are given: 0ms
    Client _stringToSignature should return a list of signatures if signature contains correct properties:   âœ“ Client _stringToSignature should return a list of signatures if signature contains correct properties: 1ms
    Client _stringToSignature should return a list of signatures that have been decoded:   âœ“ Client _stringToSignature should return a list of signatures that have been decoded: 0ms
    Client _getNetworkConfig should throw an error if there is no configuration given:   âœ“ Client _getNetworkConfig should throw an error if there is no configuration given: 0ms
    Client _getNetworkConfig should throw if config.version is missing:   âœ“ Client _getNetworkConfig should throw if config.version is missing: 0ms
    Client _getNetworkConfig should throw if schema config is missing:   âœ“ Client _getNetworkConfig should throw if schema config is missing: 0ms
    Client _getNetworkConfig should throw if schema config is missing:   âœ“ Client _getNetworkConfig should throw if schema config is missing: 1ms
    Client _getNetworkConfig should return the new network config when config is an object:   âœ“ Client _getNetworkConfig should return the new network config when config is an object: 0ms
    Client _getNetworkConfig should return the new network config when config is a yaml file path:   âœ“ Client _getNetworkConfig should return the new network config when config is a yaml file path: 0ms
    Client _getNetworkConfig should return the new network config when config is a yml file path:   âœ“ Client _getNetworkConfig should return the new network config when config is a yml file path: 0ms
    Client _getNetworkConfig should return the new network config when config is a yaml file path:   âœ“ Client _getNetworkConfig should return the new network config when config is a yaml file path: 0ms
    Client _getNetworkConfig should return the new network config when config is a yaml file path:   âœ“ Client _getNetworkConfig should return the new network config when config is a yaml file path: 1ms
    Config #constructor should call nconf, Config.mapSettings and set the correct properties:   âœ“ Config #constructor should call nconf, Config.mapSettings and set the correct properties: 0ms
    Config #mapSettings should add the settings to the store:   âœ“ Config #mapSettings should add the settings to the store: 1ms
    Config #reorderFileStores should re-add file store items where bottom is false:   âœ“ Config #reorderFileStores should re-add file store items where bottom is false: 0ms
    Config #reorderFileStores should re-add file store items where bottom is true:   âœ“ Config #reorderFileStores should re-add file store items where bottom is true: 1ms
    Config #file should call Config.reorderFileStores when given a string:   âœ“ Config #file should call Config.reorderFileStores when given a string: 2ms
    Config #file should throw an error when not given a string:   âœ“ Config #file should throw an error when not given a string: 1ms
    Config #get should return a value when _config.get does not throw error:   âœ“ Config #get should return a value when _config.get does not throw error: 1ms
    Config #get should return the default value when _config.get does not throw error:   âœ“ Config #get should return the default value when _config.get does not throw error: 1ms
    Config #get should return the default value when _config.get returns null:   âœ“ Config #get should return the default value when _config.get returns null: 1ms
    Config #get should return the default value when _config.get returns undefined:   âœ“ Config #get should return the default value when _config.get returns undefined: 1ms
    Config #set should call _config.set:   âœ“ Config #set should call _config.set: 0ms
    Constants should set the correct LSCC constant:   âœ“ Constants should set the correct LSCC constant: 1ms
    Constants should set the correct QSCC constant:   âœ“ Constants should set the correct QSCC constant: 0ms
    Constants should set the correct CSCC constant:   âœ“ Constants should set the correct CSCC constant: 0ms
    Constants should set the correct SYSTEM_CHANNEL_NAME constant:   âœ“ Constants should set the correct SYSTEM_CHANNEL_NAME constant: 0ms
    Constants should set the correct NetworkConfig.ENDORSING_PEER_ROLE constant:   âœ“ Constants should set the correct NetworkConfig.ENDORSING_PEER_ROLE constant: 0ms
    Constants should set the correct NetworkConfig.CHAINCODE_QUERY_ROLE constant:   âœ“ Constants should set the correct NetworkConfig.CHAINCODE_QUERY_ROLE constant: 0ms
    Constants should set the correct NetworkConfig.LEDGER_QUERY_ROLE constant:   âœ“ Constants should set the correct NetworkConfig.LEDGER_QUERY_ROLE constant: 0ms
    Constants should set the correct NetworkConfig.EVENT_SOURCE_ROLE constant:   âœ“ Constants should set the correct NetworkConfig.EVENT_SOURCE_ROLE constant: 0ms
    Constants should set the correct NetworkConfig.DISCOVERY_ROLE constant:   âœ“ Constants should set the correct NetworkConfig.DISCOVERY_ROLE constant: 0ms
    Constants should set the correct NetworkConfig.ALL_ROLES constant:   âœ“ Constants should set the correct NetworkConfig.ALL_ROLES constant: 0ms
    Constants should set the correct NetworkConfig.ROLES constant:   âœ“ Constants should set the correct NetworkConfig.ROLES constant: 0ms
    Orderer #constructor should not permit creation with a non-valid url:   âœ“ Orderer #constructor should not permit creation with a non-valid url: 0ms
    Orderer #constructor should not permit creation without an url:   âœ“ Orderer #constructor should not permit creation without an url: 0ms
    Orderer #close should call close on the orderer client:   âœ“ Orderer #close should call close on the orderer client: 0ms
    Orderer #close should not call close on the orderer client:   âœ“ Orderer #close should not call close on the orderer client: 0ms
    Orderer #sendBroadcast should reject a Promise if envelope does not exist:   âœ“ Orderer #sendBroadcast should reject a Promise if envelope does not exist: 1ms
    Orderer #sendBroadcast should log and reject on error during `waitForReady`:   âœ“ Orderer #sendBroadcast should log and reject on error during `waitForReady`: 1ms
    Orderer #sendBroadcast should log and reject a Promise on timeout:   âœ“ Orderer #sendBroadcast should log and reject a Promise on timeout: 3ms
    Orderer #sendBroadcast should log and reject if there is an invalid response:   âœ“ Orderer #sendBroadcast should log and reject if there is an invalid response: 3ms
    Orderer #sendBroadcast should log and reject if there is an error in the response with no error code:   âœ“ Orderer #sendBroadcast should log and reject if there is an error in the response with no error code: 1ms
    Orderer #sendBroadcast should log and reject if there is an error in the response with a non-matched error code:   âœ“ Orderer #sendBroadcast should log and reject if there is an error in the response with a non-matched error code: 1ms
    Orderer #sendBroadcast should log and reject if there is an error in the response with a matched error code:   âœ“ Orderer #sendBroadcast should log and reject if there is an error in the response with a matched error code: 1ms
    Orderer #sendBroadcast should log and reject if there is an object error in the response with a matched error code:   âœ“ Orderer #sendBroadcast should log and reject if there is an object error in the response with a matched error code: 1ms
    Orderer #sendBroadcast should log and reject if there is an object error in the response without a matched error code:   âœ“ Orderer #sendBroadcast should log and reject if there is an object error in the response without a matched error code: 1ms
    Orderer #sendBroadcast should resolve if there is a valid response:   âœ“ Orderer #sendBroadcast should resolve if there is a valid response: 1ms
    Orderer #sendDeliver should reject a Promise if envelope does not exist:   âœ“ Orderer #sendDeliver should reject a Promise if envelope does not exist: 0ms
    Orderer #sendDeliver should reject on error during `waitForReady`:   âœ“ Orderer #sendDeliver should reject on error during `waitForReady`: 0ms
    Orderer #sendDeliver should log and reject on error during `deliver`:   âœ“ Orderer #sendDeliver should log and reject on error during `deliver`: 2ms
    Orderer #sendDeliver should reject a Promise on timeout:   âœ“ Orderer #sendDeliver should reject a Promise on timeout: 3ms
    Orderer #sendDeliver should log and reject a Promise on if no `Type` within response:   âœ“ Orderer #sendDeliver should log and reject a Promise on if no `Type` within response: 1ms
    Orderer #sendDeliver should log and reject a Promise on if no `SUCCESS` within status response:   âœ“ Orderer #sendDeliver should log and reject a Promise on if no `SUCCESS` within status response: 1ms
    Orderer #sendDeliver should reject if there is an error in the response with a non-matched error code:   âœ“ Orderer #sendDeliver should reject if there is an error in the response with a non-matched error code: 0ms
    Orderer #sendDeliver should reject if there is an error in the response with a no error code and disconnect:   âœ“ Orderer #sendDeliver should reject if there is an error in the response with a no error code and disconnect: 1ms
    Orderer #sendDeliver should reject if there is an error in the response with a non-matched error code and disconnect:   âœ“ Orderer #sendDeliver should reject if there is an error in the response with a non-matched error code and disconnect: 1ms
    Orderer #sendDeliver should log and reject if there is an error in the response with a matched error code and disconnect:   âœ“ Orderer #sendDeliver should log and reject if there is an error in the response with a matched error code and disconnect: 1ms
    Orderer #sendDeliver should log and reject if there is an error in the response with a matched error code and disconnect if returned error is an Error object:   âœ“ Orderer #sendDeliver should log and reject if there is an error in the response with a matched error code and disconnect if returned error is an Error object: 1ms
    Orderer #sendDeliver should log and reject if string error is thrown:   âœ“ Orderer #sendDeliver should log and reject if string error is thrown: 1ms
    Orderer #sendDeliver should log on status updates:   âœ“ Orderer #sendDeliver should log on status updates: 1ms
    Orderer #sendDeliver should deal with `block` and `status` response types :   âœ“ Orderer #sendDeliver should deal with `block` and `status` response types : 1ms
    Orderer #toString should return a printable representation of the object:   âœ“ Orderer #toString should return a printable representation of the object: 0ms
    Organization #constructor should throw if name parameter is missing:   âœ“ Organization #constructor should throw if name parameter is missing: 1ms
    Organization #constructor should throw if name parameter is null:   âœ“ Organization #constructor should throw if name parameter is null: 0ms
    Organization #constructor should throw if mspid parameter is missing:   âœ“ Organization #constructor should throw if mspid parameter is missing: 1ms
    Organization #constructor should throw if mspid parameter is null:   âœ“ Organization #constructor should throw if mspid parameter is null: 0ms
    Organization #constructor should log entry:   âœ“ Organization #constructor should log entry: 1ms
    Organization #constructor should initialise parameters:   âœ“ Organization #constructor should initialise parameters: 0ms
    Organization #getName should get the organization name:   âœ“ Organization #getName should get the organization name: 0ms
    Organization #getMspid should get the mspid:   âœ“ Organization #getMspid should get the mspid: 0ms
    Organization #addPeer should add a peer to the internal array:   âœ“ Organization #addPeer should add a peer to the internal array: 0ms
    Organization #getPeers should get the peers array:   âœ“ Organization #getPeers should get the peers array: 1ms
    Organization #addCertificateAuthority should add a certificate authority to the internal array:   âœ“ Organization #addCertificateAuthority should add a certificate authority to the internal array: 0ms
    Organization #getCertificateAuthorities should get the certificate authority array:   âœ“ Organization #getCertificateAuthorities should get the certificate authority array: 0ms
    Organization #setAdminPrivateKey should set the admin private key:   âœ“ Organization #setAdminPrivateKey should set the admin private key: 0ms
    Organization #getAdminPrivateKey should return the admin private key:   âœ“ Organization #getAdminPrivateKey should return the admin private key: 1ms
    Organization #setAdminCert should set the admin certificate:   âœ“ Organization #setAdminCert should set the admin certificate: 0ms
    Organization #getAdminCert should return the admin certificate:   âœ“ Organization #getAdminCert should return the admin certificate: 0ms
    Organization #toString should return a string representation of the Organization object:   âœ“ Organization #toString should return a string representation of the Organization object: 1ms
    Package #fromBuffer should load a smart contract package from a buffer [golang]:   âœ“ Package #fromBuffer should load a smart contract package from a buffer [golang]: 7ms
    Package #fromBuffer should load a smart contract package from a buffer with metadata [golang]:   âœ“ Package #fromBuffer should load a smart contract package from a buffer with metadata [golang]: 2ms
    Package #fromBuffer should load a smart contract package from a buffer [javascript]:   âœ“ Package #fromBuffer should load a smart contract package from a buffer [javascript]: 2ms
    Package #fromBuffer should load a smart contract package from a buffer with metadata [javascript]:   âœ“ Package #fromBuffer should load a smart contract package from a buffer with metadata [javascript]: 3ms
    Package #fromBuffer should load a smart contract package from a buffer [typescript]:   âœ“ Package #fromBuffer should load a smart contract package from a buffer [typescript]: 2ms
    Package #fromBuffer should load a smart contract package from a buffer with metadata [typescript]:   âœ“ Package #fromBuffer should load a smart contract package from a buffer with metadata [typescript]: 2ms
    Package #fromBuffer should load a smart contract package from a buffer [java]:   âœ“ Package #fromBuffer should load a smart contract package from a buffer [java]: 2ms
    Package #fromBuffer should load a smart contract package from a buffer with metadata [java]:   âœ“ Package #fromBuffer should load a smart contract package from a buffer with metadata [java]: 2ms
    Package #fromDirectory should create a smart contract package from a directory [golang]:   âœ“ Package #fromDirectory should create a smart contract package from a directory [golang]: 8ms
    Package #fromDirectory should create a smart contract package from a directory with metadata [golang]:   âœ“ Package #fromDirectory should create a smart contract package from a directory with metadata [golang]: 5ms
    Package #fromDirectory should create a smart contract package from a directory [javascript]:   âœ“ Package #fromDirectory should create a smart contract package from a directory [javascript]: 9ms
    Package #fromDirectory should create a smart contract package from a directory with metadata [javascript]:   âœ“ Package #fromDirectory should create a smart contract package from a directory with metadata [javascript]: 7ms
    Package #fromDirectory should create a smart contract package from a directory [typescript]:   âœ“ Package #fromDirectory should create a smart contract package from a directory [typescript]: 5ms
    Package #fromDirectory should create a smart contract package from a directory with metadata [typescript]:   âœ“ Package #fromDirectory should create a smart contract package from a directory with metadata [typescript]: 5ms
    Package #fromDirectory should create a smart contract package from a directory [java]:   âœ“ Package #fromDirectory should create a smart contract package from a directory [java]: 4ms
    Package #fromDirectory should create a smart contract package from a directory with metadata [java]:   âœ“ Package #fromDirectory should create a smart contract package from a directory with metadata [java]: 5ms
    Package #toBuffer should save a smart contract package to a buffer [golang]:   âœ“ Package #toBuffer should save a smart contract package to a buffer [golang]: 2ms
    Package #toBuffer should save a smart contract package to a buffer [javascript]:   âœ“ Package #toBuffer should save a smart contract package to a buffer [javascript]: 2ms
    Package #toBuffer should save a smart contract package to a buffer [typescript]:   âœ“ Package #toBuffer should save a smart contract package to a buffer [typescript]: 3ms
    Package #toBuffer should save a smart contract package to a buffer [java]:   âœ“ Package #toBuffer should save a smart contract package to a buffer [java]: 5ms
    Packager #package should log on entry:   âœ“ Packager #package should log on entry: 1ms
    Packager #package should log and not package if in dev mode:   âœ“ Packager #package should log and not package if in dev mode: 0ms
    Packager #package should reject if missing chaincodePath parameter:   âœ“ Packager #package should reject if missing chaincodePath parameter: 0ms
    Packager #package should log and handle `node` chaincode types:   âœ“ Packager #package should log and handle `node` chaincode types: 0ms
    Packager #package should handle `CAR` chaincode types:   âœ“ Packager #package should handle `CAR` chaincode types: 1ms
    Packager #package should handle default `goLang` chaincode types:   âœ“ Packager #package should handle default `goLang` chaincode types: 0ms
    Packager #package should handle `JAVA` chaincode types:   âœ“ Packager #package should handle `JAVA` chaincode types: 1ms
    Peer #constructor should not permit creation with a non-valid url:   âœ“ Peer #constructor should not permit creation with a non-valid url: 0ms
    Peer #constructor should not permit creation without an url:   âœ“ Peer #constructor should not permit creation without an url: 1ms
    Peer #close should call close on the endorser client if it exists:   âœ“ Peer #close should call close on the endorser client if it exists: 1ms
    Peer #close should call close on the discovery client if it exists:   âœ“ Peer #close should call close on the discovery client if it exists: 0ms
    Peer #sendProposal should log function entry:   âœ“ Peer #sendProposal should log function entry: 1ms
    Peer #sendProposal should reject if no proposal:   âœ“ Peer #sendProposal should reject if no proposal: 0ms
    Peer #sendProposal should reject on timeout:   âœ“ Peer #sendProposal should reject on timeout: 2ms
    Peer #sendProposal should log and reject Error object on proposal response error string:   âœ“ Peer #sendProposal should log and reject Error object on proposal response error string: 1ms
    Peer #sendProposal should reject Error object on proposal response error object:   âœ“ Peer #sendProposal should reject Error object on proposal response error object: 0ms
    Peer #sendProposal should log and reject on undefined proposal response:   âœ“ Peer #sendProposal should log and reject on undefined proposal response: 0ms
    Peer #sendProposal should log and reject on invalid proposal response:   âœ“ Peer #sendProposal should log and reject on invalid proposal response: 0ms
    Peer #sendProposal should log and reject on proposal response error status greater than or equal to 400:   âœ“ Peer #sendProposal should log and reject on proposal response error status greater than or equal to 400: 0ms
    Peer #sendProposal should resolve on valid proposal response:   âœ“ Peer #sendProposal should resolve on valid proposal response: 0ms
    Peer #sendProposal should mark errors from chaincode as proposal response:   âœ“ Peer #sendProposal should mark errors from chaincode as proposal response: 0ms
    Peer #sendProposal should not mark errors as proposal response if not a proposal response:   âœ“ Peer #sendProposal should not mark errors as proposal response if not a proposal response: 2ms
    Peer #sendDiscovery should log on entry:   âœ“ Peer #sendDiscovery should log on entry: 1ms
    Peer #sendDiscovery should reject if no request to send:   âœ“ Peer #sendDiscovery should reject if no request to send: 1ms
    Peer #sendDiscovery should log and reject on timeout:   âœ“ Peer #sendDiscovery should log and reject on timeout: 3ms
    Peer #sendDiscovery should log and reject Error object on discover Response error string:   âœ“ Peer #sendDiscovery should log and reject Error object on discover Response error string: 1ms
    Peer #sendDiscovery should log and reject Error object on discover Response error object:   âœ“ Peer #sendDiscovery should log and reject Error object on discover Response error object: 1ms
    Peer #sendDiscovery should log and reject Error object on null response from discover:   âœ“ Peer #sendDiscovery should log and reject Error object on null response from discover: 0ms
    Peer #sendDiscovery should log and resolve on good response from discover:   âœ“ Peer #sendDiscovery should log and resolve on good response from discover: 0ms
    Peer #toString should return a string representation of the object:   âœ“ Peer #toString should return a string representation of the object: 0ms
    Policy #EndorsementPolicy.buildPolicy should throw if no policy provided and no valid msps:   âœ“ Policy #EndorsementPolicy.buildPolicy should throw if no policy provided and no valid msps: 1ms
    Policy #EndorsementPolicy.buildPolicy should create and set a one of any policy if no policy provided:   âœ“ Policy #EndorsementPolicy.buildPolicy should create and set a one of any policy if no policy provided: 0ms
    Policy #EndorsementPolicy.buildPolicy should use the policy if provided:   âœ“ Policy #EndorsementPolicy.buildPolicy should use the policy if provided: 1ms
    Policy #buildPrincipal should throw if the identity type is unknown:   âœ“ Policy #buildPrincipal should throw if the identity type is unknown: 0ms
    Policy #buildPrincipal should throw if the identity type is unimplemented:   âœ“ Policy #buildPrincipal should throw if the identity type is unimplemented: 0ms
    Policy #buildPrincipal should throw if invalid role name passed:   âœ“ Policy #buildPrincipal should throw if invalid role name passed: 0ms
    Policy #buildPrincipal should throw if invalid mspid passed:   âœ“ Policy #buildPrincipal should throw if invalid mspid passed: 0ms
    Policy #buildPrincipal should throw if no mspid passed:   âœ“ Policy #buildPrincipal should throw if no mspid passed: 1ms
    Policy #buildPrincipal should set the role to peer if peer role:   âœ“ Policy #buildPrincipal should set the role to peer if peer role: 1ms
    Policy #buildPrincipal should set the role to member if member role:   âœ“ Policy #buildPrincipal should set the role to member if member role: 1ms
    Policy #buildPrincipal should set the role to admin if admin role:   âœ“ Policy #buildPrincipal should set the role to admin if admin role: 0ms
    Policy #getIdentityType should throw no identity type:   âœ“ Policy #getIdentityType should throw no identity type: 1ms
    Policy #getIdentityType should throw if an invalid identity type:   âœ“ Policy #getIdentityType should throw if an invalid identity type: 0ms
    Policy #getIdentityType should return role type:   âœ“ Policy #getIdentityType should return role type: 0ms
    Policy #getIdentityType should return organisation type:   âœ“ Policy #getIdentityType should return organisation type: 0ms
    Policy #getIdentityType should return identity type:   âœ“ Policy #getIdentityType should return identity type: 0ms
    Policy #getPolicyType should throw if invalid type found:   âœ“ Policy #getPolicyType should throw if invalid type found: 0ms
    Policy #getPolicyType should throw if invalid type found:   âœ“ Policy #getPolicyType should throw if invalid type found: 0ms
    Policy #getPolicyType should return "signed-by" if that is the policy type:   âœ“ Policy #getPolicyType should return "signed-by" if that is the policy type: 0ms
    Policy #getPolicyType should return "n-of" if that is the policy type:   âœ“ Policy #getPolicyType should return "n-of" if that is the policy type: 0ms
    Policy #parsePolicy should return a signiture policy with the type "signedby" set if that policy type:   âœ“ Policy #parsePolicy should return a signiture policy with the type "signedby" set if that policy type: 0ms
    Policy #parsePolicy should return a signiture policy with the type "n_out_of" set if that policy type:   âœ“ Policy #parsePolicy should return a signiture policy with the type "n_out_of" set if that policy type: 1ms
    Policy #buildSignaturePolicy should return signed by if that policy type:   âœ“ Policy #buildSignaturePolicy should return signed by if that policy type: 0ms
    Policy #buildSignaturePolicy should recursively build if n-of detected:   âœ“ Policy #buildSignaturePolicy should recursively build if n-of detected: 1ms
    Policy #checkPolicy should throw if missing a passed parameter:   âœ“ Policy #checkPolicy should throw if missing a passed parameter: 0ms
    Policy #checkPolicy should throw if passed parameter is null:   âœ“ Policy #checkPolicy should throw if passed parameter is null: 0ms
    Policy #checkPolicy should throw if passed parameter is undefined:   âœ“ Policy #checkPolicy should throw if passed parameter is undefined: 1ms
    Policy #checkPolicy should throw if passed parameter policy.identities is missing:   âœ“ Policy #checkPolicy should throw if passed parameter policy.identities is missing: 0ms
    Policy #checkPolicy should throw if passed parameter policy.identities is null:   âœ“ Policy #checkPolicy should throw if passed parameter policy.identities is null: 0ms
    Policy #checkPolicy should throw if passed parameter policy.identities is undefined:   âœ“ Policy #checkPolicy should throw if passed parameter policy.identities is undefined: 0ms
    Policy #checkPolicy should throw if passed parameter policy.identities is an empty string:   âœ“ Policy #checkPolicy should throw if passed parameter policy.identities is an empty string: 0ms
    Policy #checkPolicy should throw if passed parameter policy.identities is an empty object:   âœ“ Policy #checkPolicy should throw if passed parameter policy.identities is an empty object: 0ms
    Policy #checkPolicy should throw if passed parameter policy.identities is not an array:   âœ“ Policy #checkPolicy should throw if passed parameter policy.identities is not an array: 0ms
    Policy #checkPolicy should throw if passed parameter policy.policy is missing:   âœ“ Policy #checkPolicy should throw if passed parameter policy.policy is missing: 0ms
    Policy #checkPolicy should throw if passed parameter policy.policy is null:   âœ“ Policy #checkPolicy should throw if passed parameter policy.policy is null: 0ms
    Policy #checkPolicy should throw if passed parameter policy.policy is undefined:   âœ“ Policy #checkPolicy should throw if passed parameter policy.policy is undefined: 0ms
    Policy #checkPolicy should throw if passed parameter policy.policy is an empty object:   âœ“ Policy #checkPolicy should throw if passed parameter policy.policy is an empty object: 0ms
    Policy #checkPolicy should not throw if passed a valid policy:   âœ“ Policy #checkPolicy should not throw if passed a valid policy: 0ms
    Remote #constructor should create a valid instance without any opts:   âœ“ Remote #constructor should create a valid instance without any opts: 1ms
    Remote #constructor should create a valid instance without any opts but with defaults given:   âœ“ Remote #constructor should create a valid instance without any opts but with defaults given: 1ms
    Remote #constructor should throw error if opts value is not an integer or a string:   âœ“ Remote #constructor should throw error if opts value is not an integer or a string: 0ms
    Remote #constructor should ignore pem and ssl-target-name-override opts:   âœ“ Remote #constructor should ignore pem and ssl-target-name-override opts: 1ms
    Remote #constructor should create a valid remote instance when given minimum parameters:   âœ“ Remote #constructor should create a valid remote instance when given minimum parameters: 1ms
    Remote #constructor should create a valid remote instance when given all v10 parameters:   âœ“ Remote #constructor should create a valid remote instance when given all v10 parameters: 1ms
    Remote #constructor should create a valid remote instance when given all non-v10 parameters:   âœ“ Remote #constructor should create a valid remote instance when given all non-v10 parameters: 1ms
    Remote #waitForReady should throw if client is not given:   âœ“ Remote #waitForReady should throw if client is not given: 0ms
    Remote #waitForReady should return a rejected promise after calling client.waitForReady logging the error:   âœ“ Remote #waitForReady should return a rejected promise after calling client.waitForReady logging the error: 0ms
    Remote #waitForReady should return a rejected promise after calling client.waitForReady logging the error:   âœ“ Remote #waitForReady should return a rejected promise after calling client.waitForReady logging the error: 0ms
    Remote #waitForReady should return a resolved promise after calling client.waitForReady:   âœ“ Remote #waitForReady should return a resolved promise after calling client.waitForReady: 0ms
    Remote #getName should return the _name property:   âœ“ Remote #getName should return the _name property: 0ms
    Remote #setName should set the _name property:   âœ“ Remote #setName should set the _name property: 0ms
    Remote #getUrl should set the _name property:   âœ“ Remote #getUrl should set the _name property: 0ms
    Remote #getClientCertHash should return the hashed client certificate:   âœ“ Remote #getClientCertHash should return the hashed client certificate: 0ms
    Remote #getClientCertHash should return null when no client certificate is given:   âœ“ Remote #getClientCertHash should return null when no client certificate is given: 0ms
    Remote #toString should return a string representation of the object:   âœ“ Remote #toString should return a string representation of the object: 0ms
    Endpoint #constructor should throw an error if no protocol is returned:   âœ“ Endpoint #constructor should throw an error if no protocol is returned: 1ms
    Endpoint #constructor should throw an error if neither grpc or grpcs are specified:   âœ“ Endpoint #constructor should throw an error if neither grpc or grpcs are specified: 0ms
    Endpoint #constructor should throw an error if the pem certificate is not a string when using grpcs:   âœ“ Endpoint #constructor should throw an error if the pem certificate is not a string when using grpcs: 1ms
    Endpoint #constructor should throw an error client key and client certificate aren't strings:   âœ“ Endpoint #constructor should throw an error client key and client certificate aren't strings: 0ms
    Endpoint #constructor should throw an error if only clientKey given:   âœ“ Endpoint #constructor should throw an error if only clientKey given: 1ms
    Endpoint #constructor should throw an error if only clientCert:   âœ“ Endpoint #constructor should throw an error if only clientCert: 1ms
    Endpoint #constructor should create new credentials with the client key and client certificate:   âœ“ Endpoint #constructor should create new credentials with the client key and client certificate: 1ms
    Endpoint #constructor should create a valid instance with minimum paramaters:   âœ“ Endpoint #constructor should create a valid instance with minimum paramaters: 1ms
    Endpoint #constructor should create new credentials without the client key and client certificate:   âœ“ Endpoint #constructor should create new credentials without the client key and client certificate: 0ms
    SideDB #CollectionConfig.buildCollectionConfigPackage should log error and throw if passed null:   âœ“ SideDB #CollectionConfig.buildCollectionConfigPackage should log error and throw if passed null: 1ms
    SideDB #CollectionConfig.buildCollectionConfigPackage should log and should throw if passed undefined:   âœ“ SideDB #CollectionConfig.buildCollectionConfigPackage should log and should throw if passed undefined: 0ms
    SideDB #CollectionConfig.buildCollectionConfigPackage should log and should throw if passed non-string or array object:   âœ“ SideDB #CollectionConfig.buildCollectionConfigPackage should log and should throw if passed non-string or array object: 1ms
    SideDB #CollectionConfig.buildCollectionConfigPackage should log and build a collectionConfigPackage from each config item if passed a string:   âœ“ SideDB #CollectionConfig.buildCollectionConfigPackage should log and build a collectionConfigPackage from each config item if passed a string: 0ms
    SideDB #CollectionConfig.buildCollectionConfigPackage should build a collectionConfigPackage from each config item if passed an Array:   âœ“ SideDB #CollectionConfig.buildCollectionConfigPackage should build a collectionConfigPackage from each config item if passed an Array: 0ms
    SideDB #CollectionConfig.checkCollectionConfig should throw if passed no parameters:   âœ“ SideDB #CollectionConfig.checkCollectionConfig should throw if passed no parameters: 1ms
    SideDB #CollectionConfig.checkCollectionConfig should throw if passed an empty object:   âœ“ SideDB #CollectionConfig.checkCollectionConfig should throw if passed an empty object: 0ms
    SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.name does not exist:   âœ“ SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.name does not exist: 0ms
    SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.name is not a string:   âœ“ SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.name is not a string: 0ms
    SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.policy does not exist:   âœ“ SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.policy does not exist: 0ms
    SideDB #CollectionConfig.checkCollectionConfig should call `checkPolicy` on passed collectionConfig.policy:   âœ“ SideDB #CollectionConfig.checkCollectionConfig should call `checkPolicy` on passed collectionConfig.policy: 1ms
    SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.maxPeerCount is not provided:   âœ“ SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.maxPeerCount is not provided: 0ms
    SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.maxPeerCount is not an integer:   âœ“ SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.maxPeerCount is not an integer: 1ms
    SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.requiredPeerCount is not provided:   âœ“ SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.requiredPeerCount is not provided: 0ms
    SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.requiredPeerCount is not an integer:   âœ“ SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.requiredPeerCount is not an integer: 1ms
    SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.maxPeerCount<collectionConfig.requiredPeerCount:   âœ“ SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.maxPeerCount<collectionConfig.requiredPeerCount: 0ms
    SideDB #CollectionConfig.checkCollectionConfig should default `blockToLive` to be zero if not passed as a config item:   âœ“ SideDB #CollectionConfig.checkCollectionConfig should default `blockToLive` to be zero if not passed as a config item: 0ms
    SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.blockToLive is negative:   âœ“ SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.blockToLive is negative: 1ms
    SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.blockToLive is not an integer string:   âœ“ SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.blockToLive is not an integer string: 1ms
    SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.blockToLive is not a valid unsigned int64 string:   âœ“ SideDB #CollectionConfig.checkCollectionConfig should throw if passed collectionConfig.blockToLive is not a valid unsigned int64 string: 1ms
    SideDB #CollectionConfig.checkCollectionConfig should return if passed a correct collectionConfig:   âœ“ SideDB #CollectionConfig.checkCollectionConfig should return if passed a correct collectionConfig: 1ms
    SideDB #CollectionConfig.buildCollectionConfig should log and throw if passed no parameters:   âœ“ SideDB #CollectionConfig.buildCollectionConfig should log and throw if passed no parameters: 1ms
    SideDB #CollectionConfig.buildCollectionConfig should call `checkCollectionConfig` with passed parameters:   âœ“ SideDB #CollectionConfig.buildCollectionConfig should call `checkCollectionConfig` with passed parameters: 0ms
    SideDB #CollectionConfig.buildCollectionConfig should build a principal for each passed identity:   âœ“ SideDB #CollectionConfig.buildCollectionConfig should build a principal for each passed identity: 1ms
    SideDB #CollectionConfig.buildCollectionConfig should build and return a signaturePolicyEnvelope:   âœ“ SideDB #CollectionConfig.buildCollectionConfig should build and return a signaturePolicyEnvelope: 0ms
    TransactionID #constructor should throw if missing Identity parameter:   âœ“ TransactionID #constructor should throw if missing Identity parameter: 0ms
    TransactionID #constructor should set signer to be SigningIdentity if passed Identity parameter is of class User:   âœ“ TransactionID #constructor should set signer to be SigningIdentity if passed Identity parameter is of class User: 1ms
    TransactionID #constructor should set signer to be passed Identity parameter is not of class User:   âœ“ TransactionID #constructor should set signer to be passed Identity parameter is not of class User: 2ms
    TransactionID #constructor should set nonce from the sdkutils:   âœ“ TransactionID #constructor should set nonce from the sdkutils: 5ms
    TransactionID #constructor should set admin to be true if the passed boolean value is true:   âœ“ TransactionID #constructor should set admin to be true if the passed boolean value is true: 1ms
    TransactionID #constructor should set admin to be false if the passed boolean value is false:   âœ“ TransactionID #constructor should set admin to be false if the passed boolean value is false: 1ms
    TransactionID #getTransactionID should return transactionId:   âœ“ TransactionID #getTransactionID should return transactionId: 1ms
    TransactionID #getNonce should return _nonce:   âœ“ TransactionID #getNonce should return _nonce: 2ms
    TransactionID #isAdmin should return boolean true if admin:   âœ“ TransactionID #isAdmin should return boolean true if admin: 0ms
    TransactionID #isAdmin should return boolean false if not admin:   âœ“ TransactionID #isAdmin should return boolean false if not admin: 0ms
    User #constructor should conditionally initialise parameters if cfg is a string:   âœ“ User #constructor should conditionally initialise parameters if cfg is a string: 0ms
    User #constructor should conditionally initialise parameters if cfg is an object with an enrollmentID and roles:   âœ“ User #constructor should conditionally initialise parameters if cfg is an object with an enrollmentID and roles: 0ms
    User #constructor should conditionally initialise parameters if cfg is an object without an enrollmentID or roles:   âœ“ User #constructor should conditionally initialise parameters if cfg is an object without an enrollmentID or roles: 0ms
    User #getName should get the user name:   âœ“ User #getName should get the user name: 0ms
    User #getRoles should get the users roles:   âœ“ User #getRoles should get the users roles: 0ms
    User #setRoles should set the users roles:   âœ“ User #setRoles should set the users roles: 0ms
    User #getAffiliation should get the users affiliation:   âœ“ User #getAffiliation should get the users affiliation: 0ms
    User #setAffiliation should set the users affiliation:   âœ“ User #setAffiliation should set the users affiliation: 0ms
    User #getIdentity should get the users identity:   âœ“ User #getIdentity should get the users identity: 0ms
    User #getSigningIdentity should get the users signing identity:   âœ“ User #getSigningIdentity should get the users signing identity: 0ms
    User #getCryptoSuite should get the users crypto suite:   âœ“ User #getCryptoSuite should get the users crypto suite: 0ms
    User #setCryptoSuite should set the users crypto suite:   âœ“ User #setCryptoSuite should set the users crypto suite: 0ms
    User #setEnrollment should throw error if no privateKey parameter:   âœ“ User #setEnrollment should throw error if no privateKey parameter: 0ms
    User #setEnrollment should throw error if the privateKey parameter is an empty string:   âœ“ User #setEnrollment should throw error if the privateKey parameter is an empty string: 0ms
    User #setEnrollment should throw error if no certificate parameter:   âœ“ User #setEnrollment should throw error if no certificate parameter: 0ms
    User #setEnrollment should throw error if certificate parameter is an empty string:   âœ“ User #setEnrollment should throw error if certificate parameter is an empty string: 0ms
    User #setEnrollment should throw error if no mspId parameter:   âœ“ User #setEnrollment should throw error if no mspId parameter: 1ms
    User #setEnrollment should throw error if mspId parameter is an empty string:   âœ“ User #setEnrollment should throw error if mspId parameter is an empty string: 0ms
    User #setEnrollment should set the cryptoSuite if its not already set:   âœ“ User #setEnrollment should set the cryptoSuite if its not already set: 1ms
    User #setEnrollment should set users crypto key store if skipPersistance is false:   âœ“ User #setEnrollment should set users crypto key store if skipPersistance is false: 1ms
    User #setEnrollment should create and set a pubKey variable if the cryptoKeyStore is set and skipPersistence is false:   âœ“ User #setEnrollment should create and set a pubKey variable if the cryptoKeyStore is set and skipPersistence is false: 0ms
    User #setEnrollment should create and set a pubKey variable if the either the cryptoKeyStore is not set or skipPersitence is true:   âœ“ User #setEnrollment should create and set a pubKey variable if the either the cryptoKeyStore is not set or skipPersitence is true: 0ms
    User #setEnrollment should set the users identity:   âœ“ User #setEnrollment should set the users identity: 1ms
    User #setEnrollment should set the users signingIdentity:   âœ“ User #setEnrollment should set the users signingIdentity: 0ms
    User #isEnrolled should return true if user has both an identity and a signing identity:   âœ“ User #isEnrolled should return true if user has both an identity and a signing identity: 1ms
    User #isEnrolled should return false if user has no identity:   âœ“ User #isEnrolled should return false if user has no identity: 0ms
    User #isEnrolled should return false if user has no signing identity:   âœ“ User #isEnrolled should return false if user has no signing identity: 0ms
    User #isEnrolled should return false if user has no identity or signing identity:   âœ“ User #isEnrolled should return false if user has no identity or signing identity: 0ms
    User #fromString should log and set the users state, name, roles, afilliation and enrollmentSecret:   âœ“ User #fromString should log and set the users state, name, roles, afilliation and enrollmentSecret: 1ms
    User #fromString should throw error if state name is not the same as user name:   âœ“ User #fromString should throw error if state name is not the same as user name: 0ms
    User #fromString should throw error if the state has no mspid:   âœ“ User #fromString should throw error if the state has no mspid: 1ms
    User #fromString should set the users mspid to the state mspid:   âœ“ User #fromString should set the users mspid to the state mspid: 0ms
    User #fromString should set import_promise if no_save is true:   âœ“ User #fromString should set import_promise if no_save is true: 0ms
    User #fromString should throw an error if key is not set if no_save is true:   âœ“ User #fromString should throw an error if key is not set if no_save is true: 0ms
    User #fromString should set import_promise if no_save is false:   âœ“ User #fromString should set import_promise if no_save is false: 0ms
    User #fromString should return the _cryptoSuite key:   âœ“ User #fromString should return the _cryptoSuite key: 1ms
    User #fromString should assign the self variable with a signing identity if the privateKey is private:   âœ“ User #fromString should assign the self variable with a signing identity if the privateKey is private: 1ms
    User #fromString should throw error if private key is missing:   âœ“ User #fromString should throw error if private key is missing: 1ms
    User #toString should create a state and return it when the user has no signingIdentity or identity:   âœ“ User #toString should create a state and return it when the user has no signingIdentity or identity: 0ms
    User #toString should set serializedEnrollment.signingIdentity if the user has a signingIdentity:   âœ“ User #toString should set serializedEnrollment.signingIdentity if the user has a signingIdentity: 0ms
    User #toString should set serializedEnrollment.identity.certificate if the user has an identity.certificate:   âœ“ User #toString should set serializedEnrollment.identity.certificate if the user has an identity.certificate: 0ms
    User #User.isInstance should return true if every user parameter is defined:   âœ“ User #User.isInstance should return true if every user parameter is defined: 0ms
    User #User.isInstance should return false if user._name is undefined:   âœ“ User #User.isInstance should return false if user._name is undefined: 0ms
    User #User.isInstance should return false if user._roles is undefined:   âœ“ User #User.isInstance should return false if user._roles is undefined: 0ms
    User #User.isInstance should return false if user._affiliation is undefined:   âœ“ User #User.isInstance should return false if user._affiliation is undefined: 0ms
    User #User.isInstance should return false if user._enrollmentSecret is undefined:   âœ“ User #User.isInstance should return false if user._enrollmentSecret is undefined: 0ms
    User #User.isInstance should return false if user._identity is undefined:   âœ“ User #User.isInstance should return false if user._identity is undefined: 0ms
    User #User.isInstance should return false if user._signingIdentity is undefined:   âœ“ User #User.isInstance should return false if user._signingIdentity is undefined: 0ms
    User #User.isInstance should return false if user._mspId is undefined:   âœ“ User #User.isInstance should return false if user._mspId is undefined: 0ms
    User #User.isInstance should return false if user._cryptoSuite is undefined:   âœ“ User #User.isInstance should return false if user._cryptoSuite is undefined: 0ms
    client-utils #buildProposal should return a valid proposal when transientMap is an object:   âœ“ client-utils #buildProposal should return a valid proposal when transientMap is an object: 0ms
    client-utils #buildProposal should return a valid proposal when transientMap is not an object:   âœ“ client-utils #buildProposal should return a valid proposal when transientMap is not an object: 1ms
    client-utils #sendPeersProposal should return valid responses for one peer where proposals are fulfilled:   âœ“ client-utils #sendPeersProposal should return valid responses for one peer where proposals are fulfilled: 1ms
    client-utils #sendPeersProposal should return valid responses for one peer where proposals are not fulfilled:   âœ“ client-utils #sendPeersProposal should return valid responses for one peer where proposals are not fulfilled: 0ms
    client-utils #sendPeersProposal should return valid responses for two peers where one proposal is fulfilled and one is not:   âœ“ client-utils #sendPeersProposal should return valid responses for two peers where one proposal is fulfilled and one is not: 0ms
    client-utils #signProposal should return a valid signed proposal:   âœ“ client-utils #signProposal should return a valid signed proposal: 0ms
    client-utils #toEnvelope should return a valid envelope:   âœ“ client-utils #toEnvelope should return a valid envelope: 1ms
    client-utils #buildChannelHeader should return a channel header without any extra info:   âœ“ client-utils #buildChannelHeader should return a channel header without any extra info: 0ms
    client-utils #buildChannelHeader should return a channel header with all extra info:   âœ“ client-utils #buildChannelHeader should return a channel header with all extra info: 1ms
    client-utils #buildHeader should return a valid header:   âœ“ client-utils #buildHeader should return a valid header: 1ms
    client-utils #checkProposalRequest should return the correct error message if no data given:   âœ“ client-utils #checkProposalRequest should return the correct error message if no data given: 0ms
    client-utils #checkProposalRequest should return the correct error message if no request.chaincodeId given:   âœ“ client-utils #checkProposalRequest should return the correct error message if no request.chaincodeId given: 1ms
    client-utils #checkProposalRequest should return the correct error message if no request.rxId is given:   âœ“ client-utils #checkProposalRequest should return the correct error message if no request.rxId is given: 0ms
    client-utils #checkProposalRequest should return null if no request.rxId or all are given:   âœ“ client-utils #checkProposalRequest should return null if no request.rxId or all are given: 0ms
    client-utils #checkInstallRequest should return the correct error message if no data is given:   âœ“ client-utils #checkInstallRequest should return the correct error message if no data is given: 0ms
    client-utils #checkInstallRequest should return the correct error message if request.chaincodeVersion is not given:   âœ“ client-utils #checkInstallRequest should return the correct error message if request.chaincodeVersion is not given: 0ms
    client-utils #checkInstallRequest should return the correct error message if request.chaincodeVersion is given:   âœ“ client-utils #checkInstallRequest should return the correct error message if request.chaincodeVersion is given: 0ms
    client-utils #translateCCType should return the correct default type:   âœ“ client-utils #translateCCType should return the correct default type: 0ms
    client-utils #translateCCType should return the correct cc type:   âœ“ client-utils #translateCCType should return the correct cc type: 0ms
    client-utils #ccTypeToString should return the correct string:   âœ“ client-utils #ccTypeToString should return the correct string: 0ms
    client-utils #buildCurrentTimestamp should create a valid timestamp:   âœ“ client-utils #buildCurrentTimestamp should create a valid timestamp: 0ms
    hash_sha2_256 #hash should call the reset reset.update.finalize and return the correct value:   âœ“ hash_sha2_256 #hash should call the reset reset.update.finalize and return the correct value: 0ms
    hash_sha2_256 #reset should call crypto.createHash:   âœ“ hash_sha2_256 #reset should call crypto.createHash: 1ms
    hash_sha2_256 #finalize should call _hash.digest, reset and reurn the hash:   âœ“ hash_sha2_256 #finalize should call _hash.digest, reset and reurn the hash: 0ms
    hash_sha2_384 #hash should call the reset reset.update.finalize and return the correct value:   âœ“ hash_sha2_384 #hash should call the reset reset.update.finalize and return the correct value: 0ms
    hash_sha2_384 #reset should call crypto.createHash:   âœ“ hash_sha2_384 #reset should call crypto.createHash: 0ms
    hash_sha2_384 #finalize should call _hash.digest, reset and reurn the hash:   âœ“ hash_sha2_384 #finalize should call _hash.digest, reset and reurn the hash: 0ms
    hash_sha3_256 hashSimple should create an instance of sha3_256:   âœ“ hash_sha3_256 hashSimple should create an instance of sha3_256: 0ms
    hash_sha3_256 #reset should call sha3_256.create:   âœ“ hash_sha3_256 #reset should call sha3_256.create: 0ms
    hash_sha3_256 #finalize should call _hash.hex, reset and reurn the hash:   âœ“ hash_sha3_256 #finalize should call _hash.hex, reset and reurn the hash: 0ms
    hash_sha3_384 hashSimple should create an instance of hash_sha3_384:   âœ“ hash_sha3_384 hashSimple should create an instance of hash_sha3_384: 0ms
    hash_sha3_384 #reset should call sha3_384.create:   âœ“ hash_sha3_384 #reset should call sha3_384.create: 0ms
    hash_sha3_384 #finalize should call _hash.hex, reset and reurn the hash:   âœ“ hash_sha3_384 #finalize should call _hash.hex, reset and reurn the hash: 0ms
    SHA2_256 should call hash and return an insatnce of hash_sha2_256:   âœ“ SHA2_256 should call hash and return an insatnce of hash_sha2_256: 0ms
    SHA2_384 should call hash and return an insatnce of hash_sha2_384:   âœ“ SHA2_384 should call hash and return an insatnce of hash_sha2_384: 0ms
    Utils #newCryptoSuite should return cryptoSuite instance when given all parameters:   âœ“ Utils #newCryptoSuite should return cryptoSuite instance when given all parameters: 1ms
    Utils #newCryptoSuite should return cryptoSuite instance when parameters missing:   âœ“ Utils #newCryptoSuite should return cryptoSuite instance when parameters missing: 0ms
    Utils #newCryptoSuite should throw an error if csImpl does not exist:   âœ“ Utils #newCryptoSuite should throw an error if csImpl does not exist: 0ms
    Utils #newCryptoSuite should return cryptoSuite instance when no settings given:   âœ“ Utils #newCryptoSuite should return cryptoSuite instance when no settings given: 0ms
    Utils #newKeyValueStore should create a new key value store:   âœ“ Utils #newKeyValueStore should create a new key value store: 0ms
    Utils #addConfigFile should call exports.getConfig and config.file:   âœ“ Utils #addConfigFile should call exports.getConfig and config.file: 0ms
    Utils #setConfigSetting should call exports.getConfig and config.set:   âœ“ Utils #setConfigSetting should call exports.getConfig and config.set: 0ms
    Utils #getConfigSetting should call exports.getConfig and config.get:   âœ“ Utils #getConfigSetting should call exports.getConfig and config.get: 0ms
    Utils #getConfig should return the global hfc config:   âœ“ Utils #getConfig should return the global hfc config: 0ms
    Utils #getConfig should create new config instance and add it to the global hfc:   âœ“ Utils #getConfig should create new config instance and add it to the global hfc: 1ms
    Utils #getConfig should create new config instance and create new global hfc:   âœ“ Utils #getConfig should create new config instance and create new global hfc: 0ms
    Utils #bitsToBytes should return the correct value:   âœ“ Utils #bitsToBytes should return the correct value: 0ms
    Utils #bytesToBits should return the correct value:   âœ“ Utils #bytesToBits should return the correct value: 0ms
    Utils #bytesToBits should return the correct value:   âœ“ Utils #bytesToBits should return the correct value: 0ms
    Utils #zeroBuffer should return a buffer of length 10:   âœ“ Utils #zeroBuffer should return a buffer of length 10: 0ms
    Utils #toArrayBuffer should retun a buffer containing array items:   âœ“ Utils #toArrayBuffer should retun a buffer containing array items: 0ms
    Utils #toArrayBuffer should retun an empty ArrayBuffer:   âœ“ Utils #toArrayBuffer should retun an empty ArrayBuffer: 0ms
    Utils #getNonce should throw an error if given a string:   âœ“ Utils #getNonce should throw an error if given a string: 1ms
    Utils #getNonce should throw an error if given an object:   âœ“ Utils #getNonce should throw an error if given an object: 0ms
    Utils #getNonce should return the result of crypto.randomBytes:   âœ“ Utils #getNonce should return the result of crypto.randomBytes: 1ms
    Utils #getNonce should return the result of crypto.randomBytes and call getConfigSetting:   âœ“ Utils #getNonce should return the result of crypto.randomBytes and call getConfigSetting: 0ms
    Utils #getClassMethods should return the class methods for an instance:   âœ“ Utils #getClassMethods should return the class methods for an instance: 0ms
    Utils #getBufferBit should return error=true if bit to mask exceeds buffer length:   âœ“ Utils #getBufferBit should return error=true if bit to mask exceeds buffer length: 0ms
    Utils #getBufferBit should return error=false invalid=1:   âœ“ Utils #getBufferBit should return error=false invalid=1: 0ms
    Utils #getBufferBit should return error=false invalid=0:   âœ“ Utils #getBufferBit should return error=false invalid=0: 0ms
    Utils #getDefaultKeyStorePath should return the default key store path:   âœ“ Utils #getDefaultKeyStorePath should return the default key store path: 0ms
    Utils #CryptoKeyStore should return a valid CryptoKeyStore instance when no opts are given:   âœ“ Utils #CryptoKeyStore should return a valid CryptoKeyStore instance when no opts are given: 1ms
    Utils #CryptoKeyStore should return a valid CryptoKeyStore instance when KVSImplandClass are given:   âœ“ Utils #CryptoKeyStore should return a valid CryptoKeyStore instance when KVSImplandClass are given: 1ms
    Utils #CryptoKeyStore should return a valid CryptoKeyStore instance when none function KVSImplandClass is given:   âœ“ Utils #CryptoKeyStore should return a valid CryptoKeyStore instance when none function KVSImplandClass is given: 1ms
    Utils #CryptoKeyStore._getKeyStore should return a promise to the this._store:   âœ“ Utils #CryptoKeyStore._getKeyStore should return a promise to the this._store: 0ms
    Utils #CryptoKeyStore._getKeyStore should return a promise to the this._store if this._store is set:   âœ“ Utils #CryptoKeyStore._getKeyStore should return a promise to the this._store if this._store is set: 0ms
    Utils #CryptoKeyStore._getKeyStore should throw an error if CKS rejects a promise:   âœ“ Utils #CryptoKeyStore._getKeyStore should throw an error if CKS rejects a promise: 0ms
    Utils #newCryptoKeyStore should create a new instance of CryptoKeyStore:   âœ“ Utils #newCryptoKeyStore should create a new instance of CryptoKeyStore: 1ms
    Utils #checkAndAddConfigSetting should reutrn a list of return options:   âœ“ Utils #checkAndAddConfigSetting should reutrn a list of return options: 0ms
    Utils #checkAndAddConfigSetting should return the default value when no options passed in:   âœ“ Utils #checkAndAddConfigSetting should return the default value when no options passed in: 0ms
    Utils #normalizeX509 should throw an error if string doesnt match pattern:   âœ“ Utils #normalizeX509 should throw an error if string doesnt match pattern: 0ms
    Utils #normalizeX509 should match with a valid certificate:   âœ“ Utils #normalizeX509 should match with a valid certificate: 1ms
    Utils #pemToDER should throw an error if a pem does not match:   âœ“ Utils #pemToDER should throw an error if a pem does not match: 0ms
    Utils #pemToDER should encode a valid certificate:   âœ“ Utils #pemToDER should encode a valid certificate: 0ms
    Utils #convertToLong should throw an error if value is not set:   âœ“ Utils #convertToLong should throw an error if value is not set: 1ms
    Utils #convertToLong should throw an error if value is not a number:   âœ“ Utils #convertToLong should throw an error if value is not a number: 0ms
    Utils #convertToLong should return the Long value:   âœ“ Utils #convertToLong should return the Long value: 1ms
    Utils #convertToLong should return the Long value:   âœ“ Utils #convertToLong should return the Long value: 0ms
    Utils #convertToLong should return the Long value:   âœ“ Utils #convertToLong should return the Long value: 0ms
    Utils #checkIntegerConfig should throw an error if config value is not an integer:   âœ“ Utils #checkIntegerConfig should throw an error if config value is not an integer: 1ms
    Utils #checkIntegerConfig should return true if the value is valid:   âœ“ Utils #checkIntegerConfig should return true if the value is valid: 0ms
    Utils #checkIntegerConfig should return false if the config value is not found in opts:   âœ“ Utils #checkIntegerConfig should return false if the config value is not found in opts: 0ms
    ChannelHelper #buildTransactionProposal should return the payload:   âœ“ ChannelHelper #buildTransactionProposal should return the payload: 1ms
    BasePackager #constructor should throw if instance created:   âœ“ BasePackager #constructor should throw if instance created: 0ms
    BasePackager #constructor should throw an error if package isnt overriden:   âœ“ BasePackager #constructor should throw an error if package isnt overriden: 0ms
    BasePackager #package should throw a TypeError:   âœ“ BasePackager #package should throw a TypeError: 0ms
    BasePackager #package should throw a TypeError:   âœ“ BasePackager #package should throw a TypeError: 0ms
    BasePackager #findSource should throw an error:   âœ“ BasePackager #findSource should throw an error: 0ms
    BasePackager #findSource should throw an error:   âœ“ BasePackager #findSource should throw an error: 0ms
    BasePackager #findMetadataDescriptors should throw an error and log:   âœ“ BasePackager #findMetadataDescriptors should throw an error and log: 1ms
    BasePackager #findMetadataDescriptors should resolve after recieving data and end being called when entry is a file and contains metadata:   âœ“ BasePackager #findMetadataDescriptors should resolve after recieving data and end being called when entry is a file and contains metadata: 1ms
    BasePackager #findMetadataDescriptors should resolve after recieving data that isnt a file:   âœ“ BasePackager #findMetadataDescriptors should resolve after recieving data that isnt a file: 0ms
    BasePackager #isMetadata should return true if the file is a json file:   âœ“ BasePackager #isMetadata should return true if the file is a json file: 0ms
    BasePackager #isMetadata should return false if the file is not a json file:   âœ“ BasePackager #isMetadata should return false if the file is not a json file: 0ms
    BasePackager #isSource should return true if the file format is in keep:   âœ“ BasePackager #isSource should return true if the file format is in keep: 0ms
    BasePackager #isSource should return false if the file format is in keep:   âœ“ BasePackager #isSource should return false if the file format is in keep: 0ms
    BasePackager #packEntry should throw an error if fs reads nothing:   âœ“ BasePackager #packEntry should throw an error if fs reads nothing: 0ms
    BasePackager #packEntry should reject with error if pack.entry callback has an error:   âœ“ BasePackager #packEntry should reject with error if pack.entry callback has an error: 0ms
    BasePackager #packEntry should resolve with true if pack.entry callback does not have an error:   âœ“ BasePackager #packEntry should resolve with true if pack.entry callback does not have an error: 1ms
    BasePackager #generateTarGz should reject with error if on error is called:   âœ“ BasePackager #generateTarGz should reject with error if on error is called: 1ms
    BasePackager #generateTarGz should resolve with true:   âœ“ BasePackager #generateTarGz should resolve with true: 1ms
    BasePackager #generateTarGz should throw an error if a task promise is rejected:   âœ“ BasePackager #generateTarGz should throw an error if a task promise is rejected: 1ms
    BasePackager #generateTarGz should resolve all promises and call finalize:   âœ“ BasePackager #generateTarGz should resolve all promises and call finalize: 1ms
    Car #package should log and return the file:   âœ“ Car #package should log and return the file: 0ms
    Golang #package should return the package when given the metadata path:   âœ“ Golang #package should return the package when given the metadata path: 1ms
    Golang #package should return the package when not given the metadata path:   âœ“ Golang #package should return the package when not given the metadata path: 0ms
    Golang #findSource should throw an error:   âœ“ Golang #findSource should throw an error: 1ms
    Golang #findSource should return a list of descriptors and log each one added:   âœ“ Golang #findSource should return a list of descriptors and log each one added: 1ms
    Golang #findSource should not add a descriptor if entry is not a file:   âœ“ Golang #findSource should not add a descriptor if entry is not a file: 0ms
    Java #package should return the package when given the metadata path:   âœ“ Java #package should return the package when given the metadata path: 1ms
    Java #package should return the package when not given the metadata path:   âœ“ Java #package should return the package when not given the metadata path: 0ms
    Java #findSource should return a list of descriptors if files are returned:   âœ“ Java #findSource should return a list of descriptors if files are returned: 1ms
    Java #findSource should return a list of descriptors if no files are returned:   âœ“ Java #findSource should return a list of descriptors if no files are returned: 1ms
    Node #package should return the package when given the metadata path:   âœ“ Node #package should return the package when given the metadata path: 0ms
    Node #package should return the package when not given the metadata path:   âœ“ Node #package should return the package when not given the metadata path: 0ms
    Node #findSource should return a list of descriptors if files are returned:   âœ“ Node #findSource should return a list of descriptors if files are returned: 0ms
    Node #findSource should return a list of descriptors if no files are returned:   âœ“ Node #findSource should return a list of descriptors if no files are returned: 0ms

  1033 passing (2s)

[14:02:24] Finished 'mocha-fabric-client' after 8.81 s
[14:02:25] 
/Users/liamg/dev/fabric-sdk-node/fabric-client/lib/Client.js
  1051:4  warning  Unexpected console statement  no-console

/Users/liamg/dev/fabric-sdk-node/fabric-client/lib/SideDB.js
  75:4  warning  'name' is never reassigned. Use 'const' instead               prefer-const
  76:4  warning  'policy' is never reassigned. Use 'const' instead             prefer-const
  77:4  warning  'maxPeerCount' is never reassigned. Use 'const' instead       prefer-const
  78:4  warning  'requiredPeerCount' is never reassigned. Use 'const' instead  prefer-const

/Users/liamg/dev/fabric-sdk-node/build/tasks/watch.js
   6:5  warning  'gulp' is never reassigned. Use 'const' instead   prefer-const
   7:2  warning  'watch' is never reassigned. Use 'const' instead  prefer-const
   8:2  warning  'debug' is never reassigned. Use 'const' instead  prefer-const
   9:2  warning  'fs' is never reassigned. Use 'const' instead     prefer-const
  10:2  warning  'ca' is never reassigned. Use 'const' instead     prefer-const

/Users/liamg/dev/fabric-sdk-node/test/unit/ecdsa-key.js
  125:3  warning  Unexpected var, use let or const instead  no-var

/Users/liamg/dev/fabric-sdk-node/test/unit/util.js
  576:74  warning  'peer_name' is defined but never used  no-unused-vars

/Users/liamg/dev/fabric-sdk-node/test/integration/channel-event-hub.js
  184:8   warning  'block_reg' is assigned a value but never used        no-unused-vars
  210:60  warning  'block_num' is defined but never used                 no-unused-vars
  220:52  warning  'block_num' is defined but never used                 no-unused-vars
  432:7   warning  'block_reg_num' is assigned a value but never used    no-unused-vars
  434:45  warning  'reject' is defined but never used                    no-unused-vars
  467:7   warning  'seen_last_block' is assigned a value but never used  no-unused-vars
  468:41  warning  'reject' is defined but never used                    no-unused-vars

/Users/liamg/dev/fabric-sdk-node/test/integration/fabric-ca-identity-service-tests.js
  89:3  warning  'identity' is never reassigned. Use 'const' instead  prefer-const

/Users/liamg/dev/fabric-sdk-node/test/integration/install.js
  24:7  warning  'Packager' is assigned a value but never used  no-unused-vars
  97:8  warning  'p' is assigned a value but never used         no-unused-vars

/Users/liamg/dev/fabric-sdk-node/test/integration/javachaincode/instantiate-chaincode.js
  21:9  warning  'result' is assigned a value but never used  no-unused-vars

/Users/liamg/dev/fabric-sdk-node/test/integration/javachaincode/query.js
  15:7  warning  'testUtils' is assigned a value but never used  no-unused-vars

/Users/liamg/dev/fabric-sdk-node/fabric-network/lib/impl/wallet/hsmwalletmixin.js
  45:24  warning  'wallet' is defined but never used  no-unused-vars

/Users/liamg/dev/fabric-sdk-node/test/fixtures/src/node_cc/example_cc/chaincode.js
  105:3   warning  'A' is never reassigned. Use 'const' instead  prefer-const
  106:3   warning  'B' is never reassigned. Use 'const' instead  prefer-const
  130:3   warning  'X' is never reassigned. Use 'const' instead  prefer-const
  197:25  warning  'args' is defined but never used              no-unused-vars

/Users/liamg/dev/fabric-sdk-node/test/fixtures/src/node_cc/example_cc1/chaincode.js
   76:3   warning  'A' is never reassigned. Use 'const' instead  prefer-const
   77:3   warning  'B' is never reassigned. Use 'const' instead  prefer-const
  101:3   warning  'X' is never reassigned. Use 'const' instead  prefer-const
  163:25  warning  'args' is defined but never used              no-unused-vars

âœ– 33 problems (0 errors, 33 warnings)

[14:02:25] Finished 'lint' after 9 s
[4A[2KStopping ca_peerOrg2            ... [32mdone[0m[4B[3A[2KStopping ca_peerOrg1            ... [32mdone[0m[3BRemoving peer0.org2.example.com ... 
Removing peer0.org1.example.com ... 
Removing ca_peerOrg2            ... 
Removing ca_peerOrg1            ... 
Removing orderer.example.com    ... 
Removing couchdb                ... 
[6A[2KRemoving peer0.org2.example.com ... [32mdone[0m[6B[4A[2KRemoving ca_peerOrg2            ... [32mdone[0m[4B[3A[2KRemoving ca_peerOrg1            ... [32mdone[0m[3B[2A[2KRemoving orderer.example.com    ... [32mdone[0m[2B[1A[2KRemoving couchdb                ... [32mdone[0m[1B[5A[2KRemoving peer0.org1.example.com ... [32mdone[0m[5BRemoving network fixtures_default
[14:02:32] Finished 'docker-clean' after 16 s
[14:02:32] Starting 'docker-ready'...
Creating network "fixtures_default" with the default driver
Creating orderer.example.com ... 
Creating couchdb             ... 
Creating ca_peerOrg2         ... 
Creating ca_peerOrg1         ... 
[1A[2KCreating ca_peerOrg1         ... [32mdone[0m[1B[2A[2KCreating ca_peerOrg2         ... [32mdone[0m[2B[3A[2KCreating couchdb             ... [32mdone[0m[3B[4A[2KCreating orderer.example.com ... [32mdone[0m[4BCreating peer0.org1.example.com ... 
Creating peer0.org2.example.com ... 
[1A[2KCreating peer0.org2.example.com ... [32mdone[0m[1B[2A[2KCreating peer0.org1.example.com ... [32mdone[0m[2B[14:02:36] Finished 'docker-ready' after 4.05 s
[14:02:36] Starting 'run-full'...
{ Error: Cannot find module './build/Release/DTraceProviderBindings'
    at Function.Module._resolveFilename (module.js:548:15)
    at Function.Module._load (module.js:475:25)
    at Module.require (module.js:597:17)
    at require (internal/module.js:11:18)
    at Object.<anonymous> (/Users/liamg/dev/fabric-sdk-node/node_modules/mock-couch/node_modules/dtrace-provider/dtrace-provider.js:17:23)
    at Module._compile (module.js:653:30)
    at Module.replacementCompile (/Users/liamg/dev/fabric-sdk-node/node_modules/nyc/node_modules/append-transform/index.js:58:13)
    at module.exports (/Users/liamg/dev/fabric-sdk-node/node_modules/nyc/node_modules/default-require-extensions/js.js:8:9)
    at Object.<anonymous> (/Users/liamg/dev/fabric-sdk-node/node_modules/nyc/node_modules/append-transform/index.js:62:4)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Module.require (module.js:597:17)
    at require (internal/module.js:11:18)
    at Object.<anonymous> (/Users/liamg/dev/fabric-sdk-node/node_modules/mock-couch/node_modules/bunyan/lib/bunyan.js:35:18)
    at Module._compile (module.js:653:30) code: 'MODULE_NOT_FOUND' }
{ Error: Cannot find module './build/default/DTraceProviderBindings'
    at Function.Module._resolveFilename (module.js:548:15)
    at Function.Module._load (module.js:475:25)
    at Module.require (module.js:597:17)
    at require (internal/module.js:11:18)
    at Object.<anonymous> (/Users/liamg/dev/fabric-sdk-node/node_modules/mock-couch/node_modules/dtrace-provider/dtrace-provider.js:17:23)
    at Module._compile (module.js:653:30)
    at Module.replacementCompile (/Users/liamg/dev/fabric-sdk-node/node_modules/nyc/node_modules/append-transform/index.js:58:13)
    at module.exports (/Users/liamg/dev/fabric-sdk-node/node_modules/nyc/node_modules/default-require-extensions/js.js:8:9)
    at Object.<anonymous> (/Users/liamg/dev/fabric-sdk-node/node_modules/nyc/node_modules/append-transform/index.js:62:4)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Module.require (module.js:597:17)
    at require (internal/module.js:11:18)
    at Object.<anonymous> (/Users/liamg/dev/fabric-sdk-node/node_modules/mock-couch/node_modules/bunyan/lib/bunyan.js:35:18)
    at Module._compile (module.js:653:30) code: 'MODULE_NOT_FOUND' }
{ Error: Cannot find module './build/Debug/DTraceProviderBindings'
    at Function.Module._resolveFilename (module.js:548:15)
    at Function.Module._load (module.js:475:25)
    at Module.require (module.js:597:17)
    at require (internal/module.js:11:18)
    at Object.<anonymous> (/Users/liamg/dev/fabric-sdk-node/node_modules/mock-couch/node_modules/dtrace-provider/dtrace-provider.js:17:23)
    at Module._compile (module.js:653:30)
    at Module.replacementCompile (/Users/liamg/dev/fabric-sdk-node/node_modules/nyc/node_modules/append-transform/index.js:58:13)
    at module.exports (/Users/liamg/dev/fabric-sdk-node/node_modules/nyc/node_modules/default-require-extensions/js.js:8:9)
    at Object.<anonymous> (/Users/liamg/dev/fabric-sdk-node/node_modules/nyc/node_modules/append-transform/index.js:62:4)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Module.require (module.js:597:17)
    at require (internal/module.js:11:18)
    at Object.<anonymous> (/Users/liamg/dev/fabric-sdk-node/node_modules/mock-couch/node_modules/bunyan/lib/bunyan.js:35:18)
    at Module._compile (module.js:653:30) code: 'MODULE_NOT_FOUND' }
(node:5112) DeprecationWarning: grpc.load: Use the @grpc/proto-loader module with grpc.loadPackageDefinition instead
[00m[2m[38;5;66m
TAP version 13[00m[00m[2m[38;5;66m
# [00m

 ** config testing **

[00m[1m[38;5;2m
ok 1 the timeout is correct, which means the configs were loaded in the correct order[00m[00m[1m[38;5;2m
ok 2 Got to the end[00m[00m[2m[38;5;66m
# [00m

 ** Channel - constructor test **

[00m[1m[38;5;2m
ok 3 Channel constructor tests: invalid name pattern[00m[00m[1m[38;5;2m
ok 4 Channel constructor tests: skip name pattern checking:0[00m[00m[1m[38;5;2m
ok 5 Channel constructor tests: skip name pattern checking:1[00m[00m[1m[38;5;2m
ok 6 Channel constructor tests: Missing name parameter[00m[00m[1m[38;5;2m
ok 7 Channel constructor tests: Wrong name parameter[00m[00m[1m[38;5;2m
ok 8 Channel constructor tests: Missing clientContext parameter[00m[00m[1m[38;5;2m
ok 9 Channel constructor test: getName successful[00m[00m[2m[38;5;66m
# [00m

 ** Channel - method tests **

[00m[1m[38;5;2m
ok 10 checking the channel addOrderer()[00m[00m[1m[38;5;2m
ok 11 Checking channel peer getName[00m[00m[1m[38;5;2m
ok 12 Checking channel peer getMspid[00m[00m[1m[38;5;2m
ok 13 Checking isInRole[00m[00m[1m[38;5;2m
ok 14 Checking isInRole[00m[00m[1m[38;5;2m
ok 15 checking isInOrg[00m[00m[1m[38;5;2m
ok 16 checking isInOrg[00m[00m[1m[38;5;2m
ok 17 checking isInOrg[00m[00m[1m[38;5;2m
ok 18 checking the peer and channel peer methods[00m[00m[1m[38;5;2m
ok 19 checking Missing role parameter.[00m[00m[1m[38;5;2m
ok 20 checking channel getOrderers()[00m[00m[1m[38;5;2m
ok 21 checking channel getPeers()[00m[00m[1m[38;5;2m
ok 22 checking channel getPeers()[00m[00m[1m[38;5;2m
ok 23 Check that peer was returned[00m[00m[1m[38;5;2m
ok 24 checking channel peer is the same one[00m[00m[1m[38;5;2m
ok 25 Check that peer was returned[00m[00m[1m[38;5;2m
ok 26 checking channel peer is the same one[00m[00m[1m[38;5;2m
ok 27 Channel tests: checking that orderer already exists.[00m[00m[1m[38;5;2m
ok 28 Successfully tested Channel toString()[00m[00m[1m[38;5;2m
ok 29 checking the channel getMSPManager()[00m[00m[1m[38;5;2m
ok 30 checking the channel setMSPManager()[00m[00m[1m[38;5;2m
ok 31 checking the channel getOrganizations()[00m[00m[2m[38;5;66m
# [00m

 **  Channel query target parameter tests[00m[1m[38;5;2m
ok 32 Channel tests, queryBlockByHash(): checking for Blockhash bytes are required.[00m[00m[1m[38;5;2m
ok 33 Channel tests, queryBlockByHash(): "target" parameter not specified and no peers are set on Channel.[00m[00m[1m[38;5;2m
ok 34 Channel tests, queryBlockByHash(): checking for "target" parameter is an array, but should be a singular peer object.[00m[00m[1m[38;5;2m
ok 35 Channel tests, queryBlockByHash(): good target, checking for Missing userContext parameter.[00m[00m[1m[38;5;2m
ok 36 Channel tests, queryInfo(): "target" parameter not specified and no peers are set on Channel.[00m[00m[1m[38;5;2m
ok 37 Channel tests, queryInfo: checking for "target" parameter is an array, but should be a singular peer object.[00m[00m[1m[38;5;2m
ok 38 Channel tests, queryBlock(): Block number must be a positive integer with nothing specified[00m[00m[1m[38;5;2m
ok 39 Channel tests, queryBlock(): Block number must be a positive integer with "abc" specified[00m[00m[1m[38;5;2m
ok 40 Channel tests, queryBlock(): Block number must be a positive integer with "1.1" specified[00m[00m[1m[38;5;2m
ok 41 Channel tests, queryBlock(): Block number must be a positive integer with "-1" specified[00m[00m[1m[38;5;2m
ok 42 Channel tests, queryBlock(): "target" parameter not specified and no peers are set on Channel.[00m[00m[1m[38;5;2m
ok 43 Channel tests, queryBlock(): checking for "target" parameter is an array, but should be a singular peer object.[00m[00m[1m[38;5;2m
ok 44 Channel tests, queryTransaction(): checking for Missing "tx_id" parameter.[00m[00m[1m[38;5;2m
ok 45 Channel tests, queryTransaction(): "target" parameter not specified and no peers are set[00m[00m[1m[38;5;2m
ok 46 Channel tests, queryTransaction(): checking for "target" parameter is an array[00m[00m[1m[38;5;2m
ok 47 Channel tests, queryInstantiatedChaincodes(): checking for "target" parameter not specified and no peers are set[00m[00m[1m[38;5;2m
ok 48 Channel tests, queryInstantiatedChaincodes(): checking for "target" parameter is an array, but should be a singular peer object.[00m[00m[2m[38;5;66m
# [00m

 ** Channel addPeer() duplicate tests **

[00m[1m[38;5;2m
ok 49 Expected error message "DuplicatePeer" thrown[00m[00m[1m[38;5;2m
ok 50 Duplicate peer not added to the channel(3 expected | 3 found)[00m[00m[1m[38;5;2m
ok 51 checking the channel close()[00m[00m[2m[38;5;66m
# [00m

 ** Channel joinChannel() tests **

[00m[1m[38;5;2m
ok 52 Checking getGenesisBlock(): Missing "orderer" request parameter[00m[00m[1m[38;5;2m
ok 53 Checking joinChannel(): Missing all[00m[00m[1m[38;5;2m
ok 54 Checking joinChannel(): Missing txId[00m[00m[1m[38;5;2m
ok 55 Checking joinChannel(): Missing block input parameter[00m[00m[1m[38;5;2m
ok 56 Checking joinChannel(): "targets" parameter not specified and no peers are set on this Channel[00m[00m[1m[38;5;2m
ok 57 Checking joinChannel(): Target peer is not a valid peer object instance[00m[00m[1m[38;5;2m
ok 58 Checking joinChannel(): not found[00m[00m[2m[38;5;66m
# [00m

 ** Channel _buildDefaultEndorsementPolicy() tests **

[00m[1m[38;5;2m
ok 59 Checking that "initialize()" must be called before calling "instantiate()" that uses the endorsement policy[00m[00m[1m[38;5;2m
ok 60 Checking that after initializing the channel with dummy msps and msp manager, _buildEndorsementPolicy() can be called without error[00m[00m[1m[38;5;2m
ok 61 Checking default policy has an identities array[00m[00m[1m[38;5;2m
ok 62 Checking decoded default policy has an "identities" array[00m[00m[1m[38;5;2m
ok 63 Checking decoded default policy has two array items[00m[00m[1m[38;5;2m
ok 64 Checking decoded default policy has a ROLE identity[00m[00m[1m[38;5;2m
ok 65 Checking decoded default policy has an "n_out_of" policy[00m[00m[1m[38;5;2m
ok 66 Checking decoded default policy has an "n_out_of" policy with N = 1[00m[00m[1m[38;5;2m
ok 67 Checking policy spec: must have identities[00m[00m[1m[38;5;2m
ok 68 Checking policy spec: identities must be an array[00m[00m[1m[38;5;2m
ok 69 Checking policy spec: must have "policy"[00m[00m[1m[38;5;2m
ok 70 Checking policy spec: each identity must be "role", "organization-unit" or "identity"[00m[00m[1m[38;5;2m
ok 71 Checking policy spec: value identity type "role" must have valid "name" value[00m[00m[1m[38;5;2m
ok 72 Checking policy spec: value identity type "organization-unit"[00m[00m[1m[38;5;2m
ok 73 Checking policy spec: value identity type "identity"[00m[00m[1m[38;5;2m
ok 74 Checking policy spec: policy type must be "n-of" or "signed-by"[00m[00m[1m[38;5;2m
ok 75 Building successfully from valid policy spec ONE_OF_TWO_ORG_MEMBER[00m[00m[1m[38;5;2m
ok 76 Checking decoded custom policy has two items[00m[00m[1m[38;5;2m
ok 77 Checking decoded custom policy has "1 out of"[00m[00m[1m[38;5;2m
ok 78 Checking decoded custom policy has two target policies[00m[00m[1m[38;5;2m
ok 79 Building successfully from valid policy spec TWO_OF_TWO_ORG_MEMBER[00m[00m[1m[38;5;2m
ok 80 Checking decoded custom policy has "2 out of"[00m[00m[1m[38;5;2m
ok 81 Checking decoded custom policy has two target policies[00m[00m[1m[38;5;2m
ok 82 Building successfully from valid policy spec ONE_OF_TWO_ORG_MEMBER_AND_ADMIN[00m[00m[1m[38;5;2m
ok 83 Checking decoded custom policy has "2 out of"[00m[00m[1m[38;5;2m
ok 84 Checking decoded custom policy has two target policies[00m[00m[1m[38;5;2m
ok 85 Checking decoded custom policy has "1 out of" inside the "2 out of"[00m[00m[1m[38;5;2m
ok 86 Checking decoded custom policy has two target policies inside the "1 out of" inside the "2 out of"[00m[00m[1m[38;5;2m
ok 87 Checking decoded custom policy has "signed-by: 2" inside the "2 out of"[00m[00m[1m[38;5;2m
ok 88 Building successfully from valid policy spec CRAZY_SPEC[00m[00m[1m[38;5;2m
ok 89 Checking decoded custom policy has "2 out of"[00m[00m[1m[38;5;2m
ok 90 Checking decoded custom policy has two target policies[00m[00m[1m[38;5;2m
ok 91 Checking decoded custom policy has "1 out of" inside the "2 out of"[00m[00m[1m[38;5;2m
ok 92 Checking decoded custom policy has two target policies inside the "1 out of" inside the "2 out of"[00m[00m[1m[38;5;2m
ok 93 Checking decoded custom policy has "1 out of" inside the "2 out of"[00m[00m[1m[38;5;2m
ok 94 Checking decoded custom policy has two target policies inside the "1 out of" inside the "2 out of"[00m[00m[1m[38;5;2m
ok 95 Checking decoded custom policy has "2 out of " inside "1 out of" inside the "2 out of"[00m[00m[1m[38;5;2m
ok 96 Checking decoded custom policy has 3 target policies for "2 out of " inside "1 out of" inside the "2 out of"[00m[00m[1m[38;5;2m
ok 97 Checking decoded custom policy has "2 out of " inside "1 out of" inside the "2 out of"[00m[00m[1m[38;5;2m
ok 98 Checking decoded custom policy has 2 target policies for "2 out of " inside "1 out of" inside the "2 out of"[00m[00m[1m[38;5;2m
ok 99 Checking decoded custom policy has "signed-by: 2" for "2 out of " inside "1 out of" inside the "2 out of"[00m[00m[1m[38;5;2m
ok 100 Checking decoded custom policy has "1 out of" inside "2 out of " inside "1 out of" inside the "2 out of"[00m[00m[2m[38;5;66m
# [00m

 ** Channel sendTransactionProposal() tests **

[00m[1m[38;5;2m
ok 101 Channel tests, sendTransactionProposal(): Missing input request object on the proposal request[00m[00m[1m[38;5;2m
ok 102 Channel tests, sendTransactionProposal(): Missing "args" in Transaction[00m[00m[1m[38;5;2m
ok 103 Channel tests, sendTransactionProposal(): Missing "chaincodeId" parameter[00m[00m[1m[38;5;2m
ok 104 Channel tests, sendTransactionProposal(): Missing "txId" parameter in the proposal request[00m[00m[2m[38;5;66m
# [00m

 ** Channel queryByChaincode() tests **

[00m[1m[38;5;2m
ok 105 Channel tests, queryByChaincode(): Missing request object for this queryByChaincode call.[00m[00m[1m[38;5;2m
ok 106 Channel tests, queryByChaincode(): "targets" parameter not specified and no peers are set.[00m[00m[1m[38;5;2m
ok 107 Channel tests, queryByChaincode(): Missing "args" in Transaction[00m[00m[1m[38;5;2m
ok 108 Channel tests, queryByChaincode(): Missing "chaincodeId" parameter[00m[00m[2m[38;5;66m
# [00m

 ** Channel sendTransaction() tests **

[00m[1m[38;5;2m
ok 109 Channel tests, sendTransaction: Missing request object.[00m[00m[1m[38;5;2m
ok 110 Channel tests, sendTransaction: Missing "proposalResponses" object.[00m[00m[1m[38;5;2m
ok 111 Channel tests, sendTransaction: Missing "proposal" object.[00m[00m[1m[38;5;2m
ok 112 Channel tests, sendTransaction: no valid endorsements found.[00m[00m[2m[38;5;66m
# [00m

** TEST ** orderer via channel setOrderer/getOrderer[00m[1m[38;5;2m
ok 113 Successfully set the new orderer URL[00m[00m[1m[38;5;2m
ok 114 Successfully retrieved the new orderer URL from the channel[00m[00m[1m[38;5;2m
ok 115 Successfully updated the orderer URL[00m[00m[1m[38;5;2m
ok 116 Successfully retrieved the upated orderer URL from the channel[00m[00m[1m[38;5;2m
ok 117 Successfully removed orderer[00m[00m[1m[38;5;2m
ok 118 Successfully removed orderer[00m[00m[2m[38;5;66m
# [00m

** TEST ** orderer via channel set/get bad address[00m[1m[38;5;2m
ok 119 Test setting a bad orderer address[00m[00m[1m[38;5;2m
ok 120 Test setting an empty orderer address[00m[00m[2m[38;5;66m
# [00m

** TEST ** verify verifyProposalResponse[00m[1m[38;5;2m
ok 121 Test verifyProposalResponse with empty parameter[00m[00m[1m[38;5;2m
ok 122 Test verifyProposalResponse with an object parameter[00m[00m[1m[38;5;2m
ok 123 Test verifyProposalResponse with an empty array parameter[00m[00m[1m[38;5;2m
ok 124 Test verifyProposalResponse with an array without the correct endorsements parameter[00m[00m[2m[38;5;66m
# [00m

*** Test per-call timeout support ***
`sandbox.create()` is deprecated. Use default sandbox at `sinon.sandbox` or create new sandboxes with `sinon.createSandbox()`
[00m[1m[38;5;2m
ok 125 Peer.sendProposal() is called exactly twice[00m[00m[1m[38;5;2m
ok 126 Peer.sendProposal() is called first time with exactly 2 arguments[00m[00m[1m[38;5;2m
ok 127 Peer.sendProposal() is called first time with a overriding timeout of 12345 (milliseconds)[00m[00m[1m[38;5;2m
ok 128 Peer.sendProposal() is called 2nd time with exactly 2 arguments[00m[00m[1m[38;5;2m
ok 129 Peer.sendProposal() is called 2nd time with a overriding timeout of 12345 (milliseconds)[00m[00m[2m[38;5;66m
# [00m

 ** Channel Discovery tests **

[00m[1m[38;5;2m
ok 130 Channel tests, sendTransactionProposal(): "target" parameter not specified and no peers are set on this Channeln[00m[00m[1m[38;5;2m
ok 131 Channel tests, sendTransactionProposal(): No identity has been assigned to this client[00m[00m[1m[38;5;2m
ok 132 Channel tests, Request parameter "discover" must be boolean[00m[00m[1m[38;5;2m
ok 133 Check Failed to connect before the deadline[00m[00m[1m[38;5;2m
ok 134 Check Failed to initialize channel with bad endorsement handler path[00m[00m[1m[38;5;2m
ok 135 Check Failed to initialize channel with good endorsement handler path[00m[00m[1m[38;5;2m
ok 136 Check Failed to create channel with bad endorsement handler path[00m[00m[1m[38;5;2m
ok 137 Check for:: This Channel has not been initialized or not initialized with discovery support[00m[00m[1m[38;5;2m
ok 138 Check for:: This Channel has not been initialized or not initialized with discovery support[00m[00m[1m[38;5;2m
ok 139 checking that the name is correct[00m[00m[1m[38;5;2m
ok 140 checking that the name is correct[00m[00m[1m[38;5;2m
ok 141 Check that the new endorsement hint will not be added[00m[00m[1m[38;5;2m
ok 142 Check that the new endorsement hint will be added[00m[00m[1m[38;5;2m
ok 143 checking that the name is correct[00m[00m[1m[38;5;2m
ok 144 Check the name of endorsement plan retrieved[00m[00m[1m[38;5;2m
ok 145 Check that the new endorsement hint will be added[00m[00m[1m[38;5;2m
ok 146 checking that the name is correct[00m[00m[1m[38;5;2m
ok 147 checking that the collection is correct[00m[00m[1m[38;5;2m
ok 148 Checking the protobuf name of the chaincode[00m[00m[1m[38;5;2m
ok 149 Checking that the collection name is correct[00m[00m[2m[38;5;66m
# [00m

 ** Channel _getOrderer tests **

[00m[1m[38;5;2m
ok 150 Channel _getOrderer test: no params and no orderers assigned to channel[00m[00m[1m[38;5;2m
ok 151 Channel _getOrderer test: using bad name and no orderers assigned to channel[00m[00m[1m[38;5;2m
ok 152 Channel _getOrderer test: using bad object and no orderers assigned to channel[00m[00m[1m[38;5;2m
ok 153 Checking able to get correct name[00m[00m[1m[38;5;2m
ok 154 Channel _getOrderer: checking able to find orderer by name[00m[00m[1m[38;5;2m
ok 155 Channel _getOrderer: checking able to find orderer by name[00m[00m[1m[38;5;2m
ok 156 Checking able to get correct name[00m[00m[1m[38;5;2m
ok 157 Channel _getOrderer: checking able to find orderer by name[00m[00m[2m[38;5;66m
# [00m

 ** Channel mspid tests **

[00m[1m[38;5;2m
ok 158 Checking that the number of peers is correct for default org[00m[00m[1m[38;5;2m
ok 159 Checking that the peer is correct by organization name[00m[00m[1m[38;5;2m
ok 160 Checking that the peer is correct by organization name[00m[00m[1m[38;5;2m
ok 161 Checking that the number of peers is correct for default org[00m[00m[1m[38;5;2m
ok 162 Checking that the peer is correct by organization name[00m[00m[1m[38;5;2m
ok 163 Checking that the peer is correct by organization name[00m[00m[1m[38;5;2m
ok 164 Checking that the number of channel_event_hubs is correct for default org[00m[00m[1m[38;5;2m
ok 165 Checking that the channel_event_hubs is correct by organization name[00m[00m[1m[38;5;2m
ok 166 Checking that the channel_event_hubs is correct by organization name[00m[00m[1m[38;5;2m
ok 167 Checking that the number of channel_event_hubs is correct for default org[00m[00m[1m[38;5;2m
ok 168 Checking that the channel_event_hubs is correct by organization name[00m[00m[1m[38;5;2m
ok 169 Checking that the channel_event_hubs is correct by organization name[00m[00m[2m[38;5;66m
# [00m

 ** BasicCommitHandler - test **

[00m[1m[38;5;2m
ok 170 Able to have the channel create the handler[00m[00m[1m[38;5;2m
ok 171 Successfully failed to initialize using the commitHandler file name ::Error: Cannot find module 'bad.js'[00m[00m[1m[38;5;2m
ok 172 Check for :Missing all[00m[00m[1m[38;5;2m
ok 173 Check for :Missing "request"[00m[00m[1m[38;5;2m
ok 174 Check for :Missing "signed_envolope"[00m[00m[1m[38;5;2m
ok 175 This should fail with Error: Failed to connect before the deadline URL:grpc://somehost.com:7777[00m[00m[1m[38;5;2m
ok 176 This should fail with Error: No orderers assigned to the channel[00m[00m[1m[38;5;2m
ok 177 This should fail with Error: Failed to connect before the deadline URL:grpc://somehost.com:6666[00m[00m[1m[38;5;2m
ok 178 Completed the testing[00m[00m[2m[38;5;66m
# [00m

** CouchDBKeyValueStore tests[00m[1m[38;5;2m
ok 179 Error checking in the constructor: missing opts[00m[00m[1m[38;5;2m
ok 180 Error checking in the constructor: opts object missing required "url"[00m[00m[1m[38;5;2m
ok 181 Successfully rejected the construction request due to invalid URL[00m[00m[1m[38;5;2m
ok 182 Successfully connected the key value store to couchdb at localhost:5985[00m[00m[1m[38;5;2m
ok 183 Check "_database" value of the constructed store object[00m[00m[1m[38;5;2m
ok 184 Check result of setValue()[00m[00m[1m[38;5;2m
ok 185 Check result of getValue()[00m[00m[2m[38;5;66m
# Disconnecting the mock couchdb server[00m[00m[2m[38;5;66m
# [00m

** CryptoKeyStore tests **

[00m[1m[38;5;2m
ok 186 Test invalid constructor calls: missing options parameter[00m[00m[1m[38;5;2m
ok 187 Test invalid constructor calls: missing "path" property in the "options" parameter[00m[00m[1m[38;5;2m
ok 188 Successfully saved private key in store[00m[00m[1m[38;5;2m
ok 189 Check that the private key has been saved with the proper <SKI>-priv index[00m[00m[1m[38;5;2m
ok 190 Successfully read private key from store using SKI[00m[00m[1m[38;5;2m
ok 191 Test if the recovered key is a private key[00m[00m[1m[38;5;2m
ok 192 Check that the public key has been saved with the proper <SKI>-pub index[00m[00m[1m[38;5;2m
ok 193 Successfully read public key from store using SKI[00m[00m[1m[38;5;2m
ok 194 Test if the recovered key is a private key[00m[00m[1m[38;5;2m
ok 195 Successfully read public key from store using SKI[00m[00m[1m[38;5;2m
ok 196 Test if the recovered key is a public key[00m[00m[2m[38;5;66m
# [00m

** CryptoKeyStore tests - couchdb based store tests - use configSetting **

[00m[1m[38;5;2m
ok 197 Successfully saved private key in store based on couchdb[00m[00m[1m[38;5;2m
ok 198 Successfully verified private key persisted in couchdb[00m[00m[1m[38;5;2m
ok 199 Successfully read private key from store using SKI[00m[00m[1m[38;5;2m
ok 200 Test if the recovered key is a private key[00m[00m[1m[38;5;2m
ok 201 Successfully verified public key persisted in couchdb[00m[00m[1m[38;5;2m
ok 202 Successfully read public key from store using SKI[00m[00m[1m[38;5;2m
ok 203 Test if the recovered key is a private key[00m[00m[1m[38;5;2m
ok 204 Successfully read public key from store using SKI[00m[00m[1m[38;5;2m
ok 205 Test if the recovered key is a public key[00m[00m[2m[38;5;66m
# Disconnecting the mock couchdb server[00m[00m[2m[38;5;66m
# [00m

** CryptoKeyStore tests - couchdb based store tests - use constructor argument **

[00m[1m[38;5;2m
ok 206 Successfully saved private key in store based on couchdb[00m[00m[1m[38;5;2m
ok 207 Successfully verified private key persisted in couchdb[00m[00m[1m[38;5;2m
ok 208 Successfully read private key from store using SKI[00m[00m[1m[38;5;2m
ok 209 Test if the recovered key is a private key[00m[00m[1m[38;5;2m
ok 210 Successfully verified public key persisted in couchdb[00m[00m[1m[38;5;2m
ok 211 Successfully read public key from store using SKI[00m[00m[1m[38;5;2m
ok 212 Test if the recovered key is a private key[00m[00m[1m[38;5;2m
ok 213 Successfully read public key from store using SKI[00m[00m[1m[38;5;2m
ok 214 Test if the recovered key is a public key[00m[00m[2m[38;5;66m
# Disconnecting the mock couchdb server[00m[00m[2m[38;5;66m
# [00m

** CryptoKeyStore tests - newCryptoKeyStore tests **

[00m[1m[38;5;2m
ok 215 Returned instance should have store config opts of {"path":"tmp/keyValStore1"}[00m[00m[1m[38;5;2m
ok 216 Returned instance should have store config superClass[00m[00m[1m[38;5;2m
ok 217 Returned instance should have store config opts.path of /Users/liamg/.hfc-key-store[00m[00m[1m[38;5;2m
ok 218 Returned instance should have store config superClass[00m[00m[1m[38;5;2m
ok 219 Returned instance should have store config opts.path of /Users/liamg/.hfc-key-store[00m[00m[1m[38;5;2m
ok 220 Returned instance should have store config superClass[00m[00m[1m[38;5;2m
ok 221 Returned instance should have store config opts of {"path":"tmp/keyValStore1"}[00m[00m[1m[38;5;2m
ok 222 Returned instance should have store config superClass[00m[00m[2m[38;5;66m
# [00m

** CryptoKeyStore tests - getKey error tests **

[00m[1m[38;5;2m
ok 223 Test missing cryptoKeyStore: cryptoSuite.getKey[00m[00m[2m[38;5;66m
# [00m

** utils.newCryptoSuite tests **

[00m[1m[38;5;2m
ok 224 Should return an instance of CryptoSuite_ECDSA_AES[00m[00m[1m[38;5;2m
ok 225 Returned instance should have keysize of 384[00m[00m[1m[38;5;2m
ok 226 Default test: should return an instance of CryptoSuite_ECDSA_AES[00m[00m[1m[38;5;2m
ok 227 Returned instance should have keysize of 384[00m[00m[1m[38;5;2m
ok 228 Should return an instance of CryptoSuite_ECDSA_AES[00m[00m[1m[38;5;2m
ok 229 Returned instance should have keysize of 256[00m[00m[1m[38;5;2m
ok 230 /Error:.*/usr/local/lib/[00m[00m[2m[38;5;66m
# [00m

 ** CryptoSuite_ECDSA_AES - error tests **

[00m[1m[38;5;2m
ok 231 Test missing cryptoKeyStore: cryptoSuite.importKey[00m[00m[1m[38;5;2m
ok 232 Test missing cryptoKeyStore: cryptoSuite.generateKey[00m[00m[2m[38;5;66m
# [00m

 ** CryptoSuite_ECDSA_AES - generateEphemeralKey tests **

[00m[1m[38;5;2m
ok 233 generateEphemeralKey returned key[00m[00m[2m[38;5;66m
# [00m

 ** CryptoSuite_ECDSA_AES - ephemeral true tests **

[00m[1m[38;5;2m
ok 234 importKey returned key using ephemeral true[00m[00m[1m[38;5;2m
ok 235 generateKey returned key using ephemeral true[00m[00m[2m[38;5;66m
# [00m

 ** CryptoSuite_ECDSA_AES - function tests **

[00m[1m[38;5;2m
ok 236 CryptoSuite_ECDSA_AES function tests: default instance has "_ecdsaCurve" and "_ecdsa" properties[00m[00m[1m[38;5;2m
ok 237 CryptoSuite_ECDSA_AES function tests: using "SHA2" hashing algorithm with default key size which should be 256[00m[00m[1m[38;5;2m
ok 238 CryptoSuite_ECDSA_AES function tests: using "SHA2" hashing algorithm with default key size which should be 256[00m[00m[1m[38;5;2m
ok 239 CryptoSuite_ECDSA_AES function tests: using "SHA2" hashing algorithm with default key size which should be 384[00m[00m[1m[38;5;2m
ok 240 CryptoSuite_ECDSA_AES function tests: cryptoUtils generated public key curveName == secp256r1[00m[00m[1m[38;5;2m
ok 241 CryptoSuite_ECDSA_AES function tests: ccryptoUtils generated public key curveName == secp256r1[00m[00m[1m[38;5;2m
ok 242 CryptoSuite_ECDSA_AES function tests: using "SHA3" hashing algorithm with key size 256[00m[00m[1m[38;5;2m
ok 243 CryptoSuite_ECDSA_AES function tests: using "SHA3" hashing algorithm with key size 256[00m[00m[1m[38;5;2m
ok 244 CryptoSuite_ECDSA_AES function tests: using "SHA3" hashing algorithm with key size 384[00m[00m[1m[38;5;2m
ok 245 CryptoSuite_ECDSA_AES function tests: using "SHA3" hashing algorithm with key size 384[00m[00m[1m[38;5;2m
ok 246 CryptoSuite_ECDSA_AES function tests: ccryptoUtils generated public key curveName == secp384r1[00m[00m[1m[38;5;2m
ok 247 CryptoSuite_ECDSA_AES function tests: verify generateKey return object[00m[00m[1m[38;5;2m
ok 248 CryptoSuite_ECDSA_AES function tests: using "SHA3" hashing algorithm with key size 384[00m[00m[1m[38;5;2m
ok 249 CryptoSuite_ECDSA_AES function tests: verify generateKey ephemeral=true return object[00m[00m[1m[38;5;2m
ok 250 CryptoSuite_ECDSA_AES function tests: setting key size 123 should throw Illegal level error[00m[00m[1m[38;5;2m
ok 251 CryptoSuite_ECDSA_AES function tests: setting hash algo to 12345 should throw Illegal Hash function family[00m[00m[1m[38;5;2m
ok 252 CryptoSuite_ECDSA_AES function tests: sign() should throw "A valid key is required to sign"[00m[00m[1m[38;5;2m
ok 253 CryptoSuite_ECDSA_AES function tests: sign() should throw "A valid message is required to sign"[00m[00m[1m[38;5;2m
ok 254 Valid signature object generated from sign()[00m[00m[1m[38;5;2m
ok 255 CryptoSuite_ECDSA_AES function tests: sign() method produced proper signature that was successfully verified[00m[00m[1m[38;5;2m
ok 256 Valid signature object generated from sign()[00m[00m[1m[38;5;2m
ok 257 CryptoSuite_ECDSA_AES function tests: sign() method produced proper signature that was successfully verified[00m[00m[1m[38;5;2m
ok 258 CryptoSuite_ECDSA_AES function tests: verify() should throw "A valid key is required to verify"[00m[00m[1m[38;5;2m
ok 259 CryptoSuite_ECDSA_AES function tests: verify() should throw "A valid signature is required to verify"[00m[00m[1m[38;5;2m
ok 260 CryptoSuite_ECDSA_AES function tests: verify() should throw "A valid message is required to verify"[00m[00m[1m[38;5;2m
ok 261 CryptoSuite_ECDSA_AES function tests: verify() method[00m[00m[1m[38;5;2m
ok 262 CryptoSuite_ECDSA_AES function tests: verify() method[00m[00m[1m[38;5;2m
ok 263 Test imported public key isPrivate()[00m[00m[1m[38;5;2m
ok 264 Test imported public key SKI[00m[00m[1m[38;5;2m
ok 265 Check that the imported public key has been saved in the key store[00m[00m[1m[38;5;2m
ok 266 Test imported private key isPrivate[00m[00m[1m[38;5;2m
ok 267 Test imported private key SKI[00m[00m[1m[38;5;2m
ok 268 Check that the imported private key has been saved in the key store[00m[00m[1m[38;5;2m
ok 269 Check that the imported private key can properly sign messages[00m[00m[2m[38;5;66m
# [00m

** bccsp_pkcs11 tests **

[00m[1m[38;5;2m
ok 270 Checking: keySize must be specified[00m[00m[1m[38;5;2m
ok 271 Checking: only 256 or 384 bits key sizes are supported[00m[00m[1m[38;5;2m
ok 272 Checking: PKCS11 key size is specified and valid[00m[00m[1m[38;5;2m
ok 273 Checking: PKCS11 lib must be specified[00m[00m[1m[38;5;2m
ok 274 Checking: PKCS11 slot number invalid:a[00m[00m[1m[38;5;2m
ok 275 Checking: PKCS11 slot number invalid:2.1[00m[00m[1m[38;5;2m
ok 276 Checking: PKCS11 slot must be set to a number[00m[00m[1m[38;5;2m
ok 277 Checking: PKCS11 PIN must be set to a string[00m[00m[1m[38;5;2m
ok 278 Checking: for valid PIN[00m[00m[1m[38;5;2m
ok 279 Checking: for valid usertype[00m[00m[1m[38;5;2m
ok 280 Checking: for valid usertype[00m[00m[1m[38;5;2m
ok 281 Checking: for valid readwrite[00m[00m[1m[38;5;2m
ok 282 Checking: for valid readwrite[00m[00m[1m[38;5;2m
ok 283 Checking: PKCS11 lib must be specified[00m[00m[1m[38;5;2m
ok 284 Checking: PKCS11 slot must be set to a number[00m[00m[1m[38;5;2m
ok 285 Checking: for valid PIN in config[00m[00m[1m[38;5;2m
ok 286 Checking: for valid usertype[00m[00m[1m[38;5;2m
ok 287 Checking: for valid usertype[00m[00m[1m[38;5;2m
ok 288 Checking: for valid usertype in config[00m[00m[1m[38;5;2m
ok 289 Checking: for valid usertype in config[00m[00m[1m[38;5;2m
ok 290 Checking: for valid readwrite[00m[00m[1m[38;5;2m
ok 291 Checking: for valid readwrite[00m[00m[1m[38;5;2m
ok 292 Checking: for valid readwrite in config[00m[00m[1m[38;5;2m
ok 293 Checking: for valid readwrite in config[00m[00m[1m[38;5;2m
ok 294 Checking: for valid readwrite in config[00m[00m[1m[38;5;2m
ok 295 Checking: for valid readwrite in config[00m[00m[1m[38;5;2m
ok 296 Checking: for valid readwrite in config[00m[00m[1m[38;5;2m
ok 297 Checking: for valid readwrite in config[00m[00m[2m[38;5;66m
# [00m

 ** ECDSA Key Impl tests **

[00m[1m[38;5;2m
ok 298 ECDSA Impl test: catch missing key param[00m[00m[1m[38;5;2m
ok 299 ECDSA Impl test: catch missing key type of "EC"[00m[00m[1m[38;5;2m
ok 300 ECDSA Impl test: catch invalid key type[00m[00m[1m[38;5;2m
ok 301 ECDSA Impl test: catch missing "pubKeyHex" property[00m[00m[1m[38;5;2m
ok 302 ECDSA Impl test: test a valid key[00m[00m[1m[38;5;2m
ok 303 Checking generated SKI hash string for 256 curve keys[00m[00m[1m[38;5;2m
ok 304 Checking that a private key instance allows toBytes()[00m[00m[1m[38;5;2m
ok 305 Checking generated SKI hash string for 384 curve keys[00m[00m[1m[38;5;2m
ok 306 Checking if key is symmetric[00m[00m[1m[38;5;2m
ok 307 Checking if key is private[00m[00m[1m[38;5;2m
ok 308 Checking isPrivate() logic[00m[00m[1m[38;5;2m
ok 309 Checking toBytes() output[00m[00m[1m[38;5;2m
ok 310 Checking generated SKI hash string for 256 curve public key[00m[00m[1m[38;5;2m
ok 311 Checking to dump a public ECDSAKey object to bytes[00m[00m[1m[38;5;2m
ok 312 Checking generated SKI hash string for 384 curve public key[00m[00m[1m[38;5;2m
ok 313 Checking to dump a public ECDSAKey object to bytes[00m[00m[1m[38;5;2m
ok 314 Checking if both keys are public[00m[00m[1m[38;5;2m
ok 315 Checking getPublicKey() logic[00m[00m[1m[38;5;2m
ok 316 Checking toBytes() output[00m[00m[1m[38;5;2m
ok 317 Checking that a CSR cannot be generated from a public key[00m[00m[1m[38;5;2m
ok 318 Checking that CSR is not generated for a malformed subject[00m[00m[1m[38;5;2m
ok 319 Checking CSR subject matches subject from request[00m[00m[1m[38;5;2m
ok 320 Checking CSR public key matches requested public key[00m[00m[2m[38;5;66m
# {[00m[00m[2m[38;5;66m
# "version": 2,[00m[00m[2m[38;5;66m
# "subject": {[00m[00m[2m[38;5;66m
# "commonName": "self"[00m[00m[2m[38;5;66m
# },[00m[00m[2m[38;5;66m
# "issuer": {[00m[00m[2m[38;5;66m
# "commonName": "self"[00m[00m[2m[38;5;66m
# },[00m[00m[2m[38;5;66m
# "serial": "04",[00m[00m[2m[38;5;66m
# "notBefore": "2018-10-22T11:39:46.000Z",[00m[00m[2m[38;5;66m
# "notAfter": "2018-10-23T05:43:06.000Z",[00m[00m[2m[38;5;66m
# "subjectHash": "41e0083f",[00m[00m[2m[38;5;66m
# "signatureAlgorithm": "ecdsa-with-SHA256",[00m[00m[2m[38;5;66m
# "fingerPrint": "95:6D:21:B9:30:D1:63:F0:0B:E8:09:D4:A9:3B:8E:ED:33:26:28:D6",[00m[00m[2m[38;5;66m
# "publicKey": {[00m[00m[2m[38;5;66m
# "algorithm": "id-ecPublicKey"[00m[00m[2m[38;5;66m
# },[00m[00m[2m[38;5;66m
# "altNames": [],[00m[00m[2m[38;5;66m
# "extensions": {[00m[00m[2m[38;5;66m
# "basicConstraints": "CA:FALSE",[00m[00m[2m[38;5;66m
# "keyUsage": "Digital Signature, Non Repudiation",[00m[00m[2m[38;5;66m
# "extendedKeyUsage": "TLS Web Client Authentication"[00m[00m[2m[38;5;66m
# }[00m[00m[2m[38;5;66m
# }[00m[00m[1m[38;5;2m
ok 321 Checking common name set to default[00m[00m[2m[38;5;66m
# {[00m[00m[2m[38;5;66m
# "version": 2,[00m[00m[2m[38;5;66m
# "subject": {[00m[00m[2m[38;5;66m
# "commonName": "testUser"[00m[00m[2m[38;5;66m
# },[00m[00m[2m[38;5;66m
# "issuer": {[00m[00m[2m[38;5;66m
# "commonName": "testUser"[00m[00m[2m[38;5;66m
# },[00m[00m[2m[38;5;66m
# "serial": "04",[00m[00m[2m[38;5;66m
# "notBefore": "2018-10-22T11:39:46.000Z",[00m[00m[2m[38;5;66m
# "notAfter": "2018-10-23T05:43:06.000Z",[00m[00m[2m[38;5;66m
# "subjectHash": "69e80960",[00m[00m[2m[38;5;66m
# "signatureAlgorithm": "ecdsa-with-SHA256",[00m[00m[2m[38;5;66m
# "fingerPrint": "82:52:94:00:D6:7D:DF:C1:DD:2F:89:83:1A:42:0B:3E:1D:B8:44:66",[00m[00m[2m[38;5;66m
# "publicKey": {[00m[00m[2m[38;5;66m
# "algorithm": "id-ecPublicKey"[00m[00m[2m[38;5;66m
# },[00m[00m[2m[38;5;66m
# "altNames": [],[00m[00m[2m[38;5;66m
# "extensions": {[00m[00m[2m[38;5;66m
# "basicConstraints": "CA:FALSE",[00m[00m[2m[38;5;66m
# "keyUsage": "Digital Signature, Non Repudiation",[00m[00m[2m[38;5;66m
# "extendedKeyUsage": "TLS Web Client Authentication"[00m[00m[2m[38;5;66m
# }[00m[00m[2m[38;5;66m
# }[00m[00m[1m[38;5;2m
ok 322 Checking common name set to "testUser"[00m[00m[1m[38;5;2m
ok 323 Checking that an X509 cannot be generated from a public key[00m[00m[2m[38;5;66m
# [00m

 ** DiscoveryEndorsementHandler - test **

[00m[1m[38;5;2m
ok 324 Successfully caught missing private key expected from a user enrollment object[00m[00m[1m[38;5;2m
ok 325 Able to have the channel create the handler[00m[00m[1m[38;5;2m
ok 326 Check for :Missing all[00m[00m[1m[38;5;2m
ok 327 Check for :Missing "request"[00m[00m[1m[38;5;2m
ok 328 Check for :Missing "signed_proposal"[00m[00m[1m[38;5;2m
ok 329 Check for :Missing "chaincodeId"[00m[00m[1m[38;5;2m
ok 330 Check for :Missing "txId"[00m[00m[1m[38;5;2m
ok 331 Check for :Missing "args"[00m[00m[1m[38;5;2m
ok 332 Check that internal method _create_map is working[00m[00m[1m[38;5;2m
ok 333 Check that internal method _create_map is working[00m[00m[1m[38;5;2m
ok 334 Check that internal method _create_map is working[00m[00m[1m[38;5;2m
ok 335 Checking that one peer was removed[00m[00m[1m[38;5;2m
ok 336 Checking that peer was moved to top of list[00m[00m[1m[38;5;2m
ok 337 So far so good[00m[00m[2m[38;5;66m
# [00m

 ** FileKeyValueStore - read and write test **

[00m[1m[38;5;2m
ok 338 FileKeyValueStore read and write test: Successfully created new directory for testValueStore[00m[00m[1m[38;5;2m
ok 339 FileKeyValueStore read and write test: Successfully set value[00m[00m[1m[38;5;2m
ok 340 FileKeyValueStore read and write test: Verified the file for key keyValFileStoreName does exist[00m[00m[1m[38;5;2m
ok 341 FileKeyValueStore read and write test: Successfully retrieved value[00m[00m[1m[38;5;2m
ok 342 FileKeyValueStore error check tests: Delete store & getValue test. getValue() returns null as expected[00m[00m[1m[38;5;2m
ok 343 FileKeyValueStore error check tests: Delete store & setValue test. setValue() failed as expected: Error: ENOENT: no such file or directory, open '/var/folders/9_/7nlk0c4x04l3wv8hscrxd3zc0000gn/T/hfc/kvsTemp/keyValFileStoreName'[00m[00m[2m[38;5;66m
# [00m

** FileKeyValueStore error check tests **

[00m[1m[38;5;2m
ok 344 FileKeyValueStore error check tests: new FileKeyValueStore with no options should throw "Must provide the path to the directory to hold files for the store."[00m[00m[1m[38;5;2m
ok 345 FileKeyValueStore error check tests: new FileKeyValueStore with no options.path should throw "Must provide the path to the directory to hold files for the store."[00m[00m[2m[38;5;66m
# [00m

 ** Identity class tests **

[00m[1m[38;5;2m
ok 346 Checking required input parameters[00m[00m[1m[38;5;2m
ok 347 Checking required input parameters[00m[00m[1m[38;5;2m
ok 348 Checking required config parameter for MSP constructor[00m[00m[1m[38;5;2m
ok 349 Checking required config parameter "id" for MSP constructor[00m[00m[1m[38;5;2m
ok 350 Checking required config parameter "cryptoSuite" for MSP constructor[00m[00m[1m[38;5;2m
ok 351 Checking required config parameter "admins" for MSP constructor[00m[00m[1m[38;5;2m
ok 352 Checking required parameter "cryptoSuite"[00m[00m[1m[38;5;2m
ok 353 Checking required parameter "key"[00m[00m[1m[38;5;2m
ok 354 Checking required input parameters[00m[00m[1m[38;5;2m
ok 355 Checking required input parameters[00m[00m[1m[38;5;2m
ok 356 Checking required input parameters[00m[00m[1m[38;5;2m
ok 357 Checking required input parameters[00m[00m[1m[38;5;2m
ok 358 deserializeIdentity call without promise[00m[00m[1m[38;5;2m
ok 359 Identity class function tests: deserialized certificate[00m[00m[1m[38;5;2m
ok 360 Identity class function tests: deserialized public key[00m[00m[1m[38;5;2m
ok 361 Identity class function tests: deserialized public key ecparam check[00m[00m[1m[38;5;2m
ok 362 Test Signer class getPublicKey() method[00m[00m[1m[38;5;2m
ok 363 Test invalid hashFunction parameter for the sign() method[00m[00m[1m[38;5;2m
ok 364 Test SigningIdentity sign() method[00m[00m[1m[38;5;2m
ok 365 Test Identity verify() method[00m[00m[2m[38;5;66m
# [00m

** MSP Tests **

[00m[1m[38;5;2m
ok 366 Check MSPManager.loadMSPs() arguments: must be an array[00m[00m[1m[38;5;2m
ok 367 Check MSPManager.loadMSPs() arguments: each config must have getType() returning a number representing types[00m[00m[1m[38;5;2m
ok 368 Check MSPManager.loadMSPs() arguments: each config must have getConfig() returning a valid FabricMSPConfig[00m[00m[1m[38;5;2m
ok 369 Check MSPManager.loadMSPs() arguments: each config must have getConfig() returning a valid FabricMSPConfig[00m[00m[1m[38;5;2m
ok 370 Successfully loaded msp config for org0[00m[00m[1m[38;5;2m
ok 371 Successfully loaded msp config for org1[00m[00m[1m[38;5;2m
ok 372 Check loaded MSP instance for id[00m[00m[1m[38;5;2m
ok 373 Check loaded MSP instance of non-null root certs[00m[00m[1m[38;5;2m
ok 374 Check loaded MSP instance of non-null admin certs[00m[00m[1m[38;5;2m
ok 375 Check loaded MSP instance of non-null crypto suite[00m[00m[1m[38;5;2m
ok 376 Check loaded MSP instance for orgs[00m[00m[1m[38;5;2m
ok 377 Check loaded MSP instance for intermediateCerts[00m[00m[1m[38;5;2m
ok 378 Check loaded MSP instance for id[00m[00m[1m[38;5;2m
ok 379 Check loaded MSP instance of non-null root certs[00m[00m[1m[38;5;2m
ok 380 Check loaded MSP instance of non-null admin certs[00m[00m[1m[38;5;2m
ok 381 Check loaded MSP instance of non-null crypto suite[00m[00m[1m[38;5;2m
ok 382 Check loaded MSP instance for orgs[00m[00m[1m[38;5;2m
ok 383 Check loaded MSP instance for intermediateCerts[00m[00m[1m[38;5;2m
ok 384 Deserialized identity using MSP manager[00m[00m[1m[38;5;2m
ok 385 Checking MSPManager getMSP() method[00m[00m[2m[38;5;66m
# [00m

 ** configuration testing **

[00m[1m[38;5;2m
ok 386 Checking that client cert was set[00m[00m[1m[38;5;2m
ok 387 Checking that client key was set[00m[00m[1m[38;5;2m
ok 388 Checking that client cert was added[00m[00m[1m[38;5;2m
ok 389 Checking that client key was added[00m[00m[1m[38;5;2m
ok 390 Checking that able to call xxxTlsClientCertAndKey methods without error[00m[00m[1m[38;5;2m
ok 391 Should not be able to instantiate a new instance of "Client" without a valid path to the configuration[00m[00m[1m[38;5;2m
ok 392 Should not be able to instantiate a new instance of "Client" without an actual configuration file[00m[00m[1m[38;5;2m
ok 393 Should not be able to instantiate a new instance of "Client" without an actual configuration file[00m[00m[1m[38;5;2m
ok 394 Should be able to instantiate a new instance of "Client" with a valid path to the configuration[00m[00m[1m[38;5;2m
ok 395 1 Should be able to instantiate a new instance of "Channel" with the definition in the network configuration[00m[00m[1m[38;5;2m
ok 396 Should not be able to instantiate a new instance of "Channel" with a bad channel[00m[00m[1m[38;5;2m
ok 397 Should not be able to instantiate a new instance of a certificate authority until a crypto suite is assigned[00m[00m[1m[38;5;2m
ok 398  org should be Org1[00m[00m[1m[38;5;2m
ok 399  org should be Org2[00m[00m[1m[38;5;2m
ok 400  Check to see if we got the right peer for org2 by default[00m[00m[1m[38;5;2m
ok 401  Check to see if we got the right peer for org1 by specifically asking for mspid of org1[00m[00m[1m[38;5;2m
ok 402  Check to see if we got the right orderer for mychannel2[00m[00m[1m[38;5;2m
ok 403  check to see if we can get the wallet name from the client config[00m[00m[1m[38;5;2m
ok 404  check to see if we can get the mspid of the current clients organization[00m[00m[1m[38;5;2m
ok 405  Check to see that we got 3 peers for Org1[00m[00m[1m[38;5;2m
ok 406  Check to see that we got 1 peer for Org2[00m[00m[1m[38;5;2m
ok 407 check that existing settings are still there[00m[00m[1m[38;5;2m
ok 408 check that endorser timeout was added[00m[00m[1m[38;5;2m
ok 409 check that orderer timeout was added[00m[00m[1m[38;5;2m
ok 410 check that eventHub timeout was added[00m[00m[1m[38;5;2m
ok 411 check that eventReg timeout was added[00m[00m[1m[38;5;2m
ok 412 check that timeout did not change[00m[00m[1m[38;5;2m
ok 413 check that timeout did not change[00m[00m[1m[38;5;2m
ok 414  check that we get this peer endorser timeout set[00m[00m[1m[38;5;2m
ok 415  check that we get this peer endorser timeout set[00m[00m[1m[38;5;2m
ok 416  check that we get this orderer timeout set[00m[00m[1m[38;5;2m
ok 417 Successfully got the certificate_authority[00m[00m[1m[38;5;2m
ok 418 2 Should be able to run a number of test without error[00m[00m[1m[38;5;2m
ok 419 Check for Channel not found for name undefined.[00m[00m[1m[38;5;2m
ok 420  check to see that the peer has been added to the channel[00m[00m[1m[38;5;2m
ok 421  check to see that the peer has been added to the channel[00m[00m[1m[38;5;2m
ok 422 3 Should be able to instantiate a new instance of "Channel" with the definition in the network configuration[00m[00m[1m[38;5;2m
ok 423 Should be able to instantiate a new instance of "Channel" with blank definition in the network configuration[00m[00m[1m[38;5;2m
ok 424 Check for Network configuration is missing this client's organization and certificate authority[00m[00m[1m[38;5;2m
ok 425 Channel should be named[00m[00m[1m[38;5;2m
ok 426 Should be able to instantiate a new instance of "Channel" with an empty channel definition in the network configuration[00m[00m[1m[38;5;2m
ok 427 Channel should be named[00m[00m[1m[38;5;2m
ok 428 Successfully got an orderer[00m[00m[1m[38;5;2m
ok 429 Orderer should be named[00m[00m[1m[38;5;2m
ok 430 Should be able to instantiate a new instance of "Channel" with only orderer definition in the network configuration[00m[00m[1m[38;5;2m
ok 431 Channel should be named[00m[00m[1m[38;5;2m
ok 432 Peers should be empty[00m[00m[1m[38;5;2m
ok 433 Successfully got an orderer[00m[00m[1m[38;5;2m
ok 434 Should be able to instantiate a new instance of "Channel" with org that does not exist in the network configuration[00m[00m[1m[38;5;2m
ok 435 Channel should be named[00m[00m[1m[38;5;2m
ok 436 Peers should be empty[00m[00m[1m[38;5;2m
ok 437 Successfully got an orderer[00m[00m[1m[38;5;2m
ok 438 Should be able to instantiate a new instance of "Channel" with a peer in the org that does not exist in the network configuration[00m[00m[1m[38;5;2m
ok 439 Channel should be named[00m[00m[1m[38;5;2m
ok 440 Peers should be four[00m[00m[1m[38;5;2m
ok 441 Successfully got a channel peer[00m[00m[1m[38;5;2m
ok 442 Should be able to instantiate a new instance of "Channel" with orderer, org and peer defined in the network configuration[00m[00m[1m[38;5;2m
ok 443 targets is an array[00m[00m[1m[38;5;2m
ok 444 targets has a peer [00m[00m[1m[38;5;2m
ok 445 targets is an array[00m[00m[1m[38;5;2m
ok 446 targets has a peer [00m[00m[1m[38;5;2m
ok 447 targets is an array[00m[00m[1m[38;5;2m
ok 448 targets has a peer [00m[00m[1m[38;5;2m
ok 449 targets is an array[00m[00m[1m[38;5;2m
ok 450 targets has a peer [00m[00m[1m[38;5;2m
ok 451 Should be able to get targets for peer[00m[00m[1m[38;5;2m
ok 452 targets should be null when request targets is null[00m[00m[1m[38;5;2m
ok 453 Should return null targets when checking a null request target[00m[00m[1m[38;5;2m
ok 454 Should not be able to get targets when targets is not a peer object[00m[00m[1m[38;5;2m
ok 455 Should not be able to get targets when targets is not a peer object[00m[00m[1m[38;5;2m
ok 456 targets should be null when list is empty[00m[00m[1m[38;5;2m
ok 457 Should get a null when the target list is empty[00m[00m[1m[38;5;2m
ok 458 client config should be empty[00m[00m[1m[38;5;2m
ok 459 client config store path should be something[00m[00m[1m[38;5;2m
ok 460 client config cryptoStore store path should be something relative[00m[00m[1m[38;5;2m
ok 461 client config store path should be something[00m[00m[1m[38;5;2m
ok 462 client config cryptoStore store path should be something[00m[00m[1m[38;5;2m
ok 463 Should not get an error when working with credentialStore settings[00m[00m[1m[38;5;2m
ok 464 organizations is an array[00m[00m[1m[38;5;2m
ok 465 organizations has a organization [00m[00m[1m[38;5;2m
ok 466 check the ca name[00m[00m[1m[38;5;2m
ok 467 check the ca name[00m[00m[1m[38;5;2m
ok 468 check the ca name[00m[00m[1m[38;5;2m
ok 469 Should be able to get organizations[00m[00m[1m[38;5;2m
ok 470 Successfully got the correct target result for finding a default ledger query[00m[00m[1m[38;5;2m
ok 471 Successfully got the correct target result for finding a default ledger query[00m[00m[1m[38;5;2m
ok 472 Successfully got the correct target result for finding a string target for ledger query[00m[00m[1m[38;5;2m
ok 473 Successfully got the correct target result for finding a string target[00m[00m[1m[38;5;2m
ok 474 Successfully got the correct target result for should get back the same target if a good peer[00m[00m[1m[38;5;2m
ok 475 Successfully got the correct target result for should get back the same target if a good peer[00m[00m[1m[38;5;2m
ok 476 Successfully got the correct target result for finding a default ledger query without networkconfig[00m[00m[1m[38;5;2m
ok 477 Successfully got the correct target result for finding a default targets without networkconfig[00m[00m[1m[38;5;2m
ok 478 Should be able to run channel target methods[00m[00m[1m[38;5;2m
ok 479 Should get an error back when no targets are available[00m[00m[1m[38;5;2m
ok 480 Should get an error back when passing an array[00m[00m[1m[38;5;2m
ok 481 Should get an error back when passing a bad name[00m[00m[1m[38;5;2m
ok 482 Should get an error when the request orderer name is not found[00m[00m[1m[38;5;2m
ok 483 Should get an error when the request orderer is not a valid object[00m[00m[1m[38;5;2m
ok 484 Should get an error when the request orderer is not defined and the channel does not have any orderers[00m[00m[1m[38;5;2m
ok 485 orderer has a orderer [00m[00m[1m[38;5;2m
ok 486 orderer has a orderer [00m[00m[1m[38;5;2m
ok 487 orderer has a orderer [00m[00m[1m[38;5;2m
ok 488 orderer has a orderer [00m[00m[1m[38;5;2m
ok 489 Should be able to get orderer[00m[00m[1m[38;5;2m
ok 490 Should be able to load additional configurations[00m[00m[1m[38;5;2m
ok 491 check name[00m[00m[1m[38;5;2m
ok 492 check mspid[00m[00m[1m[38;5;2m
ok 493 check getPeers[00m[00m[1m[38;5;2m
ok 494 check getPeers[00m[00m[2m[38;5;66m
# Organization : {name : name, mspid : mspid, peers : [peer], certificateAuthorities : [ca]}[00m[00m[1m[38;5;2m
ok 495 Should be able to run all methods of Organization[00m[00m[1m[38;5;2m
ok 496 check name[00m[00m[1m[38;5;2m
ok 497 check caname[00m[00m[1m[38;5;2m
ok 498 check url[00m[00m[1m[38;5;2m
ok 499 check connection options[00m[00m[1m[38;5;2m
ok 500 check tlscert[00m[00m[1m[38;5;2m
ok 501 check registrar[00m[00m[2m[38;5;66m
# CertificateAuthority : {name : name, url : url}[00m[00m[1m[38;5;2m
ok 502 Should be able to run all methods of CertificateAuthority[00m[00m[1m[38;5;2m
ok 503 Should get an error No network configuration has been loaded[00m[00m[1m[38;5;2m
ok 504 Should get an error Invalid parameter. Must have a valid private key.[00m[00m[1m[38;5;2m
ok 505 Should get an error Invalid parameter. Must have a valid certificate.[00m[00m[1m[38;5;2m
ok 506 Should get an error Invalid parameter. Must have a valid mspid.[00m[00m[1m[38;5;2m
ok 507 Should get an error No identity has been assigned to this client[00m[00m[1m[38;5;2m
ok 508 Successfully loaded a network configuration[00m[00m[1m[38;5;2m
ok 509 Should be able to try to load an admin from the config[00m[00m[1m[38;5;2m
ok 510 Should be able to load an additional config ...this one has the client section[00m[00m[1m[38;5;2m
ok 511 Should be able to try to load an admin from the config[00m[00m[1m[38;5;2m
ok 512 Successfully loaded a network configuration[00m[00m[1m[38;5;2m
ok 513 Should be able to load an additional config ...this one has the client section[00m[00m[1m[38;5;2m
ok 514 Successfully loaded a network configuration[00m[00m[1m[38;5;2m
ok 515 Should be able to load an additional config ...this one has the client section[00m[00m[1m[38;5;2m
ok 516 Successfully loaded a network configuration[00m[00m[1m[38;5;2m
ok 517 Should be able to load an additional config ...this one has the client section[00m[00m[1m[38;5;2m
ok 518 Successfully loaded a network configuration[00m[00m[2m[38;5;66m
# [00m

 ** channel testing **

[00m[1m[38;5;2m
ok 519 Checking that we got the correct number of peers in the list[00m[00m[1m[38;5;2m
ok 520 Checking that we got the correct peer in the list[00m[00m[1m[38;5;2m
ok 521 Checking that we got the correct peer in the list[00m[00m[2m[38;5;66m
# [00m

** BasePackager tests **

[00m[1m[38;5;2m
ok 522 Node.isSource() should return true for valid extension ".keep"[00m[00m[1m[38;5;2m
ok 523 Node.isSource() should return true for valid extension ".keep2"[00m[00m[1m[38;5;2m
ok 524 Node.isSource() should return false for invalid extension ".keep3"[00m[00m[1m[38;5;2m
ok 525 Node.isMetadata() should return true for valid extension ".json"[00m[00m[1m[38;5;2m
ok 526 Node.isMetadata() should return false for invalid extension ".notjson"[00m[00m[1m[38;5;2m
ok 527 Golang.isSource() should return true for valid extension ".keep"[00m[00m[1m[38;5;2m
ok 528 Golang.isSource() should return true for valid extension ".keep2"[00m[00m[1m[38;5;2m
ok 529 Golang.isSource() should return false for invalid extension ".keep3"[00m[00m[1m[38;5;2m
ok 530 Golang.isMetadata() should return true for valid extension ".json"[00m[00m[1m[38;5;2m
ok 531 Golang.isMetadata() should return false for invalid extension ".notjson"[00m[00m[2m[38;5;66m
# [00m

** Golang Packager tests **

[00m[1m[38;5;2m
ok 532 Channel.packageChaincode() should return null for dev mode[00m[00m[1m[38;5;2m
ok 533 pr1 Successfully caught error[00m[00m[1m[38;5;2m
ok 534 Successfully caught Client requires a network configuration loaded, stores attached, and crypto suite.[00m[00m[1m[38;5;2m
ok 535 Should throw error: Missing chaincodePath parameter[00m[00m[1m[38;5;2m
ok 536 Should return null when packaging for dev mode[00m[00m[1m[38;5;2m
ok 537 Golang.findMetadataDescriptors() pass with expected error[00m[00m[2m[38;5;66m
# Error: ENOENT: no such file or directory, lstat '/somepath'[00m[00m[1m[38;5;2m
ok 538 Should throw error: ENOENT: no such file or directory[00m[00m[1m[38;5;2m
ok 539 Should be able to load the stores from the config[00m[00m[1m[38;5;2m
ok 540 Should be able to load an admin from the config[00m[00m[1m[38;5;2m
ok 541 Should be able to get the loaded admin identity[00m[00m[1m[38;5;2m
ok 542 Should be able to load the stores from the config[00m[00m[1m[38;5;2m
ok 543 Successfully caught Missing parameter. Must have a username.[00m[00m[1m[38;5;2m
ok 544 Should be able to load the stores from the config[00m[00m[1m[38;5;2m
ok 545 Successfully caught Missing parameter. Must have a password.[00m[00m[1m[38;5;2m
ok 546 Expected Golang.findMetadataDescriptors() to return one valid descriptor[00m[00m[1m[38;5;2m
ok 547 Golang.findMetadataDescriptors() should return valid descriptor name[00m[00m[1m[38;5;2m
ok 548 Expected Node.findMetadataDescriptors() to return one valid descriptor[00m[00m[1m[38;5;2m
ok 549 Node.findMetadataDescriptors() should return valid descriptor name[00m[00m[1m[38;5;2m
ok 550 The tar.gz file produced by Packager.package() has the "src/github.com/example_cc/example_cc.go" file[00m[00m[2m[38;5;66m
# [00m

** Node.js Packager tests **

[00m[1m[38;5;2m
ok 551 Should return null when packaging for dev mode[00m[00m[1m[38;5;2m
ok 552 Should throw error: ENOENT: no such file or directory[00m[00m[1m[38;5;2m
ok 553 The tar.gz file produced by Packager.package() has the "src/chaincode.js" file[00m[00m[1m[38;5;2m
ok 554 The tar.gz file produced by Packager.package() has the "src/package.json" file[00m[00m[1m[38;5;2m
ok 555 dummy.js should exist this time, because we does not ignore it[00m[00m[1m[38;5;2m
ok 556 The tar.gz file produced by Packager.package() does not have the "node_modules" folder[00m[00m[1m[38;5;2m
ok 557 The tar.gz file produced by Packager.package() has the "src/chaincode.js" file[00m[00m[1m[38;5;2m
ok 558 The tar.gz file produced by Packager.package() has the "src/package.json" file[00m[00m[1m[38;5;2m
ok 559 The tar.gz file produced by Packager.package() does not have the "node_modules" folder[00m[00m[1m[38;5;2m
ok 560 The tar.gz file produced by Packager.package() has the "src/chaincode.js" file[00m[00m[1m[38;5;2m
ok 561 The tar.gz file produced by Packager.package() has the "src/package.json" file[00m[00m[1m[38;5;2m
ok 562 The tar.gz file produced by Packager.package() has the "src/some.other.file" file[00m[00m[1m[38;5;2m
ok 563 The tar.gz file produced by Packager.package() does not has the "node_modules" folder[00m[00m[1m[38;5;2m
ok 564 The tar.gz file produced by Packager.package() has the "META-INF/statedb/couchdb/indexes/index.json" file[00m[00m[2m[38;5;66m
# [00m

** Java chaincode Packager tests **

[00m[1m[38;5;2m
ok 565 Should return null when packaging for dev mode[00m[00m[1m[38;5;2m
ok 566 Should throw error: ENOENT: no such file or directory[00m[00m[1m[38;5;2m
ok 567 The tar.gz file produced by Packager.package() has the "SimpleChaincode.java" file[00m[00m[1m[38;5;2m
ok 568 The tar.gz file produced by Packager.package() has the "META-INF/statedb/couchdb/indexes/index.json" file[00m[00m[2m[38;5;66m
# [00m

**PKCS11 - locate PKCS11 libpath

[00m[1m[38;5;2m
ok 569 Found a library at /usr/local/lib/softhsm/libsofthsm2.so[00m[00m[1m[38;5;2m
ok 570 Successfully generated an ephemeral AES key[00m[00m[2m[38;5;66m
# AES ski[32]: b8d5bfc90f2a357a90444d643ca0d07b1b075eaf2c991358d152dbd38e19d21b[00m[00m[1m[38;5;2m
ok 571 Successfully recovered key from calculated SKI[00m[00m[1m[38;5;2m
ok 572 Successfully decrypted[00m[00m[2m[38;5;66m
# [00m

**PKCS11 - generate a non-ephemeral key

[00m[1m[38;5;2m
ok 573 Successfully generated a non-ephemeral AES key[00m[00m[1m[38;5;2m
ok 574 Successfully recovered key from store using calculated SKI[00m[00m[1m[38;5;2m
ok 575 Successfully decrypted[00m[00m[2m[38;5;66m
# [00m

**PKCS11 - import an AES key into the crypto card

[00m[1m[38;5;2m
ok 576 Successfully imported an AES key into the crypto card[00m[00m[1m[38;5;2m
ok 577 Successfully decrypted[00m[00m[2m[38;5;66m
# [00m

**PKCS11 - Test generate ephemeral ECDSA key pair, sign, and verify.

[00m[1m[38;5;2m
ok 578 Successfully generated ECDSA key pair[00m[00m[1m[38;5;2m
ok 579 Successfully signed message[00m[00m[1m[38;5;2m
ok 580 Successfully verified message signature[00m[00m[2m[38;5;66m
# [00m

**PKCS11 - Test sign and verify with non-ephemeral ECDSA key pair in the crypto card.

[00m[1m[38;5;2m
ok 581 Successfully generated ECDSA key pair[00m[00m[1m[38;5;2m
ok 582 Successfully recovered key from store using calculated SKI[00m[00m[1m[38;5;2m
ok 583 Successfully verified signature[00m[00m[2m[38;5;66m
# [00m

**PKCS11 - Test Client.createUser with existing PKCS11 key.

[00m[1m[38;5;2m
ok 584 Successfully generated ECDSA key pair[00m[00m[1m[38;5;2m
ok 585 createUser, got user[00m[00m[2m[38;5;66m
# [00m

***** READ in the genesis block *****

[00m[1m[38;5;2m
ok 586  Loaded the geneisis block from the configtx tool[00m[00m[2m[38;5;66m
# [00m

 ** Remote node tests **

[00m[2m[38;5;66m
# * REMOTE *[00m[00m[1m[38;5;2m
ok 587 GRPCS Options tests: new Remote should throw PEM encoded certificate is required.[00m[00m[1m[38;5;2m
ok 588 Check not passing any GRPC options.[00m[00m[1m[38;5;2m
ok 589 GRPCS Options tests: new Remote should throw clientKey and clientCert are both required.[00m[00m[1m[38;5;2m
ok 590 GRPCS Options tests: new Remote should throw clientKey and clientCert are both required.[00m[00m[1m[38;5;2m
ok 591 Pass valid client certificate options.[00m[00m[1m[38;5;2m
ok 592 GRPC Options tests: invalid grpc option value.[00m[00m[1m[38;5;2m
ok 593 GRPC Options tests: non-string option key is allowed but ignored[00m[00m[1m[38;5;2m
ok 594 Should throw error if timeout is not an integer[00m[00m[1m[38;5;2m
ok 595 GRPC Options tests: new Remote grpcs with opts created[00m[00m[1m[38;5;2m
ok 596 checking the name assignment[00m[00m[1m[38;5;2m
ok 597 Checking that peer.toString() reports correctly[00m[00m[1m[38;5;2m
ok 598 Remote should have grpc waitForReady timeout default to 3000[00m[00m[1m[38;5;2m
ok 599 GRPC Options tests: new Remote grpc with opts = null _endpoint.creds created[00m[00m[1m[38;5;2m
ok 600 Check passing in the name option[00m[00m[1m[38;5;2m
ok 601 GRPC Options tests: new Remote grpc with opts ssl-target-name-override created[00m[00m[1m[38;5;2m
ok 602 GRPC Options tests: new Remote grpc with opts _endpoint.creds created[00m[00m[1m[38;5;2m
ok 603 GRPC options tests: pass-through option properties[00m[00m[1m[38;5;2m
ok 604 checking that getURL works[00m[00m[1m[38;5;2m
ok 605 Remote should have grpc waitForReady timeout equals 500[00m[00m[2m[38;5;66m
# * PEER *[00m[00m[1m[38;5;2m
ok 606 Check not passing any GRPC options.[00m[00m[1m[38;5;2m
ok 607 Successfully got the waitForReady URL address error[00m[00m[1m[38;5;2m
ok 608 GRPC Options tests: new Peer grpcs with opts created[00m[00m[1m[38;5;2m
ok 609 Checking that peer.toString() reports correctly[00m[00m[1m[38;5;2m
ok 610 Peer should have _grpc_wait_for_ready_timeout equals 3000[00m[00m[1m[38;5;2m
ok 611 GRPC Options tests: new Peer grpc with opts = null _endpoint.creds created[00m[00m[1m[38;5;2m
ok 612 GRPC Options tests: new Peer grpc with opts _endpoint.addr created[00m[00m[1m[38;5;2m
ok 613 GRPC Options tests: new Peer grpc with opts _endpoint.creds created[00m[00m[1m[38;5;2m
ok 614 checking that getURL works[00m[00m[1m[38;5;2m
ok 615 GRPC Options tests: new Peer http should throw InvalidProtocol: Invalid protocol: http. URLs must begin with grpc:// or grpcs://.[00m[00m[1m[38;5;2m
ok 616 GRPCS Options tests: new Peer http should throw PEM encoded certificate is required.[00m[00m[1m[38;5;2m
ok 617 GRPCS Options tests: new Peer http should throw PEM encoded certificate is required.[00m[00m[1m[38;5;2m
ok 618 Pass valid client certificate options.[00m[00m[1m[38;5;2m
ok 619 GRPCS Options tests: new Peer should throw clientKey and clientCert are both required.[00m[00m[1m[38;5;2m
ok 620 GRPCS Options tests: new Peer should throw clientKey and clientCert are both required.[00m[00m[2m[38;5;66m
# * ORDERER *[00m[00m[1m[38;5;2m
ok 621 Check not passing any GRPC options.[00m[00m[1m[38;5;2m
ok 622 GRPC Options tests: new Orderer grpcs with opts created[00m[00m[1m[38;5;2m
ok 623 Checking that orderer.toString() reports correctly[00m[00m[1m[38;5;2m
ok 624 orderer should have _grpc_wait_for_ready_timeout equals 3000[00m[00m[1m[38;5;2m
ok 625 GRPC Options tests: new Orderer grpc with opts = null _endpoint.creds created[00m[00m[1m[38;5;2m
ok 626 GRPC Options tests: new Orederer grpc with opts _endpoint.addr created[00m[00m[1m[38;5;2m
ok 627 GRPC Options tests: new Orderer grpc with opts _endpoint.creds created[00m[00m[1m[38;5;2m
ok 628 checking that the request timeout was set using the passed in value[00m[00m[1m[38;5;2m
ok 629 GRPC Options tests: new Orderer should throw InvalidProtocol: Invalid protocol: http. URLs must begin with grpc:// or grpcs://.[00m[00m[1m[38;5;2m
ok 630 GRPCS Options tests: new Orderer should throw PEM encoded certificate is required.[00m[00m[1m[38;5;2m
ok 631 GRPCS Options tests: new Orderer should throw PEM encoded certificate is required.[00m[00m[1m[38;5;2m
ok 632 Pass valid client certificate options.[00m[00m[1m[38;5;2m
ok 633 GRPCS Options tests: new Orderer should throw clientKey and clientCert are both required.[00m[00m[1m[38;5;2m
ok 634 GRPCS Options tests: new Orderer should throw clientKey and clientCert are both required.[00m[00m[1m[38;5;2m
ok 635 Test default ssl cipher suites are properly set[00m[00m[1m[38;5;2m
ok 636 Test overriden cipher suites[00m[00m[2m[38;5;66m
# [00m

 ** User - constructor set get tests **

[00m[1m[38;5;2m
ok 637 User constructor set get tests 1: new User getName was successful[00m[00m[1m[38;5;2m
ok 638 User constructor set get tests 1: setRoles getRoles was successful[00m[00m[1m[38;5;2m
ok 639 Test invalid enrollment without private key[00m[00m[1m[38;5;2m
ok 640 Test invalid enrollment with empty private key[00m[00m[1m[38;5;2m
ok 641 Test invalid enrollment without certificate[00m[00m[1m[38;5;2m
ok 642 Test invalid enrollment with empty certificate[00m[00m[1m[38;5;2m
ok 643 Test invalid enrollment with no mspId[00m[00m[1m[38;5;2m
ok 644 Test invalid enrollment with null mspId[00m[00m[1m[38;5;2m
ok 645 Test invalid enrollment with empty mspId[00m[00m[1m[38;5;2m
ok 646 User getCryptoSuite should initially be null[00m[00m[1m[38;5;2m
ok 647 User constructor test 2: new User cfg getName was successful[00m[00m[1m[38;5;2m
ok 648 User constructor test 2: new User cfg getRoles was successful[00m[00m[1m[38;5;2m
ok 649 User class setEnrollment() test[00m[00m[2m[38;5;66m
# [00m

 ** HFCAIdentityService Test **

[00m[1m[38;5;2m
ok 650 Successfully enrolled 'admin'.[00m[00m[1m[38;5;2m
ok 651 Successfully set enrollment for user admin[00m[00m[1m[38;5;2m
ok 652 should be equal[00m[00m[1m[38;5;2m
ok 653 should be equal[00m[00m[1m[38;5;2m
ok 654 affiliation org1 exists[00m[00m[1m[38;5;2m
ok 655 affiliation org2 exists[00m[00m[1m[38;5;2m
ok 656 should be equal[00m[00m[1m[38;5;2m
ok 657 Successfully get All afflitions from fabric-ca[00m[00m[1m[38;5;2m
ok 658 Response should have property 'success' equals true[00m[00m[1m[38;5;2m
ok 659 Response should have property 'caname' equals ca-org1[00m[00m[1m[38;5;2m
ok 660 Response should have property 'name' equals "org2.office1"[00m[00m[1m[38;5;2m
ok 661 Successfully created new affiliation org2.office1[00m[00m[1m[38;5;2m
ok 662 Response should have property 'success' equals true[00m[00m[1m[38;5;2m
ok 663 Response should have property 'caname' equals ca-org1[00m[00m[1m[38;5;2m
ok 664 Response should have property 'name' equals "org3.department1"[00m[00m[1m[38;5;2m
ok 665 Successfully force created new affiliation org3.department1[00m[00m[1m[38;5;2m
ok 666 Response should have property 'success' equals true[00m[00m[1m[38;5;2m
ok 667 Response should have property 'caname' equals ca-org1[00m[00m[1m[38;5;2m
ok 668 Response should have property 'name' equals "org2.office1"[00m[00m[1m[38;5;2m
ok 669 Successfully get affiliation org2.office1[00m[00m[1m[38;5;2m
ok 670 Response should have property 'success' equals true[00m[00m[1m[38;5;2m
ok 671 Response should have property 'caname' equals ca-org1[00m[00m[1m[38;5;2m
ok 672 Response should have property 'name' equals "org2.office2"[00m[00m[1m[38;5;2m
ok 673 Successfully updated affiliation org2.office1 to org2.office2[00m[00m[1m[38;5;2m
ok 674 resp should have property 'success' equals true[00m[00m[1m[38;5;2m
ok 675 affiliation org2.office2 exists[00m[00m[1m[38;5;2m
ok 676 affiliation org2.office1 does not exists[00m[00m[1m[38;5;2m
ok 677 After update, org2.office1 does not exist, and org2.office2 exists[00m[00m[1m[38;5;2m
ok 678 Response should have property 'success' equals true[00m[00m[1m[38;5;2m
ok 679 Response should have property 'caname' equals ca-org1[00m[00m[1m[38;5;2m
ok 680 Response should have property 'name' equals "org4"[00m[00m[1m[38;5;2m
ok 681 Successfully force updated affiliation 'org3' to 'org4', now check all its children have been updated too[00m[00m[1m[38;5;2m
ok 682 affiliation org4 exists[00m[00m[1m[38;5;2m
ok 683 affiliation org4.department1 exists[00m[00m[1m[38;5;2m
ok 684 affiliation org3 does not exists[00m[00m[1m[38;5;2m
ok 685 After force update, 'org3' has been renamed to 'org4', 'org3.department1' has been renamed to 'org4.department1'[00m[00m[1m[38;5;2m
ok 686 Response should have property 'success' equals true[00m[00m[1m[38;5;2m
ok 687 Response should have property 'caname' equals ca-org1[00m[00m[1m[38;5;2m
ok 688 Response should have property 'name' equals "org2.office2"[00m[00m[1m[38;5;2m
ok 689 Successfully deleted affiliation org2.office2[00m[00m[1m[38;5;2m
ok 690 Response should have property 'success' equals true[00m[00m[1m[38;5;2m
ok 691 Response should have property 'caname' equals ca-org1[00m[00m[1m[38;5;2m
ok 692 Response should have property 'name' equals "org4"[00m[00m[1m[38;5;2m
ok 693 Successfully deleted affiliation org4[00m[00m[1m[38;5;2m
ok 694 should be equal[00m[00m[1m[38;5;2m
ok 695 affiliation org4 does not exists[00m[00m[1m[38;5;2m
ok 696 After force delete, 'org4' and all its child affiliations are deleted[00m[00m[2m[38;5;66m
# [00m

 ** FabricCAServices - IdentityService Test **

[00m[1m[38;5;2m
ok 697 Successfully enrolled admin at ca_Org1[00m[00m[1m[38;5;2m
ok 698 Successfully enrolled admin at ca_Org2[00m[00m[1m[38;5;2m
ok 699 Successfully set enrollment for user admin1[00m[00m[1m[38;5;2m
ok 700 Successfully set enrollment for user admin2[00m[00m[1m[38;5;2m
ok 701 should be equal[00m[00m[1m[38;5;2m
ok 702 Successfully created new Identity %s by admin1[00m[00m[1m[38;5;2m
ok 703 Successfully enrolled user_0.210 at ca_Org1[00m[00m[1m[38;5;2m
ok 704 should be equal[00m[00m[1m[38;5;2m
ok 705 should throw error if we enroll this new identity at ca_Org2[00m[00m[1m[38;5;2m
ok 706 Successfully get indentity user_0.210[00m[00m[1m[38;5;2m
ok 707 should be equal[00m[00m[1m[38;5;2m
ok 708 should be equal[00m[00m[1m[38;5;2m
ok 709 should be equal[00m[00m[1m[38;5;2m
ok 710 should be equal[00m[00m[1m[38;5;2m
ok 711 should be equal[00m[00m[1m[38;5;2m
ok 712 should be equal[00m[00m[1m[38;5;2m
ok 713 should be equal[00m[00m[1m[38;5;2m
ok 714 should be equal[00m[00m[1m[38;5;2m
ok 715 should be equal[00m[00m[1m[38;5;2m
ok 716 should be equal[00m[00m[1m[38;5;2m
ok 717 should be equal[00m[00m[1m[38;5;2m
ok 718 Successfully updated indentity user_0.210[00m[00m[1m[38;5;2m
ok 719 should be equal[00m[00m[1m[38;5;2m
ok 720 should be equal[00m[00m[1m[38;5;2m
ok 721 Successfully deleted identity user_0.210[00m[00m[2m[38;5;66m
# [00m

 ** FabricCAServices - CertificateService Test **

[00m[1m[38;5;2m
ok 722 Successfully enrolled admin at ca_Org1[00m[00m[1m[38;5;2m
ok 723 Successfully enrolled admin at ca_Org2[00m[00m[1m[38;5;2m
ok 724 Successfully set enrollment for user admin1[00m[00m[1m[38;5;2m
ok 725 Successfully set enrollment for user admin2[00m[00m[1m[38;5;2m
ok 726 certificate service should response success[00m[00m[1m[38;5;2m
ok 727 there should be certificates for the admin user[00m[00m[1m[38;5;2m
ok 728 certificate service should response success[00m[00m[1m[38;5;2m
ok 729 there should be certificates for the admin user[00m[00m[1m[38;5;2m
ok 730 certificate service should response success[00m[00m[1m[38;5;2m
ok 731 there should be a new certificate after a new identity was created[00m[00m[1m[38;5;2m
ok 732 certificate service should response success[00m[00m[1m[38;5;2m
ok 733 the new created user can only view the certificate it owns[00m[00m[1m[38;5;2m
ok 734 certificate service should response success[00m[00m[2m[38;5;66m
# [00m

 ** FabricCAServices: Test enroll() With Dynamic CSR **

[00m[1m[38;5;2m
ok 735 Successfully enrolled 'admin'.[00m[00m[1m[38;5;2m
ok 736 Subject should be /CN=admin[00m[00m[1m[38;5;2m
ok 737 Successfully imported public key from the resulting enrollment certificate[00m[00m[1m[38;5;2m
ok 738 connection-timeout should have default value 3000[00m[00m[1m[38;5;2m
ok 739 socket-operation-timeout should have default value undefined[00m[00m[1m[38;5;196m
not ok 740 Calling non-routable endpoint failed with unexpected error: Error: Calling /aMethod endpoint failed with error [Error: connect ECONNREFUSED 10.255.255.1:3000][00m[00m[2m[38;5;66m
  ---[00m
    operator: fail
    at: timeOutTest (/Users/liamg/dev/fabric-sdk-node/test/integration/fabric-ca-services-tests.js:440:6)
    stack: |-
      Error: Calling non-routable endpoint failed with unexpected error: Error: Calling /aMethod endpoint failed with error [Error: connect ECONNREFUSED 10.255.255.1:3000]
          at Test.assert [as _assert] (/Users/liamg/dev/fabric-sdk-node/node_modules/tape/lib/test.js:224:54)
          at Test.bound [as _assert] (/Users/liamg/dev/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at Test.fail (/Users/liamg/dev/fabric-sdk-node/node_modules/tape/lib/test.js:317:10)
          at Test.bound [as fail] (/Users/liamg/dev/fabric-sdk-node/node_modules/tape/lib/test.js:76:32)
          at timeOutTest (/Users/liamg/dev/fabric-sdk-node/test/integration/fabric-ca-services-tests.js:440:6)
          at <anonymous>
          at process._tickDomainCallback (internal/process/next_tick.js:229:7)[00m[2m[38;5;66m
  ...[00m[00m[1m[38;5;2m
ok 741 should have duration roughly equals 5000[00m[00m[1m[38;5;2m
ok 742 should throw error after SO_TIMEOUT[00m[00m[1m[38;5;2m
ok 743 Successfully tested SO_TIMEOUT[00m[00m[2m[38;5;66m
# secret: "MurClUKEuAgZ"[00m[00m[1m[38;5;2m
ok 744 testUser 'testUser'[00m[00m[1m[38;5;2m
ok 745 Successfully saved user to state store[00m[00m[1m[38;5;2m
ok 746 Successfully rejected registration request "testUserX" in affiliation "bank_X"[00m[00m[1m[38;5;2m
ok 747 Successfully registered "testUserX" in affiliation "org1" with enrollment secret returned: XXQUIggLtCuA[00m[00m[1m[38;5;2m
ok 748 Successfully revoked "testUserX"[00m[00m[1m[38;5;2m
ok 749 Successfully registered another user "testUserY" with preset enrollment secret[00m[00m[2m[38;5;66m
# Ready to revoke certificate serial # "096C2807277F06F8F410AE927D9902B49D72B049" with aki "A22DAF356B2AAB5792EA53E35F66FCCEF1D7F1AA2B3A2B92DBFBF96A448EA26A"[00m[00m[1m[38;5;2m
ok 750 Successfully revoked "testUserY" using serial number and AKI[00m[00m[1m[38;5;2m
ok 751 Successfully generated CRL[00m[00m[1m[38;5;2m
ok 752 Successfully registered "test1" [00m[00m[1m[38;5;2m
ok 753 Successfully enrolled "test1"[00m[00m[1m[38;5;2m
ok 754 Successfully enrolled with certificate without the added attribute ::test1attr[00m[00m[1m[38;5;2m
ok 755 Successfully enrolled with certificate without the added attribute ::ecert[00m[00m[1m[38;5;2m
ok 756 Successfully registered "test2" [00m[00m[1m[38;5;2m
ok 757 Successfully enrolled "test2"[00m[00m[1m[38;5;2m
ok 758 Successfully enrolled with certificate without the added attribute ::test2attr[00m[00m[1m[38;5;2m
ok 759 Successfully received the enrolled certificate with the added attribute ::ecert[00m[00m[1m[38;5;2m
ok 760 Successfully registered "test3" [00m[00m[1m[38;5;2m
ok 761 Successfully enrolled "test3"[00m[00m[1m[38;5;2m
ok 762 Successfully received the enrolled certificate with the added attribute ::test3attr[00m[00m[1m[38;5;2m
ok 763 Successfully received the enrolled certificate with the added attribute ::ecert[00m[00m[1m[38;5;2m
ok 764 Successfully registered "webAdmin" who can register other users with no role[00m[00m[1m[38;5;2m
ok 765 Successfully enrolled "webAdmin"[00m[00m[1m[38;5;2m
ok 766 Successfully received the enrolled certificate with the added attribute ::myattrib[00m[00m[1m[38;5;2m
ok 767 Successfully enrolled with certificate without the added attribute ::dfattrib[00m[00m[1m[38;5;2m
ok 768 Successfully constructed User object for "webAdmin"[00m[00m[1m[38;5;2m
ok 769 Successfully rejected attempt to register a user of invalid role. Error: fabric-ca request register failed with errors [[{"code":71,"message":"Authorization failure"}]][00m[00m[1m[38;5;2m
ok 770 Successfully captured the error when registering "auditor" of role "client" from "webAdmin" but using invalid affiliation[00m[00m[1m[38;5;2m
ok 771 Successfully registered "auditor" of role "client" from "webAdmin"[00m[00m[1m[38;5;2m
ok 772 Successfully re-enrolled "webAdmin" user[00m[00m[1m[38;5;2m
ok 773 Successfully enrolled with certificate without the added attribute ::myattrib[00m[00m[1m[38;5;2m
ok 774 Successfully received the enrolled certificate with the added attribute ::dfattrib[00m[00m[1m[38;5;2m
ok 775 Checking re-enroll response has the private key[00m[00m[1m[38;5;2m
ok 776 Checking re-enroll response has the certificate[00m[00m[1m[38;5;2m
ok 777 Successfully re-enrolled "webAdmin" user with the request for attributes[00m[00m[1m[38;5;2m
ok 778 Successfully received the enrolled certificate with the added attribute ::myattrib[00m[00m[1m[38;5;2m
ok 779 Successfully enrolled with certificate without the added attribute ::dfattrib[00m[00m[1m[38;5;2m
ok 780 Successfully re-enrolled "webAdmin" user with the request for attributes[00m[00m[1m[38;5;2m
ok 781 Successfully received the enrolled certificate with the added attribute ::myattrib[00m[00m[1m[38;5;2m
ok 782 Successfully received the enrolled certificate with the added attribute ::dfattrib[00m[00m[1m[38;5;2m
ok 783 Successfully re-enrolled "webAdmin" user with the request for attributes[00m[00m[1m[38;5;2m
ok 784 Successfully enrolled with certificate without the added attribute ::myattrib[00m[00m[1m[38;5;2m
ok 785 Successfully enrolled with certificate without the added attribute ::dfattrib[00m[00m[2m[38;5;66m
# [00m

 ** FabricCAClient: Test enroll With Static CSR **

[00m[1m[38;5;2m
ok 786 Successfully invoked enroll API with enrollmentID 'testUser'[00m[00m[1m[38;5;2m
ok 787 Subject should be /CN=testUser[00m[00m[2m[38;5;66m
# [00m

***** SDK Built config update  create flow  *****

[00m[1m[38;5;2m
ok 788 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 789 Successfully extracted the config update from the configtx envelope[00m[00m[1m[38;5;2m
ok 790 Successfully enrolled user 'admin' for org1[00m[00m[1m[38;5;2m
ok 791 Successfully signed config update[00m[00m[1m[38;5;2m
ok 792 Successfully enrolled user 'admin' for org2[00m[00m[1m[38;5;2m
ok 793 Successfully signed config update[00m[00m[2m[38;5;66m
# getOrdererAdmin[00m[00m[1m[38;5;2m
ok 794 Successfully enrolled user 'admin' for orderer[00m[00m[1m[38;5;2m
ok 795 Successfully failed with max error on the create channel: Error: 8 RESOURCE_EXHAUSTED: Sent message larger than max (3193 vs. 1000)[00m[00m[1m[38;5;2m
ok 796 Successfully received the configuration[00m[00m[1m[38;5;2m
ok 797 Successfully created the channel.[00m[00m[1m[38;5;2m
ok 798 Successfully waited to make sure new channel was created.[00m[00m[2m[38;5;66m
# [00m

***** End-to-end flow: join channel *****

[00m[1m[38;5;2m
ok 799 Successfully retrieved TLS certificate[00m[00m[2m[38;5;66m
# getOrdererAdmin[00m[00m[1m[38;5;2m
ok 800 Successfully enrolled orderer 'admin' (joined_channel 1)[00m[00m[1m[38;5;2m
ok 801 Successfully got the genesis block[00m[00m[1m[38;5;2m
ok 802 Successfully enrolled org (join_channel):org1 'admin'[00m[00m[1m[38;5;2m
ok 803 Successfully joined peers in organization peerOrg1 to join the channel[00m[00m[1m[38;5;2m
ok 804 Successfully joined peers in organization "peerOrg1" to the channel[00m[00m[1m[38;5;2m
ok 805 Successfully retrieved TLS certificate[00m[00m[2m[38;5;66m
# getOrdererAdmin[00m[00m[1m[38;5;2m
ok 806 Successfully enrolled orderer 'admin' (joined_channel 1)[00m[00m[1m[38;5;2m
ok 807 Successfully got the genesis block[00m[00m[1m[38;5;2m
ok 808 Successfully enrolled org (join_channel):org2 'admin'[00m[00m[1m[38;5;2m
ok 809 Successfully joined peers in organization peerOrg2 to join the channel[00m[00m[1m[38;5;2m
ok 810 Successfully joined peers in organization "peerOrg2" to the channel[00m[00m[2m[38;5;66m
# [00m

***** Node-Chaincode End-to-end flow: chaincode install *****

[00m[1m[38;5;2m
ok 811 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUB+5D6Pil8vd26UclZ1CitY8HW0IwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTI1OTAwWhcNMTkxMDIyMTMwNDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEitO/8lVBNadpPWWQRXCNY3yRG3tZVTpRStNge6Iq/x/j\nF7VN36ZRfNweGiQBfLspbMc/dlZRt1kqqhFwRkxZLqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFIi4GXx/sf3FWkKTYba54xBtjcnzMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQClyFH3mRUcStOyhgvMh3wuzfxEJldGqoU6oZECgo6pzAIgW/CT5cZKO5W8zJO1\nat9yoAEAGuIbSW2xb6ls6TRHdWA=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQghz14NYlq+408aWFN\r\nnTN6/sw9Fn6LLQZYXKnTRKRf5EmhRANCAASK07/yVUE1p2k9ZZBFcI1jfJEbe1lV\r\nOlFK02B7oir/H+MXtU3fplF83B4aJAF8uylsxz92VlG3WSqqEXBGTFku\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUB+5D6Pil8vd26UclZ1CitY8HW0IwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTI1OTAwWhcNMTkxMDIyMTMwNDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEitO/8lVBNadpPWWQRXCNY3yRG3tZVTpRStNge6Iq/x/j\nF7VN36ZRfNweGiQBfLspbMc/dlZRt1kqqhFwRkxZLqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFIi4GXx/sf3FWkKTYba54xBtjcnzMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQClyFH3mRUcStOyhgvMh3wuzfxEJldGqoU6oZECgo6pzAIgW/CT5cZKO5W8zJO1\nat9yoAEAGuIbSW2xb6ls6TRHdWA=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'localhost:7051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 812 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 813 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 814 Successfully installed chaincode in peers of organization "org1"[00m[00m[1m[38;5;2m
ok 815 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUZ7nY4vNWST9HNPkNbRZsT7115rQwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTI1OTAwWhcNMTkxMDIyMTMwNDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEY7aLDHl0oGBZaggRWKakRLHlg89kmNSJ1ZZdQ6lFZFqK\n4IKGlzvivtYYQSHSh7uuXw5KY7vyqoPropvnvQpdCaOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFFRIbqeqVdHf/V4Djfa7trYDMhPcMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0gAMEUC\nIQCcrbGjKaIr5MjRlresjHBk8Ai5xSXhCu1iTuOo9N2UbQIgSc9+boF4cX9oiuS9\ny/elWK1MyHCe646DFl8SHjUQsBs=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgIwfPciHSDrOy9e+N\r\no8vazQWSYG9S5vY3InMYly9a/sChRANCAARjtosMeXSgYFlqCBFYpqREseWDz2SY\r\n1InVll1DqUVkWorggoaXO+K+1hhBIdKHu65fDkpju/Kqg+uim+e9Cl0J\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org2.example.com',
       'grpc.default_authority': 'peer0.org2.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUZ7nY4vNWST9HNPkNbRZsT7115rQwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTI1OTAwWhcNMTkxMDIyMTMwNDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEY7aLDHl0oGBZaggRWKakRLHlg89kmNSJ1ZZdQ6lFZFqK\n4IKGlzvivtYYQSHSh7uuXw5KY7vyqoPropvnvQpdCaOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFFRIbqeqVdHf/V4Djfa7trYDMhPcMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0gAMEUC\nIQCcrbGjKaIr5MjRlresjHBk8Ai5xSXhCu1iTuOo9N2UbQIgSc9+boF4cX9oiuS9\ny/elWK1MyHCe646DFl8SHjUQsBs=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:8051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:8051' },
    _name: 'localhost:8051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 816 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 817 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 818 Successfully installed chaincode in peers of organization "org2"[00m[00m[2m[38;5;66m
# [00m

***** Node-Chaincode End-to-end flow: instantiate chaincode *****

[00m[1m[38;5;2m
ok 819 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 820 Successfully enrolled user 'admin' (e2eUtil 2)[00m[00m[1m[38;5;2m
ok 821 Successfully initialized Channel[00m[00m[1m[38;5;2m
ok 822 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 823 The chaincode instantiate transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 824 The chaincode instantiate transaction was valid.[00m[00m[1m[38;5;2m
ok 825 The chaincode instantiate transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 826 The chaincode instantiate transaction was valid.[00m[00m[1m[38;5;2m
ok 827 Successfully sent instantiatetransaction to the orderer.[00m[00m[1m[38;5;2m
ok 828 Successfully instantiated chaincode on the channel[00m[00m[2m[38;5;66m
# [00m

***** Node-Chaincode End-to-end flow: invoke transaction to move money *****

[00m[1m[38;5;2m
ok 829 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 830 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 831 Successfully enrolled user 'admin' (e2eUtil 3)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[2m[38;5;66m
# stop and start the peer event hub ---- N  O  W ----- you have 0 millis Mon Oct 22 2018 14:04:08 GMT+0100 (BST)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[1m[38;5;2m
ok 832 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 833 transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 834 transaction proposal payloads are valid[00m[00m[1m[38;5;2m
ok 835 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 836 transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 837 transaction proposal payloads are valid[00m[00m[1m[38;5;2m
ok 838 compareProposalResponseResults exection did not throw an error[00m[00m[1m[38;5;2m
ok 839  All proposals have a matching read/writes sets[00m[00m[1m[38;5;2m
ok 840 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 841 The balance transfer transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 842 The balance transfer transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 843 Successfully sent transaction to the orderer.[00m[00m[2m[38;5;66m
# ******************************************************************[00m[00m[2m[38;5;66m
# To manually run /test/integration/query.js, set the following environment variables:[00m[00m[2m[38;5;66m
# export E2E_TX_ID='c625eb8b66fd4fd199ff7829e0d759e03c1e2b1211b1abbb1a26b0aa48063661'[00m[00m[2m[38;5;66m
# ******************************************************************[00m[00m[1m[38;5;2m
ok 844 Successfully closed all connections[00m[00m[1m[38;5;2m
ok 845 Successfully invoke transaction chaincode on channel[00m[00m[1m[38;5;2m
ok 846 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 847 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 848 Successfully enrolled user 'admin' (e2eUtil 3)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[2m[38;5;66m
# stop and start the peer event hub ---- N  O  W ----- you have 0 millis Mon Oct 22 2018 14:04:14 GMT+0100 (BST)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[1m[38;5;2m
ok 849 proposal response should be an instance of error[00m[00m[1m[38;5;2m
ok 850 Error message::transaction returned with failure: Error: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 851 error should contain the correct message: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 852 proposal response should be an instance of error[00m[00m[1m[38;5;2m
ok 853 Error message::transaction returned with failure: Error: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 854 error should contain the correct message: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 855 Successfully closed all connections[00m[00m[1m[38;5;2m
ok 856 Successfully handled invocation errors[00m[00m[2m[38;5;66m
# [00m

***** Node-Chaincode End-to-end flow: query chaincode *****

[00m[1m[38;5;2m
ok 857 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 858 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 859 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 860 checking query results are correct that value is 300[00m[00m[1m[38;5;2m
ok 861 checking query results are correct that value is 300[00m[00m[1m[38;5;2m
ok 862 Successfully query chaincode on the channel[00m[00m[1m[38;5;2m
ok 863 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 864 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 865 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 866 query result should be an instance of error[00m[00m[1m[38;5;2m
ok 867 Error message::transaction returned with failure: Error: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 868 error should contain the correct message: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 869 query result should be an instance of error[00m[00m[1m[38;5;2m
ok 870 Error message::transaction returned with failure: Error: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 871 error should contain the correct message: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 872 Sucessfully handled error from a query[00m[00m[2m[38;5;66m
# [00m

***** Node-Chaincode U P G R A D E flow: chaincode install *****

[00m[1m[38;5;2m
ok 873 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUNvXI7Zh87Td0Hf+JMQdjWZWVq+YwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTI1OTAwWhcNMTkxMDIyMTMwNDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAErF1vhyWQKhonqOxAuCAhz3z+4R63Y/H5jVwP+W17Vo4u\neUMPZFBBBOJfQVOi0gSC4Kabr3qxTdLIbvDHWrFLvqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFNd18K66hDpEL8nSqS7bx8XnT2FVMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0cAMEQC\nIAaCzCShoMLjvSbHVY4txDokVxRAHl1fAuZZRhse8POuAiBRU18s15agx+o3wALi\nIC3jv2XoTBpvUVSOEMKALki7qQ==\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgZoJq5+x/uudr4cON\r\nDMtAdgYEObC1aMzjC5SnQV4yJJShRANCAASsXW+HJZAqGieo7EC4ICHPfP7hHrdj\r\n8fmNXA/5bXtWji55Qw9kUEEE4l9BU6LSBILgppuverFN0shu8MdasUu+\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUNvXI7Zh87Td0Hf+JMQdjWZWVq+YwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTI1OTAwWhcNMTkxMDIyMTMwNDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAErF1vhyWQKhonqOxAuCAhz3z+4R63Y/H5jVwP+W17Vo4u\neUMPZFBBBOJfQVOi0gSC4Kabr3qxTdLIbvDHWrFLvqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFNd18K66hDpEL8nSqS7bx8XnT2FVMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0cAMEQC\nIAaCzCShoMLjvSbHVY4txDokVxRAHl1fAuZZRhse8POuAiBRU18s15agx+o3wALi\nIC3jv2XoTBpvUVSOEMKALki7qQ==\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'localhost:7051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 874 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 875 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 876 Successfully installed chaincode in peers of organization "org1"[00m[00m[1m[38;5;2m
ok 877 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUL3u812fmYuMcGod0h8jJIyeEuxwwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTI1OTAwWhcNMTkxMDIyMTMwNDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAE6Py0EcHH1C+wBJF1wPTq3HE7LtxCKgXYw4BMCRV4cWJC\nT+imRHiuXccj9B4dZKFdkzPFTvQ22MFFMQ47o6hyKaOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFFmyHSHkvIPq/gH2ysFsr8v4yAJWMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0gAMEUC\nIQCmiTT+62ZIOsqUL6zxe1o9sa3Z8zIY2whWoz7coJ29tgIgVubXxORsZ4j2hbZX\naFKFkxrOEFPRUwnsa/v6qFcOiLM=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgaz1EWuh8wDBTDNMF\r\n2iCGUudrmgGVQdfsR0NONkV048mhRANCAATo/LQRwcfUL7AEkXXA9OrccTsu3EIq\r\nBdjDgEwJFXhxYkJP6KZEeK5dxyP0Hh1koV2TM8VO9DbYwUUxDjujqHIp\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org2.example.com',
       'grpc.default_authority': 'peer0.org2.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUL3u812fmYuMcGod0h8jJIyeEuxwwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTI1OTAwWhcNMTkxMDIyMTMwNDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAE6Py0EcHH1C+wBJF1wPTq3HE7LtxCKgXYw4BMCRV4cWJC\nT+imRHiuXccj9B4dZKFdkzPFTvQ22MFFMQ47o6hyKaOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFFmyHSHkvIPq/gH2ysFsr8v4yAJWMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0gAMEUC\nIQCmiTT+62ZIOsqUL6zxe1o9sa3Z8zIY2whWoz7coJ29tgIgVubXxORsZ4j2hbZX\naFKFkxrOEFPRUwnsa/v6qFcOiLM=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:8051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:8051' },
    _name: 'localhost:8051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 878 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 879 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 880 Successfully installed chaincode in peers of organization "org2"[00m[00m[2m[38;5;66m
# [00m

***** Node-Chaincode U P G R A D E flow: upgrade chaincode *****

[00m[1m[38;5;2m
ok 881 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 882 Successfully enrolled user 'admin' (e2eUtil 2)[00m[00m[1m[38;5;2m
ok 883 Successfully initialized Channel[00m[00m[1m[38;5;2m
ok 884 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 885 The chaincode upgrade transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 886 The chaincode upgrade transaction was valid.[00m[00m[1m[38;5;2m
ok 887 The chaincode upgrade transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 888 The chaincode upgrade transaction was valid.[00m[00m[1m[38;5;2m
ok 889 Successfully sent upgradetransaction to the orderer.[00m[00m[1m[38;5;2m
ok 890 Successfully upgrade chaincode on the channel[00m[00m[2m[38;5;66m
# [00m

***** Node-Chaincode U P G R A D E flow: invoke transaction to move money *****

[00m[1m[38;5;2m
ok 891 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 892 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 893 Successfully enrolled user 'admin' (e2eUtil 3)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[2m[38;5;66m
# stop and start the peer event hub ---- N  O  W ----- you have 0 millis Mon Oct 22 2018 14:04:43 GMT+0100 (BST)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[1m[38;5;2m
ok 894 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 895 transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 896 transaction proposal payloads are valid[00m[00m[1m[38;5;2m
ok 897 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 898 transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 899 transaction proposal payloads are valid[00m[00m[1m[38;5;2m
ok 900 compareProposalResponseResults exection did not throw an error[00m[00m[1m[38;5;2m
ok 901  All proposals have a matching read/writes sets[00m[00m[1m[38;5;2m
ok 902 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 903 The balance transfer transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 904 The balance transfer transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 905 Successfully sent transaction to the orderer.[00m[00m[2m[38;5;66m
# ******************************************************************[00m[00m[2m[38;5;66m
# To manually run /test/integration/query.js, set the following environment variables:[00m[00m[2m[38;5;66m
# export E2E_TX_ID='1f2ea4808d4de434a24d4ec7b15a400d7a78a0e4146d5bb5831665657f112d23'[00m[00m[2m[38;5;66m
# ******************************************************************[00m[00m[1m[38;5;2m
ok 906 Successfully closed all connections[00m[00m[1m[38;5;2m
ok 907 Successfully invoke transaction chaincode on the channel[00m[00m[2m[38;5;66m
# [00m

***** Node-Chaincode U P G R A D E flow: query chaincode *****

[00m[1m[38;5;2m
ok 908 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 909 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 910 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 911 checking query results are correct that value is 410[00m[00m[1m[38;5;2m
ok 912 checking query results are correct that value is 410[00m[00m[1m[38;5;2m
ok 913 Successfully query chaincode on the channel[00m[00m[2m[38;5;66m
# [00m

***** Node-Chaincode TransientMap Support in Proposals *****

[00m[1m[38;5;2m
ok 914 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 915 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 916 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 917 Checking the result has the transientMap value returned by the chaincode[00m[00m[1m[38;5;2m
ok 918 Checking the result has the transientMap value returned by the chaincode[00m[00m[1m[38;5;2m
ok 919 Successfully verified transient map values[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: chaincode install *****

[00m[1m[38;5;2m
ok 920 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUAvegGWz6Qobwal7GwNM6xa3q2rMwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMDAwWhcNMTkxMDIyMTMwNTAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAER1XXt3LPKWC3A3hyUxRgJpH+8eZ2gGik6uwzhd1s/grV\noWAeukB10fGU/+b27FXppmmykwdBrooKu/KUELo4vKOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFKqsbyEWiG+OhewnCKXtTNqliiTAMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQCY2HngzLrSrEumGFAWsgqHLiOG0gTYkcyvQ9ORQn0qegIgdfpu03If8OthYCGm\nG49VP+uE4hPtoJs4Ai6DotZdtmU=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgfhvoteOO2ILbcj0b\r\naZYruYe7U8PAp08Tmw9d27ishemhRANCAARHVde3cs8pYLcDeHJTFGAmkf7x5naA\r\naKTq7DOF3Wz+CtWhYB66QHXR8ZT/5vbsVemmabKTB0Guigq78pQQuji8\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUAvegGWz6Qobwal7GwNM6xa3q2rMwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMDAwWhcNMTkxMDIyMTMwNTAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAER1XXt3LPKWC3A3hyUxRgJpH+8eZ2gGik6uwzhd1s/grV\noWAeukB10fGU/+b27FXppmmykwdBrooKu/KUELo4vKOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFKqsbyEWiG+OhewnCKXtTNqliiTAMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQCY2HngzLrSrEumGFAWsgqHLiOG0gTYkcyvQ9ORQn0qegIgdfpu03If8OthYCGm\nG49VP+uE4hPtoJs4Ai6DotZdtmU=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'localhost:7051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 921 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 922 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 923 Successfully installed chaincode in peers of organization "org1"[00m[00m[1m[38;5;2m
ok 924 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUMsR2akUaCE081043LqoM2fTEL/IwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMDAwWhcNMTkxMDIyMTMwNTAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEfa+P+t0rGPSqlugtuMKHBn1HZmsa2vTmkokGOrJhm24W\npccNsS5sN5wr2adf3jNfB1XMZK18QbLNCB0q9OpUV6OBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFPGWn4SY1wQq7fX5JIh48Ro+4wnDMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0gAMEUC\nIQDNMuvRtGVLfbjojDutIzZxwYezbvM2nI4umvMV1tR7rQIgUJiHs87F3xV9pG9a\n0lOq9u/pxeXa4OieKO8qc+dbNUU=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgj4cXr+QJIp39hohQ\r\n1JPjxsYcJIi3gCg+eHMDOtkgAzqhRANCAAR9r4/63SsY9KqW6C24wocGfUdmaxra\r\n9OaSiQY6smGbbhalxw2xLmw3nCvZp1/eM18HVcxkrXxBss0IHSr06lRX\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org2.example.com',
       'grpc.default_authority': 'peer0.org2.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUMsR2akUaCE081043LqoM2fTEL/IwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMDAwWhcNMTkxMDIyMTMwNTAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEfa+P+t0rGPSqlugtuMKHBn1HZmsa2vTmkokGOrJhm24W\npccNsS5sN5wr2adf3jNfB1XMZK18QbLNCB0q9OpUV6OBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFPGWn4SY1wQq7fX5JIh48Ro+4wnDMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0gAMEUC\nIQDNMuvRtGVLfbjojDutIzZxwYezbvM2nI4umvMV1tR7rQIgUJiHs87F3xV9pG9a\n0lOq9u/pxeXa4OieKO8qc+dbNUU=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:8051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:8051' },
    _name: 'localhost:8051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 925 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 926 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 927 Successfully installed chaincode in peers of organization "org2"[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: instantiate chaincode *****

[00m[1m[38;5;2m
ok 928 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 929 Successfully enrolled user 'admin' (e2eUtil 2)[00m[00m[1m[38;5;2m
ok 930 Successfully initialized Channel[00m[00m[1m[38;5;2m
ok 931 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 932 The chaincode instantiate transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 933 The chaincode instantiate transaction was valid.[00m[00m[1m[38;5;2m
ok 934 The chaincode instantiate transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 935 The chaincode instantiate transaction was valid.[00m[00m[1m[38;5;2m
ok 936 Successfully sent instantiatetransaction to the orderer.[00m[00m[1m[38;5;2m
ok 937 Successfully instantiated chaincode on the channel[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: import identity into wallet *****

[00m[1m[38;5;2m
ok 938 Successfully imported User1@org1.example.com into wallet[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and default event strategy *****

[00m[1m[38;5;2m
ok 939 Connected to the gateway[00m[00m[1m[38;5;2m
ok 940 Initialized the network, mychannel[00m[00m[1m[38;5;2m
ok 941 Got the contract, about to submit "move" transaction[00m[00m[1m[38;5;2m
ok 942 org1 event hub correctly connected[00m[00m[1m[38;5;2m
ok 943 org2 event hub correctly not connected[00m[00m[1m[38;5;2m
ok 944 single event for org1 correctly unblocked submitTransaction[00m[00m[1m[38;5;2m
ok 945 Successfully invoked transaction chaincode on channel[00m[00m[1m[38;5;2m
ok 946 org1 event hub correctly been disconnected[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: invoke multiple transactions to move money using in memory wallet and default event strategy *****

[00m[1m[38;5;2m
ok 947 Connected to the gateway[00m[00m[1m[38;5;2m
ok 948 Initialized the network, mychannel[00m[00m[1m[38;5;2m
ok 949 Got the contract, about to submit "move" transaction[00m[00m[1m[38;5;2m
ok 950 org1 event hub correctly connected[00m[00m[1m[38;5;2m
ok 951 org2 event hub correctly not connected[00m[00m[1m[38;5;2m
ok 952 single event for org1 correctly unblocked submitTransaction[00m[00m[1m[38;5;2m
ok 953 Successfully invoked first transaction chaincode on channel[00m[00m[1m[38;5;2m
ok 954 single event for org1 correctly unblocked submitTransaction[00m[00m[1m[38;5;2m
ok 955 Successfully invoked second transaction chaincode on channel[00m[00m[1m[38;5;2m
ok 956 single event for org1 correctly unblocked submitTransaction[00m[00m[1m[38;5;2m
ok 957 Successfully invoked third transaction chaincode on channel[00m[00m[1m[38;5;2m
ok 958 org1 event hub correctly been disconnected[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and MSPID_SCOPE_ALLFORTX event strategy *****

[00m[1m[38;5;2m
ok 959 Connected to the gateway[00m[00m[1m[38;5;2m
ok 960 Initialized the network, mychannel[00m[00m[1m[38;5;2m
ok 961 Got the contract, about to submit "move" transaction[00m[00m[1m[38;5;2m
ok 962 org2 event hub correctly not connected[00m[00m[1m[38;5;2m
ok 963 single event for org1 correctly unblocked submitTransaction[00m[00m[1m[38;5;2m
ok 964 Successfully invoked transaction chaincode on channel[00m[00m[1m[38;5;2m
ok 965 org1 event hub correctly been disconnected[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and MSPID_SCOPE_ANYFORTX event strategy *****

[00m[1m[38;5;2m
ok 966 Connected to the gateway[00m[00m[1m[38;5;2m
ok 967 Initialized the network, mychannel[00m[00m[1m[38;5;2m
ok 968 Got the contract, about to submit "move" transaction[00m[00m[1m[38;5;2m
ok 969 org2 event hub correctly not connected[00m[00m[1m[38;5;2m
ok 970 single event for org1 correctly unblocked submitTransaction[00m[00m[1m[38;5;2m
ok 971 Successfully invoked transaction chaincode on channel[00m[00m[1m[38;5;2m
ok 972 org1 event hub correctly been disconnected[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and NETWORK_SCOPE_ALLFORTX event strategy *****

[00m[1m[38;5;2m
ok 973 Connected to the gateway[00m[00m[1m[38;5;2m
ok 974 Initialized the network, mychannel[00m[00m[1m[38;5;2m
ok 975 Got the contract, about to submit "move" transaction[00m[00m[1m[38;5;2m
ok 976 org1 events: 1, org2 events: 1[00m[00m[1m[38;5;2m
ok 977 got single events at both org event hubs before submitTransaction was unblocked[00m[00m[1m[38;5;2m
ok 978 Successfully invoked transaction chaincode on channel[00m[00m[1m[38;5;2m
ok 979 org1 event hub correctly been disconnected[00m[00m[1m[38;5;2m
ok 980 org2 event hub correctly been disconnected[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and NETWORK_SCOPE_ANYFORTX event strategy *****

[00m[1m[38;5;2m
ok 981 Connected to the gateway[00m[00m[1m[38;5;2m
ok 982 Initialized the network, mychannel[00m[00m[1m[38;5;2m
ok 983 Got the contract, about to submit "move" transaction[00m[00m[1m[38;5;2m
ok 984 org1 events: 1, org2 events: 0[00m[00m[1m[38;5;2m
ok 985 single event received by one of the event hubs caused submitTransaction to unblock, before other event received[00m[00m[1m[38;5;2m
ok 986 Successfully invoked transaction chaincode on channel[00m[00m[1m[38;5;2m
ok 987 org1 event hub correctly been disconnected[00m[00m[1m[38;5;2m
ok 988 org2 event hub correctly been disconnected[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and plug-in event strategy *****

[00m[1m[38;5;2m
ok 989 Connected to the gateway[00m[00m[1m[38;5;2m
ok 990 Initialized the network, mychannel[00m[00m[1m[38;5;2m
ok 991 Got the contract, about to submit "move" transaction[00m[00m[1m[38;5;2m
ok 992 org2 event hub correctly not connected[00m[00m[1m[38;5;2m
ok 993 single event for org1 correctly unblocked submitTransaction[00m[00m[1m[38;5;2m
ok 994 Successfully invoked transaction chaincode on channel[00m[00m[1m[38;5;2m
ok 995 org1 event hub correctly been disconnected[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and plug-in event strategy 2 *****

[00m[1m[38;5;2m
ok 996 Connected to the gateway[00m[00m[1m[38;5;2m
ok 997 Initialized the network, mychannel[00m[00m[1m[38;5;2m
ok 998 Got the contract, about to submit "move" transaction[00m[00m[1m[38;5;2m
ok 999 org2 event hub correctly not connected[00m[00m[1m[38;5;2m
ok 1000 single event for org1 correctly unblocked submitTransaction[00m[00m[1m[38;5;2m
ok 1001 Successfully invoked transaction chaincode on channel[00m[00m[1m[38;5;2m
ok 1002 org1 event hub correctly been disconnected[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and plug-in event strategy 3 *****

[00m[1m[38;5;2m
ok 1003 Connected to the gateway[00m[00m[1m[38;5;2m
ok 1004 Initialized the network, mychannel[00m[00m[1m[38;5;2m
ok 1005 Got the contract, about to submit "move" transaction[00m[00m[1m[38;5;2m
ok 1006 org2 event hub correctly not connected[00m[00m[1m[38;5;2m
ok 1007 single event for org1 correctly unblocked submitTransaction[00m[00m[1m[38;5;2m
ok 1008 Successfully invoked transaction chaincode on channel[00m[00m[1m[38;5;2m
ok 1009 org1 event hub correctly been disconnected[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: handle transaction error *****

[00m[1m[38;5;2m
ok 1010 Connected to the gateway[00m[00m[1m[38;5;2m
ok 1011 Initialized the network, mychannel[00m[00m[1m[38;5;2m
ok 1012 Got the contract, about to submit "move" transaction[00m[00m[1m[38;5;2m
ok 1013 Successfully handled invocation errors[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: invoke transaction to move money using in file system wallet *****

[00m[1m[38;5;2m
ok 1014 Successfully imported User1@org1.example.com into wallet[00m[00m[1m[38;5;2m
ok 1015 Connected to the gateway[00m[00m[1m[38;5;2m
ok 1016 Initialized the channel, mychannel[00m[00m[1m[38;5;2m
ok 1017 Got the contract, about to submit "move" transaction[00m[00m[1m[38;5;2m
ok 1018 Successfully invoked transaction chaincode on channel[00m[00m[1m[38;5;2m
ok 1019 Successfully handled invocation errors[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: invoke transaction to move money using CouchDB wallet *****

[00m[1m[38;5;2m
ok 1020 Successfully imported User1@org1.example.com into wallet[00m[00m[1m[38;5;2m
ok 1021 Connected to the gateway[00m[00m[1m[38;5;2m
ok 1022 Initialized the channel, mychannel[00m[00m[1m[38;5;2m
ok 1023 Got the contract, about to submit "move" transaction[00m[00m[1m[38;5;2m
ok 1024 Successfully invoked transaction chaincode on channel[00m[00m[1m[38;5;2m
ok 1025 Successfully handled invocation errors[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: invoke transaction to move money using in memory wallet and no event strategy *****

[00m[1m[38;5;2m
ok 1026 Connected to the gateway[00m[00m[1m[38;5;2m
ok 1027 Initialized the network, mychannel[00m[00m[1m[38;5;2m
ok 1028 Got the contract, about to submit "move" transaction[00m[00m[1m[38;5;2m
ok 1029 Successfully invoked transaction chaincode on channel[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: execute transaction to get information *****

[00m[1m[38;5;2m
ok 1030 Successfully imported User1@org1.example.com into wallet[00m[00m[1m[38;5;2m
ok 1031 Connected to the gateway[00m[00m[1m[38;5;2m
ok 1032 Initialized the channel, mychannel[00m[00m[1m[38;5;2m
ok 1033 Got the contract, about to execute (query) transaction[00m[00m[1m[38;5;2m
ok 1034 Successfully got back a value[00m[00m[1m[38;5;2m
ok 1035 Successfully handled invocation errors[00m[00m[2m[38;5;66m
# [00m

****** Network End-to-end flow: import identity into wallet using hsm *****

[00m[1m[38;5;2m
ok 1036 Successfully imported hsmUser into wallet[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: invoke transaction to move money using file hsm wallet and default event strategy *****

[00m[1m[38;5;2m
ok 1037 Connected to the gateway[00m[00m[1m[38;5;2m
ok 1038 Initialized the network, mychannel[00m[00m[1m[38;5;2m
ok 1039 Got the contract, about to submit "move" transaction[00m[00m[1m[38;5;2m
ok 1040 org1 event hub correctly connected[00m[00m[1m[38;5;2m
ok 1041 org2 event hub correctly not connected[00m[00m[1m[38;5;2m
ok 1042 single event for org1 correctly unblocked submitTransaction[00m[00m[1m[38;5;2m
ok 1043 Successfully invoked transaction chaincode on channel[00m[00m[1m[38;5;2m
ok 1044 org1 event hub correctly been disconnected[00m[00m[2m[38;5;66m
# [00m

***** Network End-to-end flow: should close down the HSMWalletMixin ****

[00m[1m[38;5;2m
ok 1045 Successfully closed down HSMWalletMixin[00m[00m[2m[38;5;66m
# [00m

***** End-to-end flow: setAnchorPeers *****

[00m[1m[38;5;2m
ok 1046 Successfully enrolled user 'admin' for org1[00m[00m[2m[38;5;66m
# {"type":3,"version":1,"timestamp":"2018-10-22T13:05:36.311Z","channel_id":"mychannel","tx_id":"bece1b856370521311e18c3a99bcce6c12988042ea97f2a8b384a7f9dec2ce17","epoch":"0","extension":{"type":"Buffer","data":[18,19,18,17,110,101,116,119,111,114,107,45,101,50,101,110,111,100,101,99,99]},"typeString":"ENDORSER_TRANSACTION"}[00m[00m[2m[38;5;66m
# expect block of type "CONFIG" (1), but got "3" instead[00m[00m[2m[38;5;66m
# {"type":1,"version":0,"timestamp":"2018-10-22T13:05:37.000Z","channel_id":"mychannel","tx_id":"","epoch":"0","extension":{"type":"Buffer","data":[]},"typeString":"CONFIG"}[00m[00m[1m[38;5;2m
ok 1047 Successfully update anchor peers.[00m[00m[2m[38;5;66m
# [00m

***** End-to-end flow: chaincode install *****

[00m[1m[38;5;2m
ok 1048 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1049 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUITd86KrikLmByUaZU4QPFJohe0owCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMTAwWhcNMTkxMDIyMTMwNjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEIoNgaiDqIGtpUGL1QeBeVCucPjtWRlata1tfUbgwzeUz\njqwhdzdqrFo8cQzHqB8FXT8XXpgjoA3yo2kuR42MYaOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFDPqLoFIlMks0jXq4likG5RlcitDMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0cAMEQC\nIELoHBPKrubQ/rYAYZ5z+0u5l8x7J+m8bD6RZ/suDGGoAiATELwvSROAvK1+Fkgd\ni2A3WIvXaU57hli0LIgq6e8O2A==\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQge5NCoSglrBKYpKYh\r\nmKfqrSzWKmEr3PougHmu7Uz/K8ehRANCAAQig2BqIOoga2lQYvVB4F5UK5w+O1ZG\r\nVq1rW19RuDDN5TOOrCF3N2qsWjxxDMeoHwVdPxdemCOgDfKjaS5HjYxh\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUITd86KrikLmByUaZU4QPFJohe0owCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMTAwWhcNMTkxMDIyMTMwNjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEIoNgaiDqIGtpUGL1QeBeVCucPjtWRlata1tfUbgwzeUz\njqwhdzdqrFo8cQzHqB8FXT8XXpgjoA3yo2kuR42MYaOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFDPqLoFIlMks0jXq4likG5RlcitDMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0cAMEQC\nIELoHBPKrubQ/rYAYZ5z+0u5l8x7J+m8bD6RZ/suDGGoAiATELwvSROAvK1+Fkgd\ni2A3WIvXaU57hli0LIgq6e8O2A==\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'localhost:7051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1050 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1051 Error: Failed to send install Proposal or receive valid response: Error: access denied for [install]: Failed verifying that proposal's creator satisfies local MSP principal during channelless check policy with policy [Admins]: [This identity is not an admin] at e2eUtils.tlsEnroll.then.then.then.then (/Users/liamg/dev/fabric-sdk-node/test/integration/e2e/e2eUtils.js:151:11) at <anonymous> at process._tickDomainCallback (internal/process/next_tick.js:229:7)[00m[00m[1m[38;5;2m
ok 1052 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1053 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUX1M7S650sXnsYIbioIch5boaDogwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMTAwWhcNMTkxMDIyMTMwNjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEBvIkFVO9FSoS7QCnCJdJA8b17Fm6xCPKdtg4n4AsM2aw\ntz6TkSeDytXFgvoyt9dlIWTBs0jdnIR3Db6LM5YbuqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFPCiraZS4xux5b4z1aRQoL0PCWg7MCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0gAMEUC\nIQDo+gfCGFR5KP7KMt6445E7r0zbzknGJJcFlSuxhXGUUQIgfo/2y4+pTqDOEd0G\n0x+2sVGymZl9CYmyt+TgoSq/G6E=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgGKCm48BCMYRWitOL\r\ncW/O7vP7vybG0bh/NVpch+YQxbGhRANCAAQG8iQVU70VKhLtAKcIl0kDxvXsWbrE\r\nI8p22DifgCwzZrC3PpORJ4PK1cWC+jK312UhZMGzSN2chHcNvoszlhu6\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org2.example.com',
       'grpc.default_authority': 'peer0.org2.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUX1M7S650sXnsYIbioIch5boaDogwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMTAwWhcNMTkxMDIyMTMwNjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEBvIkFVO9FSoS7QCnCJdJA8b17Fm6xCPKdtg4n4AsM2aw\ntz6TkSeDytXFgvoyt9dlIWTBs0jdnIR3Db6LM5YbuqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFPCiraZS4xux5b4z1aRQoL0PCWg7MCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0gAMEUC\nIQDo+gfCGFR5KP7KMt6445E7r0zbzknGJJcFlSuxhXGUUQIgfo/2y4+pTqDOEd0G\n0x+2sVGymZl9CYmyt+TgoSq/G6E=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:8051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:8051' },
    _name: 'localhost:8051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1054 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1055 Error: Failed to send install Proposal or receive valid response: Error: access denied for [install]: Failed verifying that proposal's creator satisfies local MSP principal during channelless check policy with policy [Admins]: [This identity is not an admin] at e2eUtils.tlsEnroll.then.then.then.then (/Users/liamg/dev/fabric-sdk-node/test/integration/e2e/e2eUtils.js:151:11) at <anonymous> at process._tickDomainCallback (internal/process/next_tick.js:229:7)[00m[00m[2m[38;5;66m
# [00m

***** End-to-end flow: chaincode install *****

[00m[1m[38;5;2m
ok 1056 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUE5WZyvPQlljHZ0OavzRm2+JnUdIwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMTAwWhcNMTkxMDIyMTMwNjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAE3R7W3PSeCPRa/hPDq6utZlzIN+fnmTILjMONFpQgpmD1\nGPJh/K3Z37KlPUKSHhPpcP82do2j9kkSKIJgF+jkqKOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFLvXhJcnxU3CRjerHStIW2/iJ3r2MCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQCMGr6fUp3E8pX7Y13Kl3R8/BEg5IoI0vpW1oMA9PtXDQIgGi0FenVfUZy0pvAB\ndEdY2eoxiTnKdqO0zoAeevUzHJg=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgwLNdvUSbdFHTkMgn\r\nGURSR/rUzd3NS55JtCx7GPKwpPShRANCAATdHtbc9J4I9Fr+E8Orq61mXMg35+eZ\r\nMguMw40WlCCmYPUY8mH8rdnfsqU9QpIeE+lw/zZ2jaP2SRIogmAX6OSo\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUE5WZyvPQlljHZ0OavzRm2+JnUdIwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMTAwWhcNMTkxMDIyMTMwNjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAE3R7W3PSeCPRa/hPDq6utZlzIN+fnmTILjMONFpQgpmD1\nGPJh/K3Z37KlPUKSHhPpcP82do2j9kkSKIJgF+jkqKOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFLvXhJcnxU3CRjerHStIW2/iJ3r2MCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQCMGr6fUp3E8pX7Y13Kl3R8/BEg5IoI0vpW1oMA9PtXDQIgGi0FenVfUZy0pvAB\ndEdY2eoxiTnKdqO0zoAeevUzHJg=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'localhost:7051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1057 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1058 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 1059 Successfully installed chaincode in peers of organization "org1"[00m[00m[1m[38;5;2m
ok 1060 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUSXV/2NqdGBXW1nD/oX6iTeZkzyEwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMTAwWhcNMTkxMDIyMTMwNjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAENmvbNnxM79N/O9d+ZDDC56qUXBJwLcxSocpRjynu9Dsw\n0aqHyJDzuUzs7ZFy5YGQNaLP55Pk1ayJZfxc2nqXVaOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFL46iMTUoeJ00MixKTGzGcSKXd5CMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0cAMEQC\nIEwe/FvxMvvKnJMyy/zZPetP7pBlAHFW+6idtX6ZI6lmAiBObPkH4zUgzkbteetz\n7yIa8+KV2nLTTL43sHIIdiQsaA==\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgrhuQbhTEq8aLpp+R\r\nZ5Fj/OUT0zfM7Wz0lmbq9KmK/0ihRANCAAQ2a9s2fEzv0387135kMMLnqpRcEnAt\r\nzFKhylGPKe70OzDRqofIkPO5TOztkXLlgZA1os/nk+TVrIll/FzaepdV\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org2.example.com',
       'grpc.default_authority': 'peer0.org2.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUSXV/2NqdGBXW1nD/oX6iTeZkzyEwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMTAwWhcNMTkxMDIyMTMwNjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAENmvbNnxM79N/O9d+ZDDC56qUXBJwLcxSocpRjynu9Dsw\n0aqHyJDzuUzs7ZFy5YGQNaLP55Pk1ayJZfxc2nqXVaOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFL46iMTUoeJ00MixKTGzGcSKXd5CMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0cAMEQC\nIEwe/FvxMvvKnJMyy/zZPetP7pBlAHFW+6idtX6ZI6lmAiBObPkH4zUgzkbteetz\n7yIa8+KV2nLTTL43sHIIdiQsaA==\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:8051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:8051' },
    _name: 'localhost:8051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1061 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1062 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 1063 Successfully installed chaincode in peers of organization "org2"[00m[00m[2m[38;5;66m
# [00m

***** End-to-end flow: instantiate chaincode *****

[00m[1m[38;5;2m
ok 1064 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1065 Successfully enrolled user 'admin' (e2eUtil 2)[00m[00m[1m[38;5;2m
ok 1066 Successfully initialized Channel[00m[00m[1m[38;5;2m
ok 1067 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1068 The chaincode instantiate transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 1069 The chaincode instantiate transaction was valid.[00m[00m[1m[38;5;2m
ok 1070 The chaincode instantiate transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 1071 The chaincode instantiate transaction was valid.[00m[00m[1m[38;5;2m
ok 1072 Successfully sent instantiatetransaction to the orderer.[00m[00m[1m[38;5;2m
ok 1073 Successfully instantiated chaincode on the channel[00m[00m[2m[38;5;66m
# [00m

***** End-to-end flow: invoke transaction to move money *****

[00m[1m[38;5;2m
ok 1074 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1075 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1076 Successfully enrolled user 'admin' (e2eUtil 3)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[2m[38;5;66m
# stop and start the peer event hub ---- N  O  W ----- you have 0 millis Mon Oct 22 2018 14:05:45 GMT+0100 (BST)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[1m[38;5;2m
ok 1077 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1078 transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 1079 transaction proposal payloads are valid[00m[00m[1m[38;5;2m
ok 1080 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1081 transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 1082 transaction proposal payloads are valid[00m[00m[1m[38;5;2m
ok 1083 compareProposalResponseResults exection did not throw an error[00m[00m[1m[38;5;2m
ok 1084  All proposals have a matching read/writes sets[00m[00m[1m[38;5;2m
ok 1085 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1086 The balance transfer transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 1087 The balance transfer transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 1088 Successfully sent transaction to the orderer.[00m[00m[2m[38;5;66m
# ******************************************************************[00m[00m[2m[38;5;66m
# To manually run /test/integration/query.js, set the following environment variables:[00m[00m[2m[38;5;66m
# export E2E_TX_ID='3a63b1213cafbf6e0e06bafc77a701cc00a5d30e51fc7d9e1227427500b467a3'[00m[00m[2m[38;5;66m
# ******************************************************************[00m[00m[1m[38;5;2m
ok 1089 Successfully closed all connections[00m[00m[1m[38;5;2m
ok 1090 Successfully invoke transaction chaincode on channel[00m[00m[1m[38;5;2m
ok 1091 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1092 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1093 Successfully enrolled user 'admin' (e2eUtil 3)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[2m[38;5;66m
# stop and start the peer event hub ---- N  O  W ----- you have 0 millis Mon Oct 22 2018 14:05:50 GMT+0100 (BST)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[1m[38;5;2m
ok 1094 proposal response should be an instance of error[00m[00m[1m[38;5;2m
ok 1095 Error message::throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1096 error should contain the correct message: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1097 proposal response should be an instance of error[00m[00m[1m[38;5;2m
ok 1098 Error message::throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1099 error should contain the correct message: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1100 Successfully closed all connections[00m[00m[2m[38;5;66m
# [00m

***** End-to-end flow: query chaincode *****

[00m[1m[38;5;2m
ok 1101 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1102 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1103 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 1104 checking query results are correct that value is 300[00m[00m[1m[38;5;2m
ok 1105 checking query results are correct that value is 300[00m[00m[1m[38;5;2m
ok 1106 Successfully query chaincode on the channel[00m[00m[1m[38;5;2m
ok 1107 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1108 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1109 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 1110 query result should be an instance of error[00m[00m[1m[38;5;2m
ok 1111 Error message::throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1112 error should contain the correct message: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1113 query result should be an instance of error[00m[00m[1m[38;5;2m
ok 1114 Error message::throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1115 error should contain the correct message: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1116 Successfully handled error from query[00m[00m[2m[38;5;66m
# [00m

***** End-to-end flow: private data *****

[00m[1m[38;5;2m
ok 1117 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUMDKKgyBrUw+qK9l4RcNFwz8FxJUwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMTAwWhcNMTkxMDIyMTMwNjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEm4YKclidVEhLKj1BH5JftB2Evp2Dq9/pG/in3GDBwXzb\nLa6AX4J9wGFBkRT49jnuG70XZfZR9yBfH2l0o8IpCaOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFJcF+KeZtIyXSl9FKlrkU9NUyAQfMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQDCf4HM8mGmytFXXplS2rV5vZZSMdSubngo/tF6PgwLTwIgaIR2p9LLD/DHbzMg\n6rgpzqH1yFRlG7xrHOKBkc+QBmI=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgtgMKVYYrHPYg95Tk\r\nBlTarYggElO9SrHBpQITp8lm00OhRANCAASbhgpyWJ1USEsqPUEfkl+0HYS+nYOr\r\n3+kb+KfcYMHBfNstroBfgn3AYUGRFPj2Oe4bvRdl9lH3IF8faXSjwikJ\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUMDKKgyBrUw+qK9l4RcNFwz8FxJUwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMTAwWhcNMTkxMDIyMTMwNjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEm4YKclidVEhLKj1BH5JftB2Evp2Dq9/pG/in3GDBwXzb\nLa6AX4J9wGFBkRT49jnuG70XZfZR9yBfH2l0o8IpCaOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFJcF+KeZtIyXSl9FKlrkU9NUyAQfMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQDCf4HM8mGmytFXXplS2rV5vZZSMdSubngo/tF6PgwLTwIgaIR2p9LLD/DHbzMg\n6rgpzqH1yFRlG7xrHOKBkc+QBmI=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'localhost:7051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1118 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1119 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 1120 Successfully installed chaincode github.com/example_cc_private in peers of organization "org1"[00m[00m[1m[38;5;2m
ok 1121 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUKgV9Ev3kocswqIQwxamMiGnEFDAwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMTAwWhcNMTkxMDIyMTMwNjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEr4t1qHVKSVrPlDIo4jqKrWuKSu02lrjl4NKTXXlj1Kd6\n39sYL/WJy9Aw4gRkoRExmslFXkQLqxkFhROCYdyoNKOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFNBqo6drRZSc1WFNgqqLpBsOn+/1MCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0cAMEQC\nIBNDI2GcVez1dDE2vkPqdg35X+PkHA3+cjOkBAabGPEkAiAC+v6DK9ol4YbbnoNo\nDNw7WtURCtvw33j/jFHZCtlZMw==\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgobFn8Jbr5E5V1Uj6\r\nPocJYAj5hN6Zn6qmyinMlva58zKhRANCAASvi3WodUpJWs+UMijiOoqta4pK7TaW\r\nuOXg0pNdeWPUp3rf2xgv9YnL0DDiBGShETGayUVeRAurGQWFE4Jh3Kg0\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org2.example.com',
       'grpc.default_authority': 'peer0.org2.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUKgV9Ev3kocswqIQwxamMiGnEFDAwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMTAwWhcNMTkxMDIyMTMwNjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEr4t1qHVKSVrPlDIo4jqKrWuKSu02lrjl4NKTXXlj1Kd6\n39sYL/WJy9Aw4gRkoRExmslFXkQLqxkFhROCYdyoNKOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFNBqo6drRZSc1WFNgqqLpBsOn+/1MCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0cAMEQC\nIBNDI2GcVez1dDE2vkPqdg35X+PkHA3+cjOkBAabGPEkAiAC+v6DK9ol4YbbnoNo\nDNw7WtURCtvw33j/jFHZCtlZMw==\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:8051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:8051' },
    _name: 'localhost:8051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1122 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1123 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 1124 Successfully installed chaincode github.com/example_cc_private in peers of organization "org2"[00m[00m[1m[38;5;2m
ok 1125 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1126 Successfully enrolled user 'admin' (e2eUtil 2)[00m[00m[1m[38;5;2m
ok 1127 Successfully initialized Channel[00m[00m[1m[38;5;2m
ok 1128 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1129 The chaincode instantiate transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 1130 The chaincode instantiate transaction was valid.[00m[00m[1m[38;5;2m
ok 1131 The chaincode instantiate transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 1132 The chaincode instantiate transaction was valid.[00m[00m[1m[38;5;2m
ok 1133 Successfully sent instantiatetransaction to the orderer.[00m[00m[1m[38;5;2m
ok 1134 Successfully instantiated chaincode github.com/example_cc_private on the channel[00m[00m[1m[38;5;2m
ok 1135 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1136 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1137 Successfully enrolled user 'admin' (e2eUtil 3)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[2m[38;5;66m
# stop and start the peer event hub ---- N  O  W ----- you have 0 millis Mon Oct 22 2018 14:06:18 GMT+0100 (BST)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[1m[38;5;2m
ok 1138 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1139 transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 1140 transaction proposal payloads are valid[00m[00m[1m[38;5;2m
ok 1141 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1142 transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 1143 transaction proposal payloads are valid[00m[00m[1m[38;5;2m
ok 1144 compareProposalResponseResults exection did not throw an error[00m[00m[1m[38;5;2m
ok 1145  All proposals have a matching read/writes sets[00m[00m[1m[38;5;2m
ok 1146 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1147 The balance transfer transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 1148 The balance transfer transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 1149 Successfully sent transaction to the orderer.[00m[00m[2m[38;5;66m
# ******************************************************************[00m[00m[2m[38;5;66m
# To manually run /test/integration/query.js, set the following environment variables:[00m[00m[2m[38;5;66m
# export E2E_TX_ID='184d5fe8cc108d09742e3728e4781014ae84e8803579dfe759461a5877e949b5'[00m[00m[2m[38;5;66m
# ******************************************************************[00m[00m[1m[38;5;2m
ok 1150 Successfully closed all connections[00m[00m[1m[38;5;2m
ok 1151 Successfully invoke transaction chaincode github.com/example_cc_private on channel[00m[00m[1m[38;5;2m
ok 1152 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1153 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1154 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 1155 checking query results are correct that value is {"docType":"detailCol","name":"name1","color":"blue","size":35,"owner":"tom"}[00m[00m[1m[38;5;2m
ok 1156 checking query results are correct that value is {"docType":"detailCol","name":"name1","color":"blue","size":35,"owner":"tom"}[00m[00m[1m[38;5;2m
ok 1157 Successfully query private data in detailCol from chaincode github.com/example_cc_private on channel[00m[00m[1m[38;5;2m
ok 1158 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1159 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1160 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 1161 checking query results are correct that value is {"docType":"sensitiveCol","name":"name1","price":99}[00m[00m[1m[38;5;2m
ok 1162 Successfully query private data in sensitiveCol from chaincode github.com/example_cc_private on channel[00m[00m[1m[38;5;2m
ok 1163 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1164 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1165 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 1166 query result should be an instance of error[00m[00m[1m[38;5;2m
ok 1167 Error message::{"Error":"Failed to get private state for name1"}[00m[00m[1m[38;5;2m
ok 1168 error should contain the correct message: Failed to get private state for name1[00m[00m[1m[38;5;2m
ok 1169 Got error object from peers which did not store private data in a collection based on policy.[00m[00m[2m[38;5;66m
# getCollectionsConfig from peer[00m[00m[1m[38;5;2m
ok 1170 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1171 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1172 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1173 Successfully retrieved collections config from peer[00m[00m[1m[38;5;2m
ok 1174 Successfully query collections config[00m[00m[1m[38;5;2m
ok 1175 should exists two collections[00m[00m[1m[38;5;2m
ok 1176 should be equal[00m[00m[1m[38;5;2m
ok 1177 should be equal[00m[00m[1m[38;5;2m
ok 1178 should be equal[00m[00m[1m[38;5;2m
ok 1179 should be equal[00m[00m[1m[38;5;2m
ok 1180 should be equal[00m[00m[1m[38;5;2m
ok 1181 should be equivalent[00m[00m[1m[38;5;2m
ok 1182 should be equal[00m[00m[1m[38;5;2m
ok 1183 should be equal[00m[00m[1m[38;5;2m
ok 1184 should be equal[00m[00m[1m[38;5;2m
ok 1185 should be equal[00m[00m[1m[38;5;2m
ok 1186 should be equal[00m[00m[1m[38;5;2m
ok 1187 should be equivalent[00m[00m[2m[38;5;66m
# [00m

***** U P G R A D E flow: chaincode install *****

[00m[1m[38;5;2m
ok 1188 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUQbE8Pd+AULHzawuhHwZqv0TDcjcwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMTAwWhcNMTkxMDIyMTMwNjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAE1h2UzYZ5lSM6yfOELCSa8Jn20HVYREUof8I5rTpRFlX/\ntJZl3mayl1iiVxTIOADFvEZUFjyM7cJZmvRUhggB5KOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFKbLoPxWUgRLxDepqlv27E/N5LCTMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0cAMEQC\nIFciIzss12Eb05ln5ozCfz/c/W0DtrqkNa1MYhPYq43mAiBFW2Y5tpqsal9yWh4p\ne8MKUh0K3j/BG8MRMUWrX3JOOQ==\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgNQmfbi4LyLPBEJkN\r\nmn4d1ETqnGJzQXcglvCyC99JX3uhRANCAATWHZTNhnmVIzrJ84QsJJrwmfbQdVhE\r\nRSh/wjmtOlEWVf+0lmXeZrKXWKJXFMg4AMW8RlQWPIztwlma9FSGCAHk\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUQbE8Pd+AULHzawuhHwZqv0TDcjcwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMTAwWhcNMTkxMDIyMTMwNjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAE1h2UzYZ5lSM6yfOELCSa8Jn20HVYREUof8I5rTpRFlX/\ntJZl3mayl1iiVxTIOADFvEZUFjyM7cJZmvRUhggB5KOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFKbLoPxWUgRLxDepqlv27E/N5LCTMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0cAMEQC\nIFciIzss12Eb05ln5ozCfz/c/W0DtrqkNa1MYhPYq43mAiBFW2Y5tpqsal9yWh4p\ne8MKUh0K3j/BG8MRMUWrX3JOOQ==\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'localhost:7051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1189 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1190 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 1191 Successfully installed chaincode in peers of organization "org1"[00m[00m[1m[38;5;2m
ok 1192 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUUt051HdQbkUQpHI29PfcNyi6LOQwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMTAwWhcNMTkxMDIyMTMwNjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEwjqyTvHxXSFYjRqufBiETmHu7Dxc1G5khhJ05RdMNriZ\nq87atjtdCvt74DsUHcxU1OuXmTxO35xPEP9Ws2Ktc6OBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFIGHUUYI8w1YG4QR755gCmYjd0rSMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0gAMEUC\nIQDeyDSBJ4VtFIS9lKOmJ1u2F0XMMinqSeRRdvJBLN7+pQIgQNEPomyz/gg8VPrH\nzOV+mEd+YfZWlwtN5fXSLln0nvQ=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQguYVS2zoN0KH9ghGg\r\np3PxFYbTUILOnzA17KJYJCVGjmqhRANCAATCOrJO8fFdIViNGq58GIROYe7sPFzU\r\nbmSGEnTlF0w2uJmrztq2O10K+3vgOxQdzFTU65eZPE7fnE8Q/1azYq1z\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org2.example.com',
       'grpc.default_authority': 'peer0.org2.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUUt051HdQbkUQpHI29PfcNyi6LOQwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMTAwWhcNMTkxMDIyMTMwNjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEwjqyTvHxXSFYjRqufBiETmHu7Dxc1G5khhJ05RdMNriZ\nq87atjtdCvt74DsUHcxU1OuXmTxO35xPEP9Ws2Ktc6OBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFIGHUUYI8w1YG4QR755gCmYjd0rSMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0gAMEUC\nIQDeyDSBJ4VtFIS9lKOmJ1u2F0XMMinqSeRRdvJBLN7+pQIgQNEPomyz/gg8VPrH\nzOV+mEd+YfZWlwtN5fXSLln0nvQ=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:8051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:8051' },
    _name: 'localhost:8051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1193 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1194 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 1195 Successfully installed chaincode in peers of organization "org2"[00m[00m[2m[38;5;66m
# [00m

***** U P G R A D E flow: upgrade chaincode *****

[00m[1m[38;5;2m
ok 1196 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1197 Successfully enrolled user 'admin' (e2eUtil 2)[00m[00m[1m[38;5;2m
ok 1198 Successfully initialized Channel[00m[00m[1m[38;5;2m
ok 1199 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1200 The chaincode upgrade transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 1201 The chaincode upgrade transaction was valid.[00m[00m[1m[38;5;2m
ok 1202 The chaincode upgrade transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 1203 The chaincode upgrade transaction was valid.[00m[00m[1m[38;5;2m
ok 1204 Successfully sent upgradetransaction to the orderer.[00m[00m[1m[38;5;2m
ok 1205 Successfully upgrade chaincode on the channel[00m[00m[2m[38;5;66m
# [00m

***** U P G R A D E flow: invoke transaction to move money *****

[00m[1m[38;5;2m
ok 1206 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1207 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1208 Successfully enrolled user 'admin' (e2eUtil 3)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[2m[38;5;66m
# stop and start the peer event hub ---- N  O  W ----- you have 0 millis Mon Oct 22 2018 14:06:45 GMT+0100 (BST)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[1m[38;5;2m
ok 1209 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1210 transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 1211 transaction proposal payloads are valid[00m[00m[1m[38;5;2m
ok 1212 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1213 transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 1214 transaction proposal payloads are valid[00m[00m[1m[38;5;2m
ok 1215 compareProposalResponseResults exection did not throw an error[00m[00m[1m[38;5;2m
ok 1216  All proposals have a matching read/writes sets[00m[00m[1m[38;5;2m
ok 1217 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1218 The balance transfer transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 1219 The balance transfer transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 1220 Successfully sent transaction to the orderer.[00m[00m[2m[38;5;66m
# ******************************************************************[00m[00m[2m[38;5;66m
# To manually run /test/integration/query.js, set the following environment variables:[00m[00m[2m[38;5;66m
# export E2E_TX_ID='23db42912f034163d7101060e25818d4c2b5cbbdd0ba619c939abdd518b33daa'[00m[00m[2m[38;5;66m
# ******************************************************************[00m[00m[1m[38;5;2m
ok 1221 Successfully closed all connections[00m[00m[1m[38;5;2m
ok 1222 Successfully invoke transaction chaincode on the channel[00m[00m[2m[38;5;66m
# [00m

***** U P G R A D E flow: query chaincode *****

[00m[1m[38;5;2m
ok 1223 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1224 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1225 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 1226 checking query results are correct that value is 410[00m[00m[1m[38;5;2m
ok 1227 checking query results are correct that value is 410[00m[00m[1m[38;5;2m
ok 1228 Successfully query chaincode on the channel[00m[00m[2m[38;5;66m
# [00m

***** TransientMap Support in Proposals *****

[00m[1m[38;5;2m
ok 1229 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1230 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1231 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 1232 Checking the result has the transientMap value returned by the chaincode[00m[00m[1m[38;5;2m
ok 1233 Checking the result has the transientMap value returned by the chaincode[00m[00m[1m[38;5;2m
ok 1234 Successfully verified transient map values[00m[00m[2m[38;5;66m
# Test sign a contract with a private key offline[00m[00m[1m[38;5;2m
ok 1235 Successfully build endorse transaction proposal[00m[00m[1m[38;5;2m
ok 1236 should be equal[00m[00m[1m[38;5;2m
ok 1237 should be equal[00m[00m[1m[38;5;2m
ok 1238 should be equal[00m[00m[1m[38;5;2m
ok 1239 Successfully build commit transaction proposal[00m[00m[1m[38;5;2m
ok 1240 commit should response success[00m[00m[1m[38;5;2m
ok 1241 Successfully registered event for 48ba00ab05d38dd4f8d34db3c6f5bd2d92fde3eedbde02c8eaf105ccffe8dc24[00m[00m[1m[38;5;2m
ok 1242 Successfully called connect on localhost:7051[00m[00m[1m[38;5;2m
ok 1243 Event has been seen with transaction code:ENDORSEMENT_POLICY_FAILURE for transaction id:48ba00ab05d38dd4f8d34db3c6f5bd2d92fde3eedbde02c8eaf105ccffe8dc24 for block_num:28[00m[00m[1m[38;5;2m
ok 1244 Successfully listened the event for transaction 48ba00ab05d38dd4f8d34db3c6f5bd2d92fde3eedbde02c8eaf105ccffe8dc24[00m[00m[2m[38;5;66m
#   ---->>>>> Query channel working <<<<<-----[00m[00m[1m[38;5;2m
ok 1245 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1246 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1247 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1248 Successfully initialized channel[00m[00m[1m[38;5;2m
ok 1249 checking query results are correct that we got zero block back[00m[00m[1m[38;5;2m
ok 1250 checking query results are correct that we got the correct orderer MSP name[00m[00m[1m[38;5;2m
ok 1251 checking query results are correct that we got the correct policy type[00m[00m[1m[38;5;2m
ok 1252 checking query results are correct that we got the correct policy rule[00m[00m[1m[38;5;2m
ok 1253 checking query results are correct that we got the correct mod policy name[00m[00m[1m[38;5;2m
ok 1254 checking query results are correct that we got a transaction block back[00m[00m[1m[38;5;2m
ok 1255 checking query results are correct that we got a transaction block back with correct endorsement MSP id[00m[00m[1m[38;5;2m
ok 1256 Got tx_id from ConfigSetting "E2E_TX_ID"[00m[00m[1m[38;5;2m
ok 1257 test for header channel name[00m[00m[1m[38;5;2m
ok 1258 test for header channel mspid in identity[00m[00m[1m[38;5;2m
ok 1259 test for endorser mspid in identity[00m[00m[1m[38;5;2m
ok 1260 test for creator mspid in identity[00m[00m[1m[38;5;2m
ok 1261 test for transation status[00m[00m[1m[38;5;2m
ok 1262 test for data model value[00m[00m[1m[38;5;2m
ok 1263 test for write set key value[00m[00m[1m[38;5;2m
ok 1264 Successfully test for read set block num[00m[00m[1m[38;5;2m
ok 1265 got back blockchain info [00m[00m[1m[38;5;2m
ok 1266 got back block number 28[00m[00m[1m[38;5;2m
ok 1267 Should find block[27] by txid: 23db42912f034163d7101060e25818d4c2b5cbbdd0ba619c939abdd518b33daa[00m[00m[1m[38;5;2m
ok 1268 queryBlock(skipDecode = true) returned a decodable binary block[00m[00m[1m[38;5;2m
ok 1269 block number is correct[00m[00m[1m[38;5;2m
ok 1270 queryBlockByHash(skipDecode = true) returned a decodable binary block[00m[00m[1m[38;5;2m
ok 1271 block number is correct[00m[00m[1m[38;5;2m
ok 1272 queryBlockByTxID(skipDecode = true) returned a decodable binary block[00m[00m[1m[38;5;2m
ok 1273 block number is correct[00m[00m[1m[38;5;2m
ok 1274 queryTransaction(skipDecode = true) returned binary transaction which is decodable[00m[00m[1m[38;5;2m
ok 1275 tx_id is correct[00m[00m[2m[38;5;66m
#   ---->>>>> Query channel failing: GetBlockByNumber <<<<<-----[00m[00m[1m[38;5;2m
ok 1276 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1277 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1278 Did not find a block with this number : {"message":"Failed to get block number 9999999, error Entry not found in index","stack":"Error: Failed to get block number 9999999, error Entry not found in index\n at self._endorserClient.processProposal (/Users/liamg/dev/fabric-sdk-node/fabric-client/lib/Peer.js:47:462)\n at Object.onReceiveStatus (/Users/liamg/dev/fabric-sdk-node/node_modules/grpc/src/client_interceptors.js:1191:9)\n at InterceptingListener._callNext (/Users/liamg/dev/fabric-sdk-node/node_modules/grpc/src/client_interceptors.js:564:42)\n at InterceptingListener.onReceiveStatus (/Users/liamg/dev/fabric-sdk-node/node_modules/grpc/src/client_interceptors.js:614:8)\n at callback (/Users/liamg/dev/fabric-sdk-node/node_modules/grpc/src/client_interceptors.js:841:24)","status":500,"payload":{"type":"Buffer","data":[]},"isProposalResponse":true}[00m[00m[2m[38;5;66m
#   ---->>>>> Query channel failing: GetBlockByTxID <<<<<-----[00m[00m[1m[38;5;2m
ok 1279 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1280 Did not find a block with this txid : {"message":"tx_id as string is required","stack":"Error: tx_id as string is required\n at Channel.queryBlockByTxID (/Users/liamg/dev/fabric-sdk-node/fabric-client/lib/Channel.js:577:328)\n at Client.newDefaultKeyValueStore.then.then (/Users/liamg/dev/fabric-sdk-node/test/integration/query.js:293:18)\n at <anonymous>"}[00m[00m[2m[38;5;66m
#   ---->>>>> Query channel failing: GetTransactionByID <<<<<-----[00m[00m[1m[38;5;2m
ok 1281 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1282 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1283 Did not find a transaction ::Error: Failed to get transaction with id 99999, error Entry not found in index[00m[00m[2m[38;5;66m
#   ---->>>>> Query channel failing: GetChannelInfo <<<<<-----[00m[00m[1m[38;5;2m
ok 1284 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1285 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1286 Did not find channel info : {"message":"2 UNKNOWN: access denied: channel [dummy] creator org [Org1MSP]","stack":"Error: 2 UNKNOWN: access denied: channel [dummy] creator org [Org1MSP]\n at Object.exports.createStatusError (/Users/liamg/dev/fabric-sdk-node/node_modules/grpc/src/common.js:87:15)\n at Object.onReceiveStatus (/Users/liamg/dev/fabric-sdk-node/node_modules/grpc/src/client_interceptors.js:1188:28)\n at InterceptingListener._callNext (/Users/liamg/dev/fabric-sdk-node/node_modules/grpc/src/client_interceptors.js:564:42)\n at InterceptingListener.onReceiveStatus (/Users/liamg/dev/fabric-sdk-node/node_modules/grpc/src/client_interceptors.js:614:8)\n at callback (/Users/liamg/dev/fabric-sdk-node/node_modules/grpc/src/client_interceptors.js:841:24)","code":2,"metadata":{"_internal_repr":{}},"details":"access denied: channel [dummy] creator org [Org1MSP]"}[00m[00m[2m[38;5;66m
#   ---->>>>> Query channel failing: GetBlockByHash <<<<<-----[00m[00m[1m[38;5;2m
ok 1287 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1288 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1289 Did not find block data : {"message":"Failed to get block hash dummy, error Entry not found in index","stack":"Error: Failed to get block hash dummy, error Entry not found in index\n at self._endorserClient.processProposal (/Users/liamg/dev/fabric-sdk-node/fabric-client/lib/Peer.js:47:462)\n at Object.onReceiveStatus (/Users/liamg/dev/fabric-sdk-node/node_modules/grpc/src/client_interceptors.js:1191:9)\n at InterceptingListener._callNext (/Users/liamg/dev/fabric-sdk-node/node_modules/grpc/src/client_interceptors.js:564:42)\n at InterceptingListener.onReceiveStatus (/Users/liamg/dev/fabric-sdk-node/node_modules/grpc/src/client_interceptors.js:614:8)\n at callback (/Users/liamg/dev/fabric-sdk-node/node_modules/grpc/src/client_interceptors.js:841:24)","status":500,"payload":{"type":"Buffer","data":[]},"isProposalResponse":true}[00m[00m[2m[38;5;66m
#   ---->>>>> Query Installed Chaincodes working <<<<<-----[00m[00m[1m[38;5;2m
ok 1290 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1291 queryInstalledChaincodes - found match for e2e[00m[00m[2m[38;5;66m
#   ---->>>>> Query Instantiated Chaincodes working <<<<<-----[00m[00m[1m[38;5;2m
ok 1292 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1293 queryInstantiatedChaincodes - found match for e2e[00m[00m[2m[38;5;66m
#   ---->>>>> Query Channels working <<<<<-----[00m[00m[1m[38;5;2m
ok 1294 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1295 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1296 queryChannels matches e2e[00m[00m[2m[38;5;66m
# [00m

 ** createUser happy path - file store **

[00m[1m[38;5;2m
ok 1297 integration.client: : got user[00m[00m[2m[38;5;66m
# [00m

 ** createUser happy path - CouchDB **

[00m[1m[38;5;2m
ok 1298 integration.client: : got user[00m[00m[2m[38;5;66m
# [00m

 ** createUser happy path - Cloudant  **

[00m[1m[38;5;2m
ok 1299 integration.client: : got user[00m[00m[2m[38;5;66m
# [00m

 ** createUser happy path - Cloudant - PEM Strings  **

[00m[1m[38;5;2m
ok 1300 integration.client: : got user[00m[00m[2m[38;5;66m
# [00m

** TEST ** orderer via member missing orderer[00m[1m[38;5;2m
ok 1301 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1302 Successfully enrolled user 'admin'[00m[00m[2m[38;5;66m
# Error: Error: Missing "proposalResponses" parameter in transaction request[00m[00m[1m[38;5;2m
ok 1303 Successfully tested invalid submission due to missing orderers. Error code: Error: Missing "proposalResponses" parameter in transaction request[00m[00m[2m[38;5;66m
# [00m

** TEST ** orderer via member null data[00m[1m[38;5;2m
ok 1304 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1305 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1306 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1307 Failed to submit. Error code: Error: Missing input request object on the transaction request[00m[00m[1m[38;5;2m
ok 1308 Successfully tested invalid submission due to bad data. Error code: undefined[00m[00m[2m[38;5;66m
# [00m

** TEST ** orderer via member bad request[00m[1m[38;5;2m
ok 1309 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1310 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1311 Successfully enrolled user 'admin'[00m[00m[2m[38;5;66m
# Failed to submit. Error:[00m[00m[1m[38;5;2m
ok 1312 Error: no valid endorsements found at Channel.sendTransaction (/Users/liamg/dev/fabric-sdk-node/fabric-client/lib/Channel.js:843:507) at e2eUtils.tlsEnroll.then.then (/Users/liamg/dev/fabric-sdk-node/test/integration/orderer-channel-tests.js:213:20) at <anonymous> at process._tickDomainCallback (internal/process/next_tick.js:229:7)[00m[00m[2m[38;5;66m
# Use FabricCAServices wih a Cloudant CouchDB KeyValueStore[00m[00m[1m[38;5;2m
ok 1313 Successfully set Cloudant CouchDB KeyValueStore for client[00m[00m[1m[38;5;2m
ok 1314 Successfully initialized the Fabric CA service.[00m[00m[1m[38;5;2m
ok 1315 Successfully enrolled admin2 with CA server[00m[00m[1m[38;5;2m
ok 1316 Member isEnrolled successfully.[00m[00m[1m[38;5;2m
ok 1317 Successfully loaded the user from key value store[00m[00m[2m[38;5;66m
# Use FabricCAServices with a CouchDB KeyValueStore[00m[00m[1m[38;5;2m
ok 1318 Successfully set CouchDB KeyValueStore for client[00m[00m[1m[38;5;2m
ok 1319 Successfully initialized the Fabric CA service.[00m[00m[1m[38;5;2m
ok 1320 Successfully enrolled admin2 with CA server[00m[00m[1m[38;5;2m
ok 1321 Member isEnrolled successfully.[00m[00m[1m[38;5;2m
ok 1322 Successfully loaded the user from key value store[00m[00m[2m[38;5;66m
# Use FabricCAServices with a File KeyValueStore[00m[00m[1m[38;5;2m
ok 1323 Successfully set File KeyValueStore for client[00m[00m[1m[38;5;2m
ok 1324 Successfully initialized the Fabric CA service.[00m[00m[1m[38;5;2m
ok 1325 Successfully enrolled admin2 with CA server[00m[00m[1m[38;5;2m
ok 1326 Member isEnrolled successfully.[00m[00m[1m[38;5;2m
ok 1327 Successfully loaded the user from key value store[00m[00m[2m[38;5;66m
# [00m

** Test chaincode install using chaincodePath to create chaincodePackage **

[00m[1m[38;5;2m
ok 1328 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUS1BSj7Fiw+BlfVySsMqZTUt2e9AwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMjAwWhcNMTkxMDIyMTMwNzAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAETVot8ZBRsot/lIJhIjhB8O5EcGJEqWYerdXE/+NRJzrU\nim2dru3pZM1vLkK/1Bl0zP8DZSC0IJk+4NjNic+O/aOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFHxwKSV+EibZ6S4KUYHSfc9/vYzGMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQCgDYXp4Tz5R6mtDsYMsjLLYl5M28pTKrxCPONaJH4JZQIgTtsjp/0YiW2BamFT\nC2Bk9rZvzJeEVdyY97aPEuBuovk=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg1P8UYcG6V/MgFNs9\r\nu3YT+TDIYEE7fa9e6/1MdFAge4+hRANCAARNWi3xkFGyi3+UgmEiOEHw7kRwYkSp\r\nZh6t1cT/41EnOtSKbZ2u7elkzW8uQr/UGXTM/wNlILQgmT7g2M2Jz479\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUS1BSj7Fiw+BlfVySsMqZTUt2e9AwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMjAwWhcNMTkxMDIyMTMwNzAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAETVot8ZBRsot/lIJhIjhB8O5EcGJEqWYerdXE/+NRJzrU\nim2dru3pZM1vLkK/1Bl0zP8DZSC0IJk+4NjNic+O/aOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFHxwKSV+EibZ6S4KUYHSfc9/vYzGMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQCgDYXp4Tz5R6mtDsYMsjLLYl5M28pTKrxCPONaJH4JZQIgTtsjp/0YiW2BamFT\nC2Bk9rZvzJeEVdyY97aPEuBuovk=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'localhost:7051',
    _request_timeout: 45000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1329 using chaincodePath - Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1330 success[00m[00m[1m[38;5;2m
ok 1331 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUUCWnjHklR2Rwbr0SQs62slQh7DMwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMjAwWhcNMTkxMDIyMTMwNzAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEKKq/cAv3hCKSgaq6cmDgbYCkJVr1lkEAviZlkUbRghIt\n4KoB21ioeNbACPj52wtD4WM8rIhbcpFPnyRGLcGniqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFOIaXhxBETG/kYalIV7yTV/wiV9TMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0cAMEQC\nIEvbjPApFShUToINwU3pvQGvqQ7QxGGFP5JSS9t4DhC/AiAggbbmuHsMwJaAFuH/\nrTnyz1x9a0rl2yYtI638SYGn/Q==\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg6Z8lRkI2x/eWe1uj\r\nYWQhKeUaDX4iLP/4SkfBglkVWIahRANCAAQoqr9wC/eEIpKBqrpyYOBtgKQlWvWW\r\nQQC+JmWRRtGCEi3gqgHbWKh41sAI+PnbC0PhYzysiFtykU+fJEYtwaeK\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUUCWnjHklR2Rwbr0SQs62slQh7DMwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMjAwWhcNMTkxMDIyMTMwNzAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEKKq/cAv3hCKSgaq6cmDgbYCkJVr1lkEAviZlkUbRghIt\n4KoB21ioeNbACPj52wtD4WM8rIhbcpFPnyRGLcGniqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFOIaXhxBETG/kYalIV7yTV/wiV9TMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0cAMEQC\nIEvbjPApFShUToINwU3pvQGvqQ7QxGGFP5JSS9t4DhC/AiAggbbmuHsMwJaAFuH/\nrTnyz1x9a0rl2yYtI638SYGn/Q==\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'localhost:7051',
    _request_timeout: 45000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1332 using chaincodePath0 - Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1333 passed check for exists on install again[00m[00m[2m[38;5;66m
# [00m

** Test chaincode install using chaincodePackage[byte] **

[00m[2m[38;5;66m
# *****  Test channel events[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUf97p1QIhtA5uohah74ckmm8Rt1YwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMjAwWhcNMTkxMDIyMTMwNzAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEHSh0Qn5c/pVUyZR5cUZwS3lZY6tb3U8X6i9667rOcyXA\ntcDrxLhETmfm6+Sb1yAThbzU2qXzBsaz1ztWy/S8PKOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFOCtalep3eRODGxJVRlMf4ysGePjMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQDm0elPcjTu7vVDRCtrj8z1xwL9CupQNaGn1mPyzmGdAgIgPSf33k7BHX6IgYP6\nS/GPlmokCFdOACcUssYFOI2rNmU=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgjboCmjgodrAW3qpV\r\nRk5x5znfFD0/AZYiCYdGI58OtnehRANCAAQdKHRCflz+lVTJlHlxRnBLeVljq1vd\r\nTxfqL3rrus5zJcC1wOvEuEROZ+br5JvXIBOFvNTapfMGxrPXO1bL9Lw8\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUf97p1QIhtA5uohah74ckmm8Rt1YwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMjAwWhcNMTkxMDIyMTMwNzAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEHSh0Qn5c/pVUyZR5cUZwS3lZY6tb3U8X6i9667rOcyXA\ntcDrxLhETmfm6+Sb1yAThbzU2qXzBsaz1ztWy/S8PKOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFOCtalep3eRODGxJVRlMf4ysGePjMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQDm0elPcjTu7vVDRCtrj8z1xwL9CupQNaGn1mPyzmGdAgIgPSf33k7BHX6IgYP6\nS/GPlmokCFdOACcUssYFOI2rNmU=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'localhost:7051',
    _request_timeout: 45000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1334  ======>>>>> CHANNEL EVENT INTEGRATION TEST START[00m[00m[1m[38;5;2m
ok 1335 Successfully endorsed the proposal[00m[00m[1m[38;5;2m
ok 1336 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUUVGSoSZk8MmdTH9VAjk6Tq+cra8wCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMjAwWhcNMTkxMDIyMTMwNzAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEmYP3c0dlO1HhJD1hQTgyL/8rFxcQWOBjsjaRPdCk06FH\n2tqBubj2JsdcVc+MfhUaRHlFQgPgooIqvuoKI3FjY6OBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFEN+U5ecMc0sjyUr9H5eLxFIG1fcMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQDNE1NC4IjH6Yg48sd0vB0b4Rr0RQNO1AdDsnBbVGyJbgIgdXs61umEl5QKYl5i\nBx+0xqIaP+GYN7YrDvslPSqsP/w=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgTAI9DGOxVN9kEg7x\r\nTWDOhR7DGKX2qn7kjcJ6eJjDpoqhRANCAASZg/dzR2U7UeEkPWFBODIv/ysXFxBY\r\n4GOyNpE90KTToUfa2oG5uPYmx1xVz4x+FRpEeUVCA+Cigiq+6gojcWNj\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUUVGSoSZk8MmdTH9VAjk6Tq+cra8wCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMjAwWhcNMTkxMDIyMTMwNzAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEmYP3c0dlO1HhJD1hQTgyL/8rFxcQWOBjsjaRPdCk06FH\n2tqBubj2JsdcVc+MfhUaRHlFQgPgooIqvuoKI3FjY6OBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFEN+U5ecMc0sjyUr9H5eLxFIG1fcMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQDNE1NC4IjH6Yg48sd0vB0b4Rr0RQNO1AdDsnBbVGyJbgIgdXs61umEl5QKYl5i\nBx+0xqIaP+GYN7YrDvslPSqsP/w=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'localhost:7051',
    _request_timeout: 45000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1337 using chaincodePackage - Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1338 using chaincodePackage - success[00m[00m[1m[38;5;2m
ok 1339 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUZX05JV2dpt13deJL9an4v+WiYeYwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMjAwWhcNMTkxMDIyMTMwNzAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEQCJQFaonZ0mjiJPu8vyP/M/lioKK6DRzbDrYiarLGlUj\nW3z0z/SMifdItj9K0MCIbfOwG+VYkGcJ+pQtD42BhqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFMNU8j97VhlMV/ug687oTPIrXXGcMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQD3RpEeHTIeLQxatZkPJ+RRhHkFFNcxaI2DazGVgVnNAwIgH/qffOq9T0/6B4Yv\nr+t4MhDE6kSFuI88KoGXwCEKuzQ=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg2WF25tN/TfMyo7B4\r\nQZJS/hBSUaHO14gQbNWg75R7lVihRANCAARAIlAVqidnSaOIk+7y/I/8z+WKgoro\r\nNHNsOtiJqssaVSNbfPTP9IyJ90i2P0rQwIht87Ab5ViQZwn6lC0PjYGG\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUZX05JV2dpt13deJL9an4v+WiYeYwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMjAwWhcNMTkxMDIyMTMwNzAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEQCJQFaonZ0mjiJPu8vyP/M/lioKK6DRzbDrYiarLGlUj\nW3z0z/SMifdItj9K0MCIbfOwG+VYkGcJ+pQtD42BhqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFMNU8j97VhlMV/ug687oTPIrXXGcMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQD3RpEeHTIeLQxatZkPJ+RRhHkFFNcxaI2DazGVgVnNAwIgH/qffOq9T0/6B4Yv\nr+t4MhDE6kSFuI88KoGXwCEKuzQ=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'localhost:7051',
    _request_timeout: 45000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1340 using chaincodePackage0 - Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1341 passed check for exists same code again[00m[00m[1m[38;5;2m
ok 1342 Successfully endorsed the proposal[00m[00m[1m[38;5;2m
ok 1343 Successfully created new channel event hub for peer, isName check[00m[00m[1m[38;5;2m
ok 1344 Successfully created new channel event hub for peer, isconnected check[00m[00m[1m[38;5;2m
ok 1345 instantiate has transaction status code:VALID for transaction id ::6f533427e8edaad8e4e4d5103ea8c709e5a7db5ca246e7ff59aa0f58d112fb0e block_num:29[00m[00m[1m[38;5;2m
ok 1346 Successfully got the instantiate results[00m[00m[1m[38;5;2m
ok 1347 checking that the event says the transaction was valid[00m[00m[1m[38;5;2m
ok 1348 Successfully endorsed the proposal[00m[00m[1m[38;5;2m
ok 1349 Successfully received the filtered block event for block_num:30[00m[00m[1m[38;5;2m
ok 1350 Successfully got transaction event with txid:8096478c58f267638e5b0b99288d0ab0d64c3fa83f8cffd79368e0f1362546fd status:VALID for block num:30[00m[00m[1m[38;5;2m
ok 1351 Successfully got ALL transaction event with txid:8096478c58f267638e5b0b99288d0ab0d64c3fa83f8cffd79368e0f1362546fd[00m[00m[1m[38;5;2m
ok 1352 Successfully got the block passed through from the transaction listener [00m[00m[1m[38;5;2m
ok 1353 Successfully receive error callback on the block event ::Error: ChannelEventHub has been shutdown[00m[00m[1m[38;5;2m
ok 1354 Successfully received the error callback for "NONEXISTENT" listener ::Error: ChannelEventHub has been shutdown[00m[00m[1m[38;5;2m
ok 1355 Successfully received the error callback for "ALL" listener ::Error: ChannelEventHub has been shutdown[00m[00m[1m[38;5;2m
ok 1356 Successfully called the disconnect[00m[00m[1m[38;5;2m
ok 1357 Check that the error callback was called on disconnect[00m[00m[1m[38;5;2m
ok 1358 Successfully queried for block: 30[00m[00m[1m[38;5;2m
ok 1359 checking query results are number of events generated[00m[00m[1m[38;5;2m
ok 1360 Successfully endorsed the proposal[00m[00m[1m[38;5;2m
ok 1361 Successfully got a chaincode event with transid:8096478c58f267638e5b0b99288d0ab0d64c3fa83f8cffd79368e0f1362546fd with status:VALID[00m[00m[1m[38;5;2m
ok 1362 Successfully received the chaincode event on block number 30 for first chaincode[00m[00m[1m[38;5;2m
ok 1363 Successfully got a chaincode event with transid:8096478c58f267638e5b0b99288d0ab0d64c3fa83f8cffd79368e0f1362546fd with status:VALID[00m[00m[1m[38;5;2m
ok 1364 Successfully received the chaincode event on block number 30 for second chaincode[00m[00m[1m[38;5;2m
ok 1365 Successfully submitted the transaction to be committed[00m[00m[1m[38;5;2m
ok 1366 Checking that we got the correct resolve string from our first event callback[00m[00m[1m[38;5;2m
ok 1367 Checking that we got the correct resolve string from our second event callback[00m[00m[1m[38;5;2m
ok 1368 Successfully sent transaction to get chaincode event[00m[00m[1m[38;5;2m
ok 1369 checking query results are number of events generated[00m[00m[1m[38;5;2m
ok 1370 checking query results are number of events generated[00m[00m[1m[38;5;2m
ok 1371 Successfully endorsed the proposal[00m[00m[1m[38;5;2m
ok 1372 Successfully endorsed the proposal[00m[00m[1m[38;5;2m
ok 1373 Event1 has transaction code:VALID for transactionID:72eb9fc1c41b314bd0681e6c7ca77017e45b83040a57363e9a706fc84b13777e block number:32[00m[00m[1m[38;5;2m
ok 1374 Successfully got the block number 32[00m[00m[1m[38;5;2m
ok 1375 Event2 has transaction code:MVCC_READ_CONFLICT for transaction id ::cf1f07546757bd59a4fab6fa590585d05692acdf3c71e972c533c8b36f64747f[00m[00m[1m[38;5;2m
ok 1376 Successfully got back event and transaction results[00m[00m[1m[38;5;2m
ok 1377 Check that submit status is good[00m[00m[1m[38;5;2m
ok 1378 Check that submit status is good[00m[00m[1m[38;5;2m
ok 1379 Checking that we had one valid when sending two transactions[00m[00m[1m[38;5;2m
ok 1380 Checking that we had one read conflict when sending two transactions[00m[00m[1m[38;5;2m
ok 1381 Successfully received channel info[00m[00m[1m[38;5;2m
ok 1382 Successfully got current_block number :32[00m[00m[1m[38;5;2m
ok 1383 Successfully got a replayed block ::0[00m[00m[1m[38;5;2m
ok 1384 Successfully got a replayed block ::1[00m[00m[1m[38;5;2m
ok 1385 Successfully got a replayed block ::2[00m[00m[1m[38;5;2m
ok 1386 Successfully got a replayed block ::3[00m[00m[1m[38;5;2m
ok 1387 Successfully got a replayed block ::4[00m[00m[1m[38;5;2m
ok 1388 Successfully got a replayed block ::5[00m[00m[1m[38;5;2m
ok 1389 Successfully got a replayed block ::6[00m[00m[1m[38;5;2m
ok 1390 Successfully got a replayed block ::7[00m[00m[1m[38;5;2m
ok 1391 Successfully got a replayed block ::8[00m[00m[1m[38;5;2m
ok 1392 Successfully got a replayed block ::9[00m[00m[1m[38;5;2m
ok 1393 Successfully got a replayed block ::10[00m[00m[1m[38;5;2m
ok 1394 Successfully got a replayed block ::11[00m[00m[1m[38;5;2m
ok 1395 Successfully got a replayed block ::12[00m[00m[1m[38;5;2m
ok 1396 Successfully got a replayed block ::13[00m[00m[1m[38;5;2m
ok 1397 Successfully got a replayed block ::14[00m[00m[1m[38;5;2m
ok 1398 Successfully got a replayed block ::15[00m[00m[1m[38;5;2m
ok 1399 Successfully got a replayed block ::16[00m[00m[1m[38;5;2m
ok 1400 Successfully got a replayed block ::17[00m[00m[1m[38;5;2m
ok 1401 Successfully got a replayed block ::18[00m[00m[1m[38;5;2m
ok 1402 Successfully got a replayed block ::19[00m[00m[1m[38;5;2m
ok 1403 Successfully got a replayed block ::20[00m[00m[1m[38;5;2m
ok 1404 Successfully got a replayed block ::21[00m[00m[1m[38;5;2m
ok 1405 Successfully got a replayed block ::22[00m[00m[1m[38;5;2m
ok 1406 Successfully got a replayed block ::23[00m[00m[1m[38;5;2m
ok 1407 Successfully got a replayed block ::24[00m[00m[1m[38;5;2m
ok 1408 Successfully got a replayed block ::25[00m[00m[1m[38;5;2m
ok 1409 Successfully got a replayed block ::26[00m[00m[1m[38;5;2m
ok 1410 Successfully got a replayed block ::27[00m[00m[1m[38;5;2m
ok 1411 Successfully got a replayed block ::28[00m[00m[1m[38;5;2m
ok 1412 Successfully got a replayed block ::29[00m[00m[1m[38;5;2m
ok 1413 Successfully got a replayed block ::30[00m[00m[1m[38;5;2m
ok 1414 Successfully got a replayed block ::31[00m[00m[1m[38;5;2m
ok 1415 Successfully got a replayed block ::32[00m[00m[1m[38;5;2m
ok 1416 Successfully got the last block number[00m[00m[1m[38;5;2m
ok 1417 Checking that all blocks were replayed[00m[00m[1m[38;5;2m
ok 1418 Successfully got a replayed block ::0[00m[00m[1m[38;5;2m
ok 1419 Successfully got a replayed block ::1[00m[00m[1m[38;5;2m
ok 1420 Successfully got a replayed block ::2[00m[00m[1m[38;5;2m
ok 1421 Successfully got a replayed block ::3[00m[00m[1m[38;5;2m
ok 1422 Successfully got a replayed block ::4[00m[00m[1m[38;5;2m
ok 1423 Successfully got a replayed block ::5[00m[00m[1m[38;5;2m
ok 1424 Successfully got a replayed block ::6[00m[00m[1m[38;5;2m
ok 1425 Successfully got a replayed block ::7[00m[00m[1m[38;5;2m
ok 1426 Successfully got a replayed block ::8[00m[00m[1m[38;5;2m
ok 1427 Successfully got a replayed block ::9[00m[00m[1m[38;5;2m
ok 1428 Successfully got a replayed block ::10[00m[00m[1m[38;5;2m
ok 1429 Successfully got a replayed block ::11[00m[00m[1m[38;5;2m
ok 1430 Successfully got a replayed block ::12[00m[00m[1m[38;5;2m
ok 1431 Successfully got a replayed block ::13[00m[00m[1m[38;5;2m
ok 1432 Successfully got a replayed block ::14[00m[00m[1m[38;5;2m
ok 1433 Successfully got a replayed block ::15[00m[00m[1m[38;5;2m
ok 1434 Successfully got a replayed block ::16[00m[00m[1m[38;5;2m
ok 1435 Successfully got a replayed block ::17[00m[00m[1m[38;5;2m
ok 1436 Successfully got a replayed block ::18[00m[00m[1m[38;5;2m
ok 1437 Successfully got a replayed block ::19[00m[00m[1m[38;5;2m
ok 1438 Successfully got a replayed block ::20[00m[00m[1m[38;5;2m
ok 1439 Successfully got a replayed block ::21[00m[00m[1m[38;5;2m
ok 1440 Successfully got a replayed block ::22[00m[00m[1m[38;5;2m
ok 1441 Successfully got a replayed block ::23[00m[00m[1m[38;5;2m
ok 1442 Successfully got a replayed block ::24[00m[00m[1m[38;5;2m
ok 1443 Successfully got a replayed block ::25[00m[00m[1m[38;5;2m
ok 1444 Successfully got a replayed block ::26[00m[00m[1m[38;5;2m
ok 1445 Successfully got a replayed block ::27[00m[00m[1m[38;5;2m
ok 1446 Successfully got a replayed block ::28[00m[00m[1m[38;5;2m
ok 1447 Successfully got a replayed block ::29[00m[00m[1m[38;5;2m
ok 1448 Successfully got a replayed block ::30[00m[00m[1m[38;5;2m
ok 1449 Successfully got a replayed block ::31[00m[00m[1m[38;5;2m
ok 1450 Successfully got a replayed block ::32[00m[00m[1m[38;5;2m
ok 1451 Successfully got the last block number[00m[00m[1m[38;5;2m
ok 1452 Message received inidicating newest block received ::Error: Newest block received:32 status:SUCCESS[00m[00m[1m[38;5;2m
ok 1453 Checking that newest block replayed[00m[00m[1m[38;5;2m
ok 1454  ======>>>>> CHANNEL EVENT INTEGRATION TEST END[00m[00m[2m[38;5;66m
# [00m

 **** E R R O R  T E S T I N G on upgrade call[00m[1m[38;5;2m
ok 1455 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1456 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1457 Successfully initialized channel[00m[00m[1m[38;5;2m
ok 1458 Successfully got the errorversion already exists[00m[00m[1m[38;5;2m
ok 1459 Successfully got the errorcannot get package for chaincode[00m[00m[1m[38;5;2m
ok 1460 Successfully got the errorcannot get package for chaincode[00m[00m[2m[38;5;66m
# [00m

 **** Testing re-initializing states during upgrade ****[00m[1m[38;5;2m
ok 1461 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUKWxscNQM0FSPBqUgDWw0KCZoy1IwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMzAwWhcNMTkxMDIyMTMwODAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAE7W/WR/Tl/f8CMqw7JpluF3EY0iQ8Fayk0/ncpid+GJr5\nv3XFlbhUjU/AcAqZsnAs78WhTEZj9j8cV/YQzhg+wqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFFh6xldkbFI1AAmAMU00P/yjS0AZMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQD3xGGbK6UcCaJq4AqKAm1Rf5/ypfKLxOuHlVosn+igCAIgKnGIzTNJlttJ0qwn\nbmjtOSTiMF2fUD1qxUF1MWlMgig=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg4N85uDza/BsucuQt\r\ndmVvIN58Dcy1tpIv2G4KYytmZoqhRANCAATtb9ZH9OX9/wIyrDsmmW4XcRjSJDwV\r\nrKTT+dymJ34Ymvm/dcWVuFSNT8BwCpmycCzvxaFMRmP2PxxX9hDOGD7C\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUKWxscNQM0FSPBqUgDWw0KCZoy1IwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMzAwWhcNMTkxMDIyMTMwODAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAE7W/WR/Tl/f8CMqw7JpluF3EY0iQ8Fayk0/ncpid+GJr5\nv3XFlbhUjU/AcAqZsnAs78WhTEZj9j8cV/YQzhg+wqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFFh6xldkbFI1AAmAMU00P/yjS0AZMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQD3xGGbK6UcCaJq4AqKAm1Rf5/ypfKLxOuHlVosn+igCAIgKnGIzTNJlttJ0qwn\nbmjtOSTiMF2fUD1qxUF1MWlMgig=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'localhost:7051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1462 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1463 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 1464 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUSyZiefm7mRwR7v97HTXoqwNFMwYwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMzAwWhcNMTkxMDIyMTMwODAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEEdNkmvhQ6GUg+/90Gk5DvvI9EaR4WxKSFH9cINmC3v4G\nu5qi+zX4DL4nWNyp9WMkH3u65KpRs+Lu0qJc6QTqyqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFM6KIcFus42XsSPwG6y1QfXSutWcMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0gAMEUC\nIQCwln9g8IO6AZ6HXzzOi/7lSt3djQvaWq2kHHrYxjTsIgIgO7Coeqj+QXvJfr1Z\nxKHhCtzvV9L3q0L7wQBCu4adhwQ=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgt1yHv3qSil57yoUf\r\nkb/aeFuqQkMy8138UoEXNfwtjkOhRANCAAQR02Sa+FDoZSD7/3QaTkO+8j0RpHhb\r\nEpIUf1wg2YLe/ga7mqL7NfgMvidY3Kn1YyQfe7rkqlGz4u7SolzpBOrK\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org2.example.com',
       'grpc.default_authority': 'peer0.org2.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUSyZiefm7mRwR7v97HTXoqwNFMwYwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwMzAwWhcNMTkxMDIyMTMwODAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEEdNkmvhQ6GUg+/90Gk5DvvI9EaR4WxKSFH9cINmC3v4G\nu5qi+zX4DL4nWNyp9WMkH3u65KpRs+Lu0qJc6QTqyqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFM6KIcFus42XsSPwG6y1QfXSutWcMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0gAMEUC\nIQCwln9g8IO6AZ6HXzzOi/7lSt3djQvaWq2kHHrYxjTsIgIgO7Coeqj+QXvJfr1Z\nxKHhCtzvV9L3q0L7wQBCu4adhwQ=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:8051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:8051' },
    _name: 'localhost:8051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1465 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1466 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 1467 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1468 Successfully enrolled user 'admin' (e2eUtil 2)[00m[00m[1m[38;5;2m
ok 1469 Successfully initialized Channel[00m[00m[1m[38;5;2m
ok 1470 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1471 The chaincode upgrade transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 1472 The chaincode upgrade transaction was valid.[00m[00m[1m[38;5;2m
ok 1473 The chaincode upgrade transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 1474 The chaincode upgrade transaction was valid.[00m[00m[1m[38;5;2m
ok 1475 Successfully sent upgradetransaction to the orderer.[00m[00m[1m[38;5;2m
ok 1476 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1477 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1478 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 1479 checking query results are correct that value is 1000[00m[00m[1m[38;5;2m
ok 1480 checking query results are correct that value is 1000[00m[00m[1m[38;5;2m
ok 1481 Successfully query chaincode on the channel after re-initializing chaincode states during upgrade[00m[00m[2m[38;5;66m
#   ---->>>>> get config <<<<<-----[00m[00m[1m[38;5;2m
ok 1482 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1483 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1484 Successfully enrolled user[00m[00m[1m[38;5;2m
ok 1485 channel was successfully initialized[00m[00m[1m[38;5;2m
ok 1486 Checking the that we got back the right number of orgs[00m[00m[1m[38;5;2m
ok 1487 Found the org name Org1MSP[00m[00m[2m[38;5;66m
# [00m

***** Configtx Built config  create flow  *****

[00m[1m[38;5;2m
ok 1488 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1489 Successfully enrolled user 'admin' for orderer (create-configtx-channel 1)[00m[00m[1m[38;5;2m
ok 1490 Successfull extracted the config update from the configtx envelope[00m[00m[1m[38;5;2m
ok 1491 Successfully signed config update[00m[00m[1m[38;5;2m
ok 1492 Successfully enrolled user 'admin' for org2[00m[00m[1m[38;5;2m
ok 1493 Successfully signed config update[00m[00m[2m[38;5;66m
# getOrdererAdmin[00m[00m[1m[38;5;2m
ok 1494 Successfully enrolled user 'admin' for orderer (create-configtx-channel 2)[00m[00m[1m[38;5;2m
ok 1495 Successfully signed config update[00m[00m[1m[38;5;2m
ok 1496 Successfully created the channel.[00m[00m[1m[38;5;2m
ok 1497 Successfully waited to make sure new channel was created.[00m[00m[1m[38;5;2m
ok 1498 Successfully received the error message due to the conflict of channel: error authorizing update: error validating ReadSet: readset expected key [Group] /Channel/Application at version 0, but got version 1[00m[00m[2m[38;5;66m
# [00m

***** End-to-end flow: join channel *****

[00m[1m[38;5;2m
ok 1499 Successfully retrieved TLS certificate[00m[00m[2m[38;5;66m
# getOrdererAdmin[00m[00m[1m[38;5;2m
ok 1500 Successfully enrolled orderer 'admin' (joined_channel 1)[00m[00m[1m[38;5;2m
ok 1501 Successfully got the genesis block[00m[00m[1m[38;5;2m
ok 1502 Successfully enrolled org (join_channel):org1 'admin'[00m[00m[1m[38;5;2m
ok 1503 Successfully joined peers in organization peerOrg1 to join the channel[00m[00m[1m[38;5;2m
ok 1504 Successfully joined peers in organization "peerOrg1" to the channel[00m[00m[1m[38;5;2m
ok 1505 Successfully retrieved TLS certificate[00m[00m[2m[38;5;66m
# getOrdererAdmin[00m[00m[1m[38;5;2m
ok 1506 Successfully enrolled orderer 'admin' (joined_channel 1)[00m[00m[1m[38;5;2m
ok 1507 Successfully got the genesis block[00m[00m[1m[38;5;2m
ok 1508 Successfully enrolled org (join_channel):org2 'admin'[00m[00m[1m[38;5;2m
ok 1509 Successfully joined peers in organization peerOrg2 to join the channel[00m[00m[1m[38;5;2m
ok 1510 Successfully joined peers in organization "peerOrg2" to the channel[00m[00m[2m[38;5;66m
# [00m

 **** E R R O R  T E S T I N G : instantiate call fails with non-existent Chaincode version[00m[1m[38;5;2m
ok 1511 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1512 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1513 Successfully initialized channel[00m[00m[1m[38;5;2m
ok 1514 Successfully got the errorcannot get package for chaincode[00m[00m[1m[38;5;2m
ok 1515 Successfully got the errorcannot get package for chaincode[00m[00m[2m[38;5;66m
# [00m

 **** E R R O R  T E S T I N G : instantiate call fails with non-existent Chaincode name[00m[1m[38;5;2m
ok 1516 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1517 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1518 Successfully initialized channel[00m[00m[1m[38;5;2m
ok 1519 Successfully got the errorcannot get package for chaincode[00m[00m[1m[38;5;2m
ok 1520 Successfully got the errorcannot get package for chaincode[00m[00m[2m[38;5;66m
# [00m

***** End-to-end flow: instantiate chaincode *****

[00m[1m[38;5;2m
ok 1521 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1522 Successfully enrolled user 'admin' (e2eUtil 2)[00m[00m[1m[38;5;2m
ok 1523 Successfully initialized Channel[00m[00m[1m[38;5;2m
ok 1524 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1525 The chaincode instantiate transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 1526 The chaincode instantiate transaction was valid.[00m[00m[1m[38;5;2m
ok 1527 The chaincode instantiate transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 1528 The chaincode instantiate transaction was valid.[00m[00m[1m[38;5;2m
ok 1529 Successfully sent instantiatetransaction to the orderer.[00m[00m[1m[38;5;2m
ok 1530 Successfully instantiated chaincode on the channel[00m[00m[2m[38;5;66m
# [00m

 **** E R R O R  T E S T I N G : instantiate call fails by instantiating the same Chaincode twice[00m[1m[38;5;2m
ok 1531 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1532 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1533 Successfully initialized channel[00m[00m[1m[38;5;2m
ok 1534 Successfully got the erroralready exists[00m[00m[1m[38;5;2m
ok 1535 Successfully got the erroralready exists[00m[00m[2m[38;5;66m
# [00m

***** End-to-end flow: invoke transaction to move money *****

[00m[1m[38;5;2m
ok 1536 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1537 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1538 Successfully enrolled user 'admin' (e2eUtil 3)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[2m[38;5;66m
# stop and start the peer event hub ---- N  O  W ----- you have 0 millis Mon Oct 22 2018 14:08:09 GMT+0100 (BST)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[1m[38;5;2m
ok 1539 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1540 transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 1541 transaction proposal payloads are valid[00m[00m[1m[38;5;2m
ok 1542 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1543 transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 1544 transaction proposal payloads are valid[00m[00m[1m[38;5;2m
ok 1545 compareProposalResponseResults exection did not throw an error[00m[00m[1m[38;5;2m
ok 1546  All proposals have a matching read/writes sets[00m[00m[1m[38;5;2m
ok 1547 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1548 The balance transfer transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 1549 The balance transfer transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 1550 Successfully sent transaction to the orderer.[00m[00m[2m[38;5;66m
# ******************************************************************[00m[00m[2m[38;5;66m
# To manually run /test/integration/query.js, set the following environment variables:[00m[00m[2m[38;5;66m
# export E2E_TX_ID='afdec56ff0524589d4f83dd9c3434b4c34eaf5eef1b54c30eb6a21953c4784ff'[00m[00m[2m[38;5;66m
# ******************************************************************[00m[00m[1m[38;5;2m
ok 1551 Successfully closed all connections[00m[00m[1m[38;5;2m
ok 1552 Successfully invoke transaction chaincode on channel[00m[00m[1m[38;5;2m
ok 1553 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1554 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1555 Successfully enrolled user 'admin' (e2eUtil 3)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[2m[38;5;66m
# stop and start the peer event hub ---- N  O  W ----- you have 0 millis Mon Oct 22 2018 14:08:15 GMT+0100 (BST)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[1m[38;5;2m
ok 1556 proposal response should be an instance of error[00m[00m[1m[38;5;2m
ok 1557 Error message::throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1558 error should contain the correct message: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1559 proposal response should be an instance of error[00m[00m[1m[38;5;2m
ok 1560 Error message::throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1561 error should contain the correct message: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1562 Successfully closed all connections[00m[00m[2m[38;5;66m
# [00m

***** End-to-end flow: query chaincode *****

[00m[1m[38;5;2m
ok 1563 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1564 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1565 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 1566 checking query results are correct that value is 300[00m[00m[1m[38;5;2m
ok 1567 checking query results are correct that value is 300[00m[00m[1m[38;5;2m
ok 1568 Successfully query chaincode on the channel[00m[00m[1m[38;5;2m
ok 1569 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1570 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1571 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 1572 query result should be an instance of error[00m[00m[1m[38;5;2m
ok 1573 Error message::throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1574 error should contain the correct message: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1575 query result should be an instance of error[00m[00m[1m[38;5;2m
ok 1576 Error message::throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1577 error should contain the correct message: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1578 Successfully handled error from query[00m[00m[2m[38;5;66m
# [00m

***** E R R O R  T E S T I N G: invoke transaction with one endorsement *****

[00m[1m[38;5;2m
ok 1579 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1580 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1581 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1582 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1583  transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 1584 compareProposalResponseResults exection did not throw an error[00m[00m[1m[38;5;2m
ok 1585  All proposals have a matching read/writes sets[00m[00m[1m[38;5;2m
ok 1586 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1587 The balance transaction failed with ENDORSEMENT_POLICY_FAILURE as expected[00m[00m[1m[38;5;2m
ok 1588 Successfully tested failure to invoke transaction chaincode due to insufficient endorsement[00m[00m[1m[38;5;2m
ok 1589 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1590 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1591 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1592 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1593  transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 1594 compareProposalResponseResults exection did not throw an error[00m[00m[1m[38;5;2m
ok 1595  All proposals have a matching read/writes sets[00m[00m[1m[38;5;2m
ok 1596 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1597 The balance transaction failed with ENDORSEMENT_POLICY_FAILURE as expected[00m[00m[1m[38;5;2m
ok 1598 Successfully tested failure to invoke transaction chaincode due to insufficient endorsement[00m[00m[2m[38;5;66m
# [00m

***** invoke transaction with inverted order of endorsements *****

[00m[1m[38;5;2m
ok 1599 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1600 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1601 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1602 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1603  transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 1604 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1605  transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 1606 compareProposalResponseResults exection did not throw an error[00m[00m[1m[38;5;2m
ok 1607  All proposals have a matching read/writes sets[00m[00m[1m[38;5;2m
ok 1608 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1609 The balance transfer transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 1610 The balance transfer transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 1611 Successfully invoke transaction chaincode on channel[00m[00m[2m[38;5;66m
# [00m

***** clean up the connection profile testing stores  *****

[00m[1m[38;5;2m
ok 1612 Successfully removed all connection profile stores from previous testing[00m[00m[2m[38;5;66m
# [00m

***** use the connection profile file  *****

[00m[1m[38;5;2m
ok 1613 Successfully loaded a connection profile[00m[00m[1m[38;5;2m
ok 1614 Successfully created the key value store and crypto store based on the sdk config and connection profile[00m[00m[1m[38;5;2m
ok 1615 checking that caname is correct after resetting the config[00m[00m[1m[38;5;2m
ok 1616 Successfully called the CertificateAuthority to get the TLS material[00m[00m[1m[38;5;2m
ok 1617 Successfully created the key value store and crypto store based on the sdk config and connection profile[00m[00m[1m[38;5;2m
ok 1618 checking that caname is correct after resetting the config[00m[00m[1m[38;5;2m
ok 1619 Successfully called the CertificateAuthority to get the TLS material[00m[00m[1m[38;5;2m
ok 1620 Successfully extracted the config update from the configtx envelope[00m[00m[1m[38;5;2m
ok 1621 Successfully signed config update by org1[00m[00m[1m[38;5;2m
ok 1622 Successfully signed config update for org2[00m[00m[1m[38;5;2m
ok 1623 Successfully created the channel.[00m[00m[1m[38;5;2m
ok 1624 Successfully waited to make sure new channel was created on orderer.[00m[00m[1m[38;5;2m
ok 1625 Successfully got the genesis block[00m[00m[1m[38;5;2m
ok 1626  Submitter on "org2" Failed to have peer on org1 channel[00m[00m[1m[38;5;2m
ok 1627 Successfully had peer in organization org2 join the channel[00m[00m[1m[38;5;2m
ok 1628 Successfully had peer in organization org1 join the channel[00m[00m[1m[38;5;2m
request.targets undefined
ok 1629 Successfully waited for peers to join the channel[00m[00m[1m[38;5;2m
request.targets [ 'peer0.org2.example.com' ]
ok 1630 Successfully installed chain code on org1[00m[00m[1m[38;5;2m
ok 1631 Successfully installed chain code on org2[00m[00m[1m[38;5;2m
ok 1632 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1633 Successfully sent transaction to instantiate the chaincode to the orderer.[00m[00m[1m[38;5;2m
ok 1634 Successfully waited for chaincode to startup[00m[00m[1m[38;5;2m
ok 1635 Successfully enrolled user 'admin' for org1[00m[00m[1m[38;5;2m
ok 1636 Successfully registered user 'user1' for org1[00m[00m[1m[38;5;2m
ok 1637 Successfully enrolled user 'user1' for org1[00m[00m[1m[38;5;2m
ok 1638 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1639 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1640 Checking that there are the correct number of endorsed responses[00m[00m[1m[38;5;2m
ok 1641 transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 1642 Successfully sent transaction to invoke the chaincode to the orderer.[00m[00m[1m[38;5;2m
ok 1643 Successfully registered transaction replay for 1109d85f7ab2a2974b2943d09db7f4f68bc1a27c6f6c55854f69e413a25825cc[00m[00m[1m[38;5;2m
ok 1644 Successfully called connect on the transaction replay event hub for filtered blocks[00m[00m[1m[38;5;2m
ok 1645 Event has been replayed with transaction code:VALID for transaction id:1109d85f7ab2a2974b2943d09db7f4f68bc1a27c6f6c55854f69e413a25825cc for block_num:2[00m[00m[1m[38;5;2m
ok 1646 Successfully checked channel event hub replay[00m[00m[1m[38;5;2m
ok 1647 Checking that the channel event hubs has 1[00m[00m[1m[38;5;2m
ok 1648  channel event hub address [00m[00m[1m[38;5;2m
ok 1649 Successfully registered transaction replay for 1109d85f7ab2a2974b2943d09db7f4f68bc1a27c6f6c55854f69e413a25825cc[00m[00m[1m[38;5;2m
ok 1650 Successfully called connect on the transaction replay event hub for filtered blocks[00m[00m[1m[38;5;2m
ok 1651 Event has been replayed with transaction code:VALID for transaction id:1109d85f7ab2a2974b2943d09db7f4f68bc1a27c6f6c55854f69e413a25825cc for block_num:2[00m[00m[1m[38;5;2m
ok 1652 Successfully checked replay[00m[00m[1m[38;5;2m
ok 1653 Successfully loaded user 'admin' from store for org1[00m[00m[1m[38;5;2m
ok 1654 checking query results are correct that user b has 300 now after the move[00m[00m[1m[38;5;2m
ok 1655 Checking that only one response was seen[00m[00m[1m[38;5;2m
ok 1656 Successfully found our channel in the result list[00m[00m[1m[38;5;2m
ok 1657 Successfully found our chaincode in the result list[00m[00m[1m[38;5;2m
ok 1658 Should be able to find our block number[00m[00m[1m[38;5;2m
ok 1659 Should be able to find our block height[00m[00m[1m[38;5;2m
ok 1660 Should be able to find our block number by hash[00m[00m[1m[38;5;2m
ok 1661 Should be able to find our transaction validationCode[00m[00m[1m[38;5;2m
ok 1662 Should be able to find our block number with string peer name[00m[00m[1m[38;5;2m
ok 1663 Should be able to find our block height with string peer name[00m[00m[1m[38;5;2m
ok 1664 Should be able to find our block number by hash with string peer name[00m[00m[1m[38;5;2m
ok 1665 Should be able to find our transaction validationCode with string peer name[00m[00m[1m[38;5;2m
ok 1666 Should be able to find our block number by admin[00m[00m[1m[38;5;2m
ok 1667 Should be able to find our block height by admin[00m[00m[1m[38;5;2m
ok 1668 Should be able to find our block number by hash by admin[00m[00m[1m[38;5;2m
ok 1669 Should be able to find our transaction validationCode by admin[00m[00m[1m[38;5;2m
ok 1670 Successfully cause a timeout error by setting the timeout setting to 1[00m[00m[1m[38;5;2m
ok 1671 Successfully cause a timeout error by setting the timeout setting to 1[00m[00m[1m[38;5;2m
ok 1672 Testing has completed successfully[00m[00m[2m[38;5;66m
# [00m

***** Enroll user and set user context using a specified caName *****

[00m[1m[38;5;2m
ok 1673 Successfully loaded client section of network config[00m[00m[1m[38;5;2m
ok 1674 Successfully created the key value store and crypto store based on the config and network config[00m[00m[1m[38;5;2m
ok 1675 checking that caname is correct after resetting the config[00m[00m[1m[38;5;2m
ok 1676 Successfully set user context 'admin' for org1[00m[00m[1m[38;5;2m
ok 1677 Successfully registerred user test_caname for org1[00m[00m[1m[38;5;2m
ok 1678 Successfully enrolled user and set user context using username, password, and caName[00m[00m[1m[38;5;2m
ok 1679 Successfully get user from context[00m[00m[1m[38;5;2m
ok 1680 Successfully registerred user test_caname2 for org1[00m[00m[1m[38;5;2m
ok 1681 Successfully enrolled user and set user context using username and password[00m[00m[1m[38;5;2m
ok 1682 Successfully get user context for the specified username[00m[00m[2m[38;5;66m
# [00m

***** Enroll user and set user context using a bad caName *****

[00m[1m[38;5;2m
ok 1683 Successfully loaded client section of network config[00m[00m[1m[38;5;2m
ok 1684 Successfully created the key value store and crypto store based on the config and network config[00m[00m[1m[38;5;2m
ok 1685 checking that caname is correct after resetting the config[00m[00m[1m[38;5;2m
ok 1686 Successfully set user context 'admin' for org1[00m[00m[1m[38;5;2m
ok 1687 Got expected error to enroll user using a bad caName. Error: Network configuration is missing this client's organization and certificate authority[00m[00m[1m[38;5;2m
ok 1688 Got expected error to enroll user using a caName in another org. Error: Enrollment failed with errors [[{"code":20,"message":"Authentication failure"}]][00m[00m[2m[38;5;66m
# [00m

***** use only admin identity  *****

[00m[1m[38;5;2m
ok 1689 Successfully loaded a network configuration[00m[00m[1m[38;5;2m
ok 1690 Successfully loaded client section of network config for organization:org1[00m[00m[1m[38;5;2m
ok 1691 Successfully assigned an admin idenity to this client[00m[00m[1m[38;5;2m
ok 1692 Successfully created the key value store and crypto store based on the config and network config[00m[00m[1m[38;5;2m
ok 1693 Successfully got the CertificateAuthority from the client[00m[00m[1m[38;5;2m
ok 1694 Successfully called the CertificateAuthority to get the TLS material[00m[00m[1m[38;5;2m
ok 1695 Successfully loaded a network configuration[00m[00m[1m[38;5;2m
ok 1696 Successfully loaded client section of network config for organization:org2[00m[00m[1m[38;5;2m
ok 1697 Successfully assigned an admin idenity to this client[00m[00m[1m[38;5;2m
ok 1698 Successfully created the key value store and crypto store based on the config and network config[00m[00m[1m[38;5;2m
ok 1699 Successfully got the CertificateAuthority from the client[00m[00m[1m[38;5;2m
ok 1700 Successfully called the CertificateAuthority to get the TLS material[00m[00m[1m[38;5;2m
ok 1701 Successfully extracted the config update from the configtx envelope[00m[00m[1m[38;5;2m
ok 1702 Successfully signed config update for org1[00m[00m[1m[38;5;2m
ok 1703 Successfully signed config update for org2[00m[00m[1m[38;5;2m
ok 1704 Successfully created the channel.[00m[00m[1m[38;5;2m
ok 1705 Successfully got the genesis block[00m[00m[1m[38;5;2m
ok 1706 Successfully joined channnel on org1[00m[00m[1m[38;5;2m
request.targets [ 'peer0.org1.example.com' ]
ok 1707 Successfully joined channnel on org2[00m[00m[1m[38;5;2m
request.targets [ 'peer0.org2.example.com' ]
ok 1708 Successfully installed chain code on org1[00m[00m[1m[38;5;2m
ok 1709 Successfully installed chain code on org2[00m[00m[1m[38;5;2m
ok 1710 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1711 Successfully sent transaction to instantiate the chaincode to the orderer.[00m[00m[1m[38;5;2m
ok 1712 Successfully waited for chaincodes to startup[00m[00m[1m[38;5;2m
ok 1713 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1714 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1715 Successfully registered event for 55c4ab2ee3802c4e45085aff9b751d971750c08ad402a1d198abb65d50fe6f72[00m[00m[1m[38;5;2m
ok 1716 Successfully called connect on localhost:7051[00m[00m[1m[38;5;2m
ok 1717 Event has been seen with transaction code:VALID for transaction id:55c4ab2ee3802c4e45085aff9b751d971750c08ad402a1d198abb65d50fe6f72 for block_num:2[00m[00m[1m[38;5;2m
ok 1718 Successfully committed transaction 55c4ab2ee3802c4e45085aff9b751d971750c08ad402a1d198abb65d50fe6f72[00m[00m[1m[38;5;2m
ok 1719 Successfully got query results :: 300[00m[00m[1m[38;5;2m
ok 1720 Checking able to find our block number by admin[00m[00m[1m[38;5;2m
ok 1721 Successfully got the block height by admin:: 3[00m[00m[1m[38;5;2m
ok 1722 Successfully got block by hash by admin ::1[00m[00m[1m[38;5;2m
ok 1723 Checking able to find our transaction validationCode by admin[00m[00m[1m[38;5;2m
ok 1724 Successfully found our chaincode in the result list[00m[00m[1m[38;5;2m
ok 1725 Successfully found our channel in the result list[00m[00m[1m[38;5;2m
ok 1726 Successfully read all crypto material[00m[00m[1m[38;5;2m
ok 1727 Successfully set the client with admin signing identity[00m[00m[1m[38;5;2m
ok 1728 Successfully added orderer to channel[00m[00m[1m[38;5;2m
ok 1729 Successfully got the config envelope by using the admin identity[00m[00m[1m[38;5;2m
ok 1730 Checking that the user was created[00m[00m[1m[38;5;2m
ok 1731 Checking that the user was set[00m[00m[1m[38;5;2m
ok 1732 Successfully got the config envelope by user the user context[00m[00m[2m[38;5;66m
# [00m

***** Java-Chaincode End-to-end flow: chaincode install *****

[00m[1m[38;5;2m
ok 1733 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUR1NpyMQa/RYPtEewQR+YWzjxr+IwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwNTAwWhcNMTkxMDIyMTMxMDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEWRAox4rE2cpaqWrXZmUu13EZI5vFi4VWjQP2XdISLYi6\ngu7QRfb8ZVlv9aR5h4SuHU3UVepBYy6I9URYoOvkXaOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFHd9Y3sALFrEsdoUxGt6T0MCqZVrMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQCYED9wa2duUdEuvtoaYF0Uau3Hdg5/amyPfocEOnhVmgIgcoLS79zEaobVFtym\n/e6rZ1GTQGuzDqoLPc33TBef2+w=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgD1NkcNtI7RGKJHoS\r\nnNE2gwcHF7XIRsOSuJKvzjvUXxmhRANCAARZECjHisTZylqpatdmZS7XcRkjm8WL\r\nhVaNA/Zd0hItiLqC7tBF9vxlWW/1pHmHhK4dTdRV6kFjLoj1RFig6+Rd\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUR1NpyMQa/RYPtEewQR+YWzjxr+IwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwNTAwWhcNMTkxMDIyMTMxMDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEWRAox4rE2cpaqWrXZmUu13EZI5vFi4VWjQP2XdISLYi6\ngu7QRfb8ZVlv9aR5h4SuHU3UVepBYy6I9URYoOvkXaOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFHd9Y3sALFrEsdoUxGt6T0MCqZVrMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQCYED9wa2duUdEuvtoaYF0Uau3Hdg5/amyPfocEOnhVmgIgcoLS79zEaobVFtym\n/e6rZ1GTQGuzDqoLPc33TBef2+w=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'localhost:7051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1734 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1735 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 1736 Successfully installed java chaincode in peers of organization "org1"[00m[00m[1m[38;5;2m
ok 1737 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUIiz7Tlw1xZG+7+juSKJmYl7OmvAwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwNTAwWhcNMTkxMDIyMTMxMDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEX8kA78TVntArO6xGmghB7rWyf/lNl559iv5JLYQnm1yF\noX9Keuxtzmd3ZNc9GTAdGDGqu9u97ecmew3ik3vrbqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFIva5hr+HiD6WAWXf3Iwxikviw+oMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0cAMEQC\nIAUY547XGUfdddFRxl9tfnWboNkVMvniyjHG7cicgWC6AiBIYQawAsZlhfHG8idc\nAbyES/FY88reVjRxwysXPWcjRg==\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgcQK/Br4L9GbS3Qev\r\n5vfpqq97IxrAoy49jowYvjD4CwqhRANCAARfyQDvxNWe0Cs7rEaaCEHutbJ/+U2X\r\nnn2K/kkthCebXIWhf0p67G3OZ3dk1z0ZMB0YMaq7273t5yZ7DeKTe+tu\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org2.example.com',
       'grpc.default_authority': 'peer0.org2.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUIiz7Tlw1xZG+7+juSKJmYl7OmvAwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwNTAwWhcNMTkxMDIyMTMxMDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEX8kA78TVntArO6xGmghB7rWyf/lNl559iv5JLYQnm1yF\noX9Keuxtzmd3ZNc9GTAdGDGqu9u97ecmew3ik3vrbqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFIva5hr+HiD6WAWXf3Iwxikviw+oMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0cAMEQC\nIAUY547XGUfdddFRxl9tfnWboNkVMvniyjHG7cicgWC6AiBIYQawAsZlhfHG8idc\nAbyES/FY88reVjRxwysXPWcjRg==\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:8051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:8051' },
    _name: 'localhost:8051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1738 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1739 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 1740 Successfully installed java chaincode in peers of organization "org2"[00m[00m[2m[38;5;66m
# [00m

***** Java-Chaincode End-to-end flow: instantiate chaincode *****

[00m[1m[38;5;2m
ok 1741 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1742 Successfully enrolled user 'admin' (e2eUtil 2)[00m[00m[1m[38;5;2m
ok 1743 Successfully initialized Channel[00m[00m[1m[38;5;2m
ok 1744 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1745 The chaincode instantiate transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 1746 The chaincode instantiate transaction was valid.[00m[00m[1m[38;5;2m
ok 1747 The chaincode instantiate transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 1748 The chaincode instantiate transaction was valid.[00m[00m[1m[38;5;2m
ok 1749 Successfully sent instantiatetransaction to the orderer.[00m[00m[1m[38;5;2m
ok 1750 Successfully instantiated java chaincode on the channel[00m[00m[2m[38;5;66m
# [00m

***** Java-Chaincode End-to-end flow: invoke transaction to move money *****

[00m[1m[38;5;2m
ok 1751 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1752 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1753 Successfully enrolled user 'admin' (e2eUtil 3)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[2m[38;5;66m
# stop and start the peer event hub ---- N  O  W ----- you have 0 millis Mon Oct 22 2018 14:11:09 GMT+0100 (BST)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[1m[38;5;2m
ok 1754 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1755 transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 1756 transaction proposal payloads are valid[00m[00m[1m[38;5;2m
ok 1757 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1758 transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 1759 transaction proposal payloads are valid[00m[00m[1m[38;5;2m
ok 1760 compareProposalResponseResults exection did not throw an error[00m[00m[1m[38;5;2m
ok 1761  All proposals have a matching read/writes sets[00m[00m[1m[38;5;2m
ok 1762 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1763 The balance transfer transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 1764 The balance transfer transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 1765 Successfully sent transaction to the orderer.[00m[00m[2m[38;5;66m
# ******************************************************************[00m[00m[2m[38;5;66m
# To manually run /test/integration/query.js, set the following environment variables:[00m[00m[2m[38;5;66m
# export E2E_TX_ID='6c3fc056102ec908284a808ff1a80dc5c571d15340127c72eebc2c146a04f1f6'[00m[00m[2m[38;5;66m
# ******************************************************************[00m[00m[1m[38;5;2m
ok 1766 Successfully closed all connections[00m[00m[1m[38;5;2m
ok 1767 Successfully invoke transaction java chaincode on channel[00m[00m[1m[38;5;2m
ok 1768 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1769 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1770 Successfully enrolled user 'admin' (e2eUtil 3)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[2m[38;5;66m
# stop and start the peer event hub ---- N  O  W ----- you have 0 millis Mon Oct 22 2018 14:11:15 GMT+0100 (BST)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[1m[38;5;2m
ok 1771 proposal response should be an instance of error[00m[00m[1m[38;5;2m
ok 1772 Error message::transaction returned with failure: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1773 error should contain the correct message: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1774 proposal response should be an instance of error[00m[00m[1m[38;5;2m
ok 1775 Error message::transaction returned with failure: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1776 error should contain the correct message: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1777 Successfully closed all connections[00m[00m[1m[38;5;2m
ok 1778 Successfully handled invocation errors from java chaincode[00m[00m[2m[38;5;66m
# [00m

***** Java-Chaincode End-to-end flow: query chaincode *****

[00m[1m[38;5;2m
ok 1779 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1780 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1781 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 1782 checking query results are correct that value is 300[00m[00m[1m[38;5;2m
ok 1783 checking query results are correct that value is 300[00m[00m[1m[38;5;2m
ok 1784 Successfully query java chaincode on the channel[00m[00m[1m[38;5;2m
ok 1785 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1786 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1787 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 1788 query result should be an instance of error[00m[00m[1m[38;5;2m
ok 1789 Error message::transaction returned with failure: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1790 error should contain the correct message: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1791 query result should be an instance of error[00m[00m[1m[38;5;2m
ok 1792 Error message::transaction returned with failure: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1793 error should contain the correct message: throwError: an error occurred[00m[00m[1m[38;5;2m
ok 1794 Sucessfully handled error from a query on java chaincode[00m[00m[2m[38;5;66m
# [00m

***** Java-Chaincode U P G R A D E flow: chaincode install *****

[00m[1m[38;5;2m
ok 1795 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUFNjQQD/ZQRHRl8Y6//bonKMhqE8wCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwNjAwWhcNMTkxMDIyMTMxMTAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEnrdJzkA5BB6dJ0Qk/CdVttwmwQhlnkj9Aj+wWRfQJQM5\nNspx3nQSP6k0ZobdtKczp/MNEE9Unm/Du6mX9g1l/aOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFIbnfpRiyFopOgQNJhpmL6pJSbvNMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQCz4zQMlrTT6P3N04unIvbv2uguEVxzL/+QCmmagFe3SgIgWJ3UW+uKkyLeMCdX\n7e3ED8fCSKCNdxuoYasd2rdZJaY=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgQDyQTDCLYzippWe9\r\nAMjSoQfsub2okrWuN6nktOwXyGihRANCAASet0nOQDkEHp0nRCT8J1W23CbBCGWe\r\nSP0CP7BZF9AlAzk2ynHedBI/qTRmht20pzOn8w0QT1Seb8O7qZf2DWX9\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUFNjQQD/ZQRHRl8Y6//bonKMhqE8wCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwNjAwWhcNMTkxMDIyMTMxMTAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEnrdJzkA5BB6dJ0Qk/CdVttwmwQhlnkj9Aj+wWRfQJQM5\nNspx3nQSP6k0ZobdtKczp/MNEE9Unm/Du6mX9g1l/aOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFIbnfpRiyFopOgQNJhpmL6pJSbvNMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQCz4zQMlrTT6P3N04unIvbv2uguEVxzL/+QCmmagFe3SgIgWJ3UW+uKkyLeMCdX\n7e3ED8fCSKCNdxuoYasd2rdZJaY=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'localhost:7051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1796 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1797 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 1798 Successfully installed java chaincode in peers of organization "org1"[00m[00m[1m[38;5;2m
ok 1799 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUOg0Zuy9QpkHaJrzQnld0Kt3EbgIwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwNjAwWhcNMTkxMDIyMTMxMTAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEzQMGWuC1IqciOgzKpdC4HoblgXkfV8c4RjOMzTH7cBNR\nEgB6rXLPdgrr9KFZO66YB3/8U33WJ2I1adNB3Qm2QKOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFOsIjpUyrHwwzB/b6awgipuAmINwMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0gAMEUC\nIQDja9ZxezinbhDY2cvs/VjfFiHU1QzHH9QN8vB8073QxgIgRqG2XltAeFGd3kd+\niYpgrUzoyWhBimfLmYH6txehRUc=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgxu2zw9ENQUPaCb0I\r\ns4Rz4PfthKfg2ZO3bdCTTaB8txGhRANCAATNAwZa4LUipyI6DMql0LgehuWBeR9X\r\nxzhGM4zNMftwE1ESAHqtcs92Cuv0oVk7rpgHf/xTfdYnYjVp00HdCbZA\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org2.example.com',
       'grpc.default_authority': 'peer0.org2.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUOg0Zuy9QpkHaJrzQnld0Kt3EbgIwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwNjAwWhcNMTkxMDIyMTMxMTAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEzQMGWuC1IqciOgzKpdC4HoblgXkfV8c4RjOMzTH7cBNR\nEgB6rXLPdgrr9KFZO66YB3/8U33WJ2I1adNB3Qm2QKOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFOsIjpUyrHwwzB/b6awgipuAmINwMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0gAMEUC\nIQDja9ZxezinbhDY2cvs/VjfFiHU1QzHH9QN8vB8073QxgIgRqG2XltAeFGd3kd+\niYpgrUzoyWhBimfLmYH6txehRUc=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:8051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:8051' },
    _name: 'localhost:8051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1800 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1801 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 1802 Successfully installed java chaincode in peers of organization "org2"[00m[00m[2m[38;5;66m
# [00m

***** Java-Chaincode U P G R A D E flow: instantiate chaincode *****

[00m[1m[38;5;2m
ok 1803 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1804 Successfully enrolled user 'admin' (e2eUtil 2)[00m[00m[1m[38;5;2m
ok 1805 Successfully initialized Channel[00m[00m[1m[38;5;2m
ok 1806 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1807 The chaincode upgrade transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 1808 The chaincode upgrade transaction was valid.[00m[00m[1m[38;5;2m
ok 1809 The chaincode upgrade transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 1810 The chaincode upgrade transaction was valid.[00m[00m[1m[38;5;2m
ok 1811 Successfully sent upgradetransaction to the orderer.[00m[00m[1m[38;5;2m
ok 1812 Successfully instantiated upgraded chaincode on the channel[00m[00m[2m[38;5;66m
# [00m

***** Java-Chaincode U P G R A D E flow: invoke transaction to move *****

[00m[1m[38;5;2m
ok 1813 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1814 Successfully enrolled user 'admin'[00m[00m[1m[38;5;2m
ok 1815 Successfully enrolled user 'admin' (e2eUtil 3)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[2m[38;5;66m
# stop and start the peer event hub ---- N  O  W ----- you have 0 millis Mon Oct 22 2018 14:11:46 GMT+0100 (BST)[00m[00m[2m[38;5;66m
# *****************************************************************************[00m[00m[1m[38;5;2m
ok 1816 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1817 transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 1818 transaction proposal payloads are valid[00m[00m[1m[38;5;2m
ok 1819 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1820 transaction proposal signature and endorser are valid[00m[00m[1m[38;5;2m
ok 1821 transaction proposal payloads are valid[00m[00m[1m[38;5;2m
ok 1822 compareProposalResponseResults exection did not throw an error[00m[00m[1m[38;5;2m
ok 1823  All proposals have a matching read/writes sets[00m[00m[1m[38;5;2m
ok 1824 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1825 The balance transfer transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 1826 The balance transfer transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 1827 Successfully sent transaction to the orderer.[00m[00m[2m[38;5;66m
# ******************************************************************[00m[00m[2m[38;5;66m
# To manually run /test/integration/query.js, set the following environment variables:[00m[00m[2m[38;5;66m
# export E2E_TX_ID='c61370d890cc4073974717d20cbd048a1dcff8b77ff710aca86fda589efc641d'[00m[00m[2m[38;5;66m
# ******************************************************************[00m[00m[1m[38;5;2m
ok 1828 Successfully closed all connections[00m[00m[1m[38;5;2m
ok 1829 Successfully invoked transaction on upgraded chaincode[00m[00m[2m[38;5;66m
# [00m

***** Java-Chaincode U P G R A D E flow: query chaincode *****

[00m[1m[38;5;2m
ok 1830 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1831 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1832 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 1833 checking query results are correct that value is 110[00m[00m[1m[38;5;2m
ok 1834 checking query results are correct that value is 110[00m[00m[1m[38;5;2m
ok 1835 Successfully queried on upgraded chaincode[00m[00m[2m[38;5;66m
# [00m

***** Java-Chaincode TransientMap Support in Proposals *****

[00m[1m[38;5;2m
ok 1836 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1837 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1838 Successfully enrolled user 'admin' (e2eUtil 4)[00m[00m[1m[38;5;2m
ok 1839 Checking the result has the transientMap value returned by the chaincode[00m[00m[1m[38;5;2m
ok 1840 Checking the result has the transientMap value returned by the chaincode[00m[00m[1m[38;5;2m
ok 1841 Successfully verified transient map values[00m[00m[2m[38;5;66m
# [00m

***** D I S C O V E R Y  *****

[00m[1m[38;5;2m
ok 1842 Successfully loaded a network configuration[00m[00m[1m[38;5;2m
ok 1843 Successfully loaded client section of network config for organization:org1[00m[00m[1m[38;5;2m
ok 1844 Successfully assigned an admin idenity to this client[00m[00m[1m[38;5;2m
ok 1845 Successfully created the key value store and crypto store based on the config and network config[00m[00m[1m[38;5;2m
ok 1846 Successfully got the CertificateAuthority from the client[00m[00m[1m[38;5;2m
ok 1847 Successfully called the CertificateAuthority to get the TLS material[00m[00m[1m[38;5;2m
ok 1848 Successfully loaded a network configuration[00m[00m[1m[38;5;2m
ok 1849 Successfully loaded client section of network config for organization:org2[00m[00m[1m[38;5;2m
ok 1850 Successfully assigned an admin idenity to this client[00m[00m[1m[38;5;2m
ok 1851 Successfully created the key value store and crypto store based on the config and network config[00m[00m[1m[38;5;2m
ok 1852 Successfully got the CertificateAuthority from the client[00m[00m[1m[38;5;2m
ok 1853 Successfully called the CertificateAuthority to get the TLS material[00m[00m[1m[38;5;2m
ok 1854 Successfully extracted the config update from the configtx envelope[00m[00m[1m[38;5;2m
ok 1855 Successfully signed config update for org1[00m[00m[1m[38;5;2m
ok 1856 Successfully signed config update for org2[00m[00m[1m[38;5;2m
ok 1857 Successfully create the channel.[00m[00m[1m[38;5;2m
ok 1858 Successfully extracted the config update from the configtx envelope[00m[00m[1m[38;5;2m
ok 1859 Successfully signed config update for org1[00m[00m[1m[38;5;2m
ok 1860 Successfully signed config update for org2[00m[00m[1m[38;5;2m
ok 1861 Successfully update the channel.[00m[00m[1m[38;5;2m
ok 1862 ***** Channel is created and anchor peer updated *****[00m[00m[1m[38;5;2m
ok 1863 Successfully got the genesis block[00m[00m[1m[38;5;2m
ok 1864 Successfully joined channnel on org[00m[00m[1m[38;5;2m
ok 1865 Successfully got the genesis block[00m[00m[1m[38;5;2m
ok 1866 Successfully joined channnel on org[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { name: 'peer0.org1.example.com',
       clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUEIBvaRk6sCADVqbxJI+vBUncK10wCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwNzAwWhcNMTkxMDIyMTMxMjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEJijS0/ss96abqStEwmD54bINAZD+NrlqeeWtKU/BMtOk\nW8nvtPFI65OfAhPhWLxeupSXSTRW8jqx4KxZwOBtAaOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFIc6tV3/t4mb4Y6xxi2xTwkt2qN9MCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQD+v3n60aCS0WWemFKvCUAV8mPO5QfxDIisYTQ0m+R6CQIgR3JBvCPTInU4Mpwm\nOtFJbM9v8CKm6jNgcyxF8P02s90=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgrBjyshUjR2XI29cI\r\nI792aAxxVWM1XhdmBieXYFtlUc6hRANCAAQmKNLT+yz3ppupK0TCYPnhsg0BkP42\r\nuWp55a0pT8Ey06Rbye+08Ujrk58CE+FYvF66lJdJNFbyOrHgrFnA4G0B\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUEIBvaRk6sCADVqbxJI+vBUncK10wCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwNzAwWhcNMTkxMDIyMTMxMjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEJijS0/ss96abqStEwmD54bINAZD+NrlqeeWtKU/BMtOk\nW8nvtPFI65OfAhPhWLxeupSXSTRW8jqx4KxZwOBtAaOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFIc6tV3/t4mb4Y6xxi2xTwkt2qN9MCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQD+v3n60aCS0WWemFKvCUAV8mPO5QfxDIisYTQ0m+R6CQIgR3JBvCPTInU4Mpwm\nOtFJbM9v8CKm6jNgcyxF8P02s90=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'peer0.org1.example.com',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1867 ***** Channel has been joined *****[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { name: 'peer0.org2.example.com',
       clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUEoKtDw/6kftTbEW3pMKYjxJS9mUwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwNzAwWhcNMTkxMDIyMTMxMjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEOjymio1vbDy1HwNgUvTjTn70ze5ffJF7EW7XXutVcXJv\n1kOKz1t9gYk/xCsutlQYxpw4TcEIychf/Hb0YoYElKOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFPIGJ/uQGqxleWvzjKx7eynlcD64MCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0cAMEQC\nIGhhrOD7/vssnek5iYM6ZqMPlNY7AEdPEuCkNs7P+Q1BAiBUE8f1C8RCOeMsbwYM\n448xR3bsRVF1QtdBX9JT24R9cQ==\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg9g0GN2bTtks74ylg\r\nY42ENvIbU1pm8le/nC9NFRrlXQmhRANCAAQ6PKaKjW9sPLUfA2BS9ONOfvTN7l98\r\nkXsRbtde61Vxcm/WQ4rPW32BiT/EKy62VBjGnDhNwQjJyF/8dvRihgSU\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org2.example.com',
       'grpc.default_authority': 'peer0.org2.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUEoKtDw/6kftTbEW3pMKYjxJS9mUwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwNzAwWhcNMTkxMDIyMTMxMjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEOjymio1vbDy1HwNgUvTjTn70ze5ffJF7EW7XXutVcXJv\n1kOKz1t9gYk/xCsutlQYxpw4TcEIychf/Hb0YoYElKOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFPIGJ/uQGqxleWvzjKx7eynlcD64MCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0cAMEQC\nIGhhrOD7/vssnek5iYM6ZqMPlNY7AEdPEuCkNs7P+Q1BAiBUE8f1C8RCOeMsbwYM\n448xR3bsRVF1QtdBX9JT24R9cQ==\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:8051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:8051' },
    _name: 'peer0.org2.example.com',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1868 Able to install chaincode first on the peer[00m[00m[1m[38;5;2m
ok 1869 Able to install chaincode first on the peer[00m[00m[1m[38;5;2m
ok 1870 Chaincode commited and running[00m[00m[1m[38;5;2m
ok 1871 ***** First chaincode has been installed and started *****[00m[00m[1m[38;5;2m
ok 1872 Found chaincode first[00m[00m[2m[38;5;66m
# Found first test information ::{"msps":{"OrdererMSP":{"id":"OrdererMSP","orgs":[],"rootCerts":"-----BEGIN CERTIFICATE-----\nMIICNDCCAdqgAwIBAgIRAIBOtq8vZiC0+uLSi2MIS4swCgYIKoZIzj0EAwIwZjEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xFDASBgNVBAoTC2V4YW1wbGUuY29tMRQwEgYDVQQDEwtleGFtcGxl\nLmNvbTAeFw0xNzA0MjIxMjAyNTZaFw0yNzA0MjAxMjAyNTZaMGYxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4gRnJhbmNpc2Nv\nMRQwEgYDVQQKEwtleGFtcGxlLmNvbTEUMBIGA1UEAxMLZXhhbXBsZS5jb20wWTAT\nBgcqhkjOPQIBBggqhkjOPQMBBwNCAARD2rvgyAmhn8hpu82kAjX3QUg2iqCUPEe1\nQ5CzD5MVv/dK5wrRgkcoMhJLe4HPxYbjV3rodm5Pwi5m3zMGkqNQo2kwZzAOBgNV\nHQ8BAf8EBAMCAaYwGQYDVR0lBBIwEAYEVR0lAAYIKwYBBQUHAwEwDwYDVR0TAQH/\nBAUwAwEB/zApBgNVHQ4EIgQg6q3lkIfG2X/PNQ6U83rZ8saSu2bxghSM5YlA3nCt\n6c4wCgYIKoZIzj0EAwIDSAAwRQIhAL5Lgy7jZ2W74L6i0B23a3JD0W8TSYlTcqXb\nRMSXlLIoAiB2glBl0wM/ITn5+tnHOnq2wrIGuYIiNbLK5oq2zf+gtA==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIBcjCCARigAwIBAwICA+gwCgYIKoZIzj0EAwIwFjEUMBIGA1UEAwwLb3JkZXJl\nck9yZzAwHhcNMTcwMjIwMTkwNjEwWhcNMTgwMjIwMTkwNjEwWjAWMRQwEgYDVQQD\nDAtvcmRlcmVyT3JnMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABK8Sv0EA9h06\nfmBkUCO+D/b/2INZ2huy+W/HCxSF22c7WGoJbRzQcWtQmW1KqZowUk86RcxVfFqv\njEMFVXzV38SjVjBUMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFCVakuvq\nxEcK8pYMf/Hw8hsexRMTMB8GA1UdIwQYMBaAFCVakuvqxEcK8pYMf/Hw8hsexRMT\nMAoGCCqGSM49BAMCA0gAMEUCIQCmXgDSRTyxpSk+PXg0FNlYZ4ijTVwKgLkYVhod\nzZPfngIgO4y0p3Fs/gNsJYrroKaaVDe955KrPp/O55jYDKAD/oY=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICSDCCAe6gAwIBAgIRAPnKpS42wlgtHsddm6q+kYcwCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzEuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLi5341r\nmriGFHCmVTLdgPGpDFRgwgmHSuLayMsGP0yEmsXh3hKAy24f1mjx/t8WT9G2sAdw\nONsPsfKMSCKpaRqjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCCiLa81ayqrV5Lq\nU+NfZvzO8dfxqis6K5Lb+/lqRI6iajAKBggqhkjOPQQDAgNIADBFAiEAr8LYCY2b\nq5kNqOUxgHwBa2KTi/zJBR9L3IsTRDjJo8ECICf1xiDgKqZKrAMh0OCebskYwf53\ndooG04HBoqBLvB8Q\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIBbDCCARKgAwIBAwICA+gwCgYIKoZIzj0EAwIwEzERMA8GA1UEAwwIcGVlck9y\nZzAwHhcNMTcwMjIwMTkwNjEwWhcNMTgwMjIwMTkwNjEwWjATMREwDwYDVQQDDAhw\nZWVyT3JnMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKJfDc/CcaiHRipTG2AB\nK5fA0LO9SOlbtC9bZcjLo/xsL157p+3QB3UVF3gt7nkwgMs/ul3FhSEFTk2EVNlF\n1QCjVjBUMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFFQzuQR1RZP/Qn/B\nNDtGSa8n4eN/MB8GA1UdIwQYMBaAFFQzuQR1RZP/Qn/BNDtGSa8n4eN/MAoGCCqG\nSM49BAMCA0gAMEUCIAuG+/Fy3x9JXAD1/rFsu3ZpCKbXiXZLGF7P6Gma8is5AiEA\npSQpRcdukxe4zvcfRmNBjMbNLWCoWlHSQA2jD678QGE=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICRzCCAe6gAwIBAgIRAO33HJTheTwvBgWroB6JK40wCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzIuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDoYTXB0\nMj9j+iSUyM1s7bZZVbDmP7tTej0qWNpS1K7PRsQO2hTfSuiwQrzpaTuGJ4UQPYgu\n9mTJKTWyEVWQ2pSjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCBGTVUP6b+efYl2\nzfWdGl1HJZj1TAWMNUYxfFxfsN39bjAKBggqhkjOPQQDAgNHADBEAiB2XoqoNSRw\nYzY6sgomVYtidm7HwiXEsqkrThUHasnOugIgejAgkgXWid6WEdFSAUVpEDsRiek4\nnM2KGw+XJ5/pm/Q=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIBbDCCARKgAwIBAwICA+gwCgYIKoZIzj0EAwIwEzERMA8GA1UEAwwIcGVlck9y\nZzEwHhcNMTcwMjIwMTkwNjEwWhcNMTgwMjIwMTkwNjEwWjATMREwDwYDVQQDDAhw\nZWVyT3JnMTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJ2S+UvyFgFZYL6qcrKo\nzy72Nkc/RQVzg1VfwC3X7QcnHEVBuCzba1nxdDVE8XPnhmKBWLKh0adn6GKUZpyf\nmbKjVjBUMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFAQlMVsXlKGMEWPf\nKMMM6QVASnlPMB8GA1UdIwQYMBaAFAQlMVsXlKGMEWPfKMMM6QVASnlPMAoGCCqG\nSM49BAMCA0gAMEUCIHr4AD6Xx3R6zFCsveIMnWao9Us88/0uGHoT4ELmMhA1AiEA\nyzfXU5qHp3xBJ1BrKOGi71UmQZVwWfO26INhxcfpCAg=\n-----END CERTIFICATE-----\n","intermediateCerts":"","admins":"-----BEGIN CERTIFICATE-----\nMIICHDCCAcOgAwIBAgIRAOVchZuZsk52YC0d82t2qj0wCgYIKoZIzj0EAwIwZjEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xFDASBgNVBAoTC2V4YW1wbGUuY29tMRQwEgYDVQQDEwtleGFtcGxl\nLmNvbTAeFw0xNzA0MjIxMjAyNTZaFw0yNzA0MjAxMjAyNTZaMFYxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4gRnJhbmNpc2Nv\nMRowGAYDVQQDDBFBZG1pbkBleGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49\nAwEHA0IABKR5qsiBaQSx0sy1K/7EFpBJDeVPC6cLbfqIjjtosuMfNNjDrVR9X8s+\ndPLeWbUP5qJmWnE1kZ/J0WyTnqRbKA2jYjBgMA4GA1UdDwEB/wQEAwIFoDATBgNV\nHSUEDDAKBggrBgEFBQcDATAMBgNVHRMBAf8EAjAAMCsGA1UdIwQkMCKAIOqt5ZCH\nxtl/zzUOlPN62fLGkrtm8YIUjOWJQN5wrenOMAoGCCqGSM49BAMCA0cAMEQCIEkj\nAoe3iCG+7t2BYDRmZgF/6jUZVDjHrNaRsabLzvXTAiA6PM/0GLppYtIcGQDA7qeJ\nVfRO4IGE/M3rSnpBrQCodA==\n-----END CERTIFICATE-----\n","tls_root_certs":"-----BEGIN CERTIFICATE-----\nMIICNDCCAdqgAwIBAgIRAIBOtq8vZiC0+uLSi2MIS4swCgYIKoZIzj0EAwIwZjEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xFDASBgNVBAoTC2V4YW1wbGUuY29tMRQwEgYDVQQDEwtleGFtcGxl\nLmNvbTAeFw0xNzA0MjIxMjAyNTZaFw0yNzA0MjAxMjAyNTZaMGYxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4gRnJhbmNpc2Nv\nMRQwEgYDVQQKEwtleGFtcGxlLmNvbTEUMBIGA1UEAxMLZXhhbXBsZS5jb20wWTAT\nBgcqhkjOPQIBBggqhkjOPQMBBwNCAARD2rvgyAmhn8hpu82kAjX3QUg2iqCUPEe1\nQ5CzD5MVv/dK5wrRgkcoMhJLe4HPxYbjV3rodm5Pwi5m3zMGkqNQo2kwZzAOBgNV\nHQ8BAf8EBAMCAaYwGQYDVR0lBBIwEAYEVR0lAAYIKwYBBQUHAwEwDwYDVR0TAQH/\nBAUwAwEB/zApBgNVHQ4EIgQg6q3lkIfG2X/PNQ6U83rZ8saSu2bxghSM5YlA3nCt\n6c4wCgYIKoZIzj0EAwIDSAAwRQIhAL5Lgy7jZ2W74L6i0B23a3JD0W8TSYlTcqXb\nRMSXlLIoAiB2glBl0wM/ITn5+tnHOnq2wrIGuYIiNbLK5oq2zf+gtA==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICNTCCAdygAwIBAgIRAPMzoI7K8QG4k7AzN7IhxhEwCgYIKoZIzj0EAwIwbDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xFDASBgNVBAoTC2V4YW1wbGUuY29tMRowGAYDVQQDExF0bHNjYS5l\neGFtcGxlLmNvbTAeFw0xODAyMjExODQwMzJaFw0yODAyMTkxODQwMzJaMGwxCzAJ\nBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4gRnJh\nbmNpc2NvMRQwEgYDVQQKEwtleGFtcGxlLmNvbTEaMBgGA1UEAxMRdGxzY2EuZXhh\nbXBsZS5jb20wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARXNh/8ySinCUnJi2T3\ncs4m3au0lHjallzAe6PcDz9++1bOl4CggAY0HxNov3nxtYoUJZcRhnE5an1PPipM\n71hdo18wXTAOBgNVHQ8BAf8EBAMCAaYwDwYDVR0lBAgwBgYEVR0lADAPBgNVHRMB\nAf8EBTADAQH/MCkGA1UdDgQiBCBQa5ovzv+NOu9CqfL/a885FjzDQZCg0D1kB+Oe\nIdcBUTAKBggqhkjOPQQDAgNHADBEAiAZ7PcHMWpc2iu0dc43lwhq0wKLLVleCfgZ\nJgRwdjw3wgIgMhcaHqv/W5MAudy9kjeJHIFembEJuWe/+krL6v//yw8=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICSDCCAe6gAwIBAgIRAPnKpS42wlgtHsddm6q+kYcwCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzEuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLi5341r\nmriGFHCmVTLdgPGpDFRgwgmHSuLayMsGP0yEmsXh3hKAy24f1mjx/t8WT9G2sAdw\nONsPsfKMSCKpaRqjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCCiLa81ayqrV5Lq\nU+NfZvzO8dfxqis6K5Lb+/lqRI6iajAKBggqhkjOPQQDAgNIADBFAiEAr8LYCY2b\nq5kNqOUxgHwBa2KTi/zJBR9L3IsTRDjJo8ECICf1xiDgKqZKrAMh0OCebskYwf53\ndooG04HBoqBLvB8Q\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICSTCCAfCgAwIBAgIRAN6NNLMddiNQbv9O9XXVtYkwCgYIKoZIzj0EAwIwdjEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHzAdBgNVBAMTFnRs\nc2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTgwMjIxMTg0MDMyWhcNMjgwMjE5MTg0\nMDMyWjB2MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UE\nBxMNU2FuIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEfMB0G\nA1UEAxMWdGxzY2Eub3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49\nAwEHA0IABDcanv4coQ10L/0jwxXuHcn8YtJEiqQRNSbKWLqf3/1mwYk8EEDHT4k9\nu1f+zS4T+qmSHSXbnFY+EN/ML5/1OGmjXzBdMA4GA1UdDwEB/wQEAwIBpjAPBgNV\nHSUECDAGBgRVHSUAMA8GA1UdEwEB/wQFMAMBAf8wKQYDVR0OBCIEIJDbRSUVw/eK\n6MzDHCybxAB60iGHBjtRkAIrOcT3xytTMAoGCCqGSM49BAMCA0cAMEQCIAGAMw2G\nKn0n52XceSFMyioH4Uo0dpkYaxKFk0P9vBTTAiBd0AQ0WFc/w1wuaShK3hWNg9Ey\nF9kotvRE5Hu0gweb1w==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICRzCCAe6gAwIBAgIRAO33HJTheTwvBgWroB6JK40wCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzIuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDoYTXB0\nMj9j+iSUyM1s7bZZVbDmP7tTej0qWNpS1K7PRsQO2hTfSuiwQrzpaTuGJ4UQPYgu\n9mTJKTWyEVWQ2pSjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCBGTVUP6b+efYl2\nzfWdGl1HJZj1TAWMNUYxfFxfsN39bjAKBggqhkjOPQQDAgNHADBEAiB2XoqoNSRw\nYzY6sgomVYtidm7HwiXEsqkrThUHasnOugIgejAgkgXWid6WEdFSAUVpEDsRiek4\nnM2KGw+XJ5/pm/Q=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICSTCCAfCgAwIBAgIRAMXlqdLr7+td1aShJFAZungwCgYIKoZIzj0EAwIwdjEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHzAdBgNVBAMTFnRs\nc2NhLm9yZzIuZXhhbXBsZS5jb20wHhcNMTgwMjIxMTg0MDMyWhcNMjgwMjE5MTg0\nMDMyWjB2MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UE\nBxMNU2FuIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEfMB0G\nA1UEAxMWdGxzY2Eub3JnMi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49\nAwEHA0IABO7WAyDbk/B2w9mmauuRSlOwFL1crwmiu9oDu83/Veh9ghrNRsbK2chV\nj5PoY+H5PlRbqA8ZdbmDhHhDho9KBqejXzBdMA4GA1UdDwEB/wQEAwIBpjAPBgNV\nHSUECDAGBgRVHSUAMA8GA1UdEwEB/wQFMAMBAf8wKQYDVR0OBCIEIO+KUPKtAXWt\nBPdjC4N80Yys3wJ9i4/mxz1ikCFJ890EMAoGCCqGSM49BAMCA0cAMEQCID4dOXH8\n6ginPTS17oyyowkdM34Z5ATPdA7WytfA8IW+AiA0jguTMYimuWEWuTulOgyNZ3ai\nhzFkzY/dm7duN86yJQ==\n-----END CERTIFICATE-----\n","tls_intermediate_certs":""},"Org1MSP":{"id":"Org1MSP","orgs":[],"rootCerts":"-----BEGIN CERTIFICATE-----\nMIICSDCCAe6gAwIBAgIRAPnKpS42wlgtHsddm6q+kYcwCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzEuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLi5341r\nmriGFHCmVTLdgPGpDFRgwgmHSuLayMsGP0yEmsXh3hKAy24f1mjx/t8WT9G2sAdw\nONsPsfKMSCKpaRqjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCCiLa81ayqrV5Lq\nU+NfZvzO8dfxqis6K5Lb+/lqRI6iajAKBggqhkjOPQQDAgNIADBFAiEAr8LYCY2b\nq5kNqOUxgHwBa2KTi/zJBR9L3IsTRDjJo8ECICf1xiDgKqZKrAMh0OCebskYwf53\ndooG04HBoqBLvB8Q\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIBbDCCARKgAwIBAwICA+gwCgYIKoZIzj0EAwIwEzERMA8GA1UEAwwIcGVlck9y\nZzAwHhcNMTcwMjIwMTkwNjEwWhcNMTgwMjIwMTkwNjEwWjATMREwDwYDVQQDDAhw\nZWVyT3JnMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKJfDc/CcaiHRipTG2AB\nK5fA0LO9SOlbtC9bZcjLo/xsL157p+3QB3UVF3gt7nkwgMs/ul3FhSEFTk2EVNlF\n1QCjVjBUMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFFQzuQR1RZP/Qn/B\nNDtGSa8n4eN/MB8GA1UdIwQYMBaAFFQzuQR1RZP/Qn/BNDtGSa8n4eN/MAoGCCqG\nSM49BAMCA0gAMEUCIAuG+/Fy3x9JXAD1/rFsu3ZpCKbXiXZLGF7P6Gma8is5AiEA\npSQpRcdukxe4zvcfRmNBjMbNLWCoWlHSQA2jD678QGE=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIBbDCCARKgAwIBAwICA+gwCgYIKoZIzj0EAwIwEzERMA8GA1UEAwwIcGVlck9y\nZzEwHhcNMTcwMjIwMTkwNjEwWhcNMTgwMjIwMTkwNjEwWjATMREwDwYDVQQDDAhw\nZWVyT3JnMTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJ2S+UvyFgFZYL6qcrKo\nzy72Nkc/RQVzg1VfwC3X7QcnHEVBuCzba1nxdDVE8XPnhmKBWLKh0adn6GKUZpyf\nmbKjVjBUMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFAQlMVsXlKGMEWPf\nKMMM6QVASnlPMB8GA1UdIwQYMBaAFAQlMVsXlKGMEWPfKMMM6QVASnlPMAoGCCqG\nSM49BAMCA0gAMEUCIHr4AD6Xx3R6zFCsveIMnWao9Us88/0uGHoT4ELmMhA1AiEA\nyzfXU5qHp3xBJ1BrKOGi71UmQZVwWfO26INhxcfpCAg=\n-----END CERTIFICATE-----\n","intermediateCerts":"","admins":"-----BEGIN CERTIFICATE-----\nMIICKjCCAdGgAwIBAgIQIVQ6HvVnJP1qZ5YKfh50hzAKBggqhkjOPQQDAjBwMQsw\nCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy\nYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEZMBcGA1UEAxMQb3Jn\nMS5leGFtcGxlLmNvbTAeFw0xNzA0MjIxMjAyNTZaFw0yNzA0MjAxMjAyNTZaMFsx\nCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4g\nRnJhbmNpc2NvMR8wHQYDVQQDDBZBZG1pbkBvcmcxLmV4YW1wbGUuY29tMFkwEwYH\nKoZIzj0CAQYIKoZIzj0DAQcDQgAEDuNSbFkBNqbdlGfwwXSHKWv4pw2eFOeD+VXC\nHV4CErBKnUXBiwc/nL766UzXnWnsjUUp3ZOSzCCf56cNkLmv6aNiMGAwDgYDVR0P\nAQH/BAQDAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwKwYD\nVR0jBCQwIoAgoi2vNWsqq1eS6lPjX2b8zvHX8aorOiuS2/v5akSOomowCgYIKoZI\nzj0EAwIDRwAwRAIgbEqKoKrFuYQG0ndiX7dT7GKGlF17Skf8DYil9cqbp00CID5T\nURQPp0/vJ3tldK0z9xjFvsSecj8aqnDvZvGz07/v\n-----END CERTIFICATE-----\n","tls_root_certs":"-----BEGIN CERTIFICATE-----\nMIICSDCCAe6gAwIBAgIRAPnKpS42wlgtHsddm6q+kYcwCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzEuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLi5341r\nmriGFHCmVTLdgPGpDFRgwgmHSuLayMsGP0yEmsXh3hKAy24f1mjx/t8WT9G2sAdw\nONsPsfKMSCKpaRqjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCCiLa81ayqrV5Lq\nU+NfZvzO8dfxqis6K5Lb+/lqRI6iajAKBggqhkjOPQQDAgNIADBFAiEAr8LYCY2b\nq5kNqOUxgHwBa2KTi/zJBR9L3IsTRDjJo8ECICf1xiDgKqZKrAMh0OCebskYwf53\ndooG04HBoqBLvB8Q\n-----END CERTIFICATE-----\n","tls_intermediate_certs":""},"Org2MSP":{"id":"Org2MSP","orgs":[],"rootCerts":"-----BEGIN CERTIFICATE-----\nMIICRzCCAe6gAwIBAgIRAO33HJTheTwvBgWroB6JK40wCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzIuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDoYTXB0\nMj9j+iSUyM1s7bZZVbDmP7tTej0qWNpS1K7PRsQO2hTfSuiwQrzpaTuGJ4UQPYgu\n9mTJKTWyEVWQ2pSjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCBGTVUP6b+efYl2\nzfWdGl1HJZj1TAWMNUYxfFxfsN39bjAKBggqhkjOPQQDAgNHADBEAiB2XoqoNSRw\nYzY6sgomVYtidm7HwiXEsqkrThUHasnOugIgejAgkgXWid6WEdFSAUVpEDsRiek4\nnM2KGw+XJ5/pm/Q=\n-----END CERTIFICATE-----\n","intermediateCerts":"","admins":"-----BEGIN CERTIFICATE-----\nMIICKjCCAdGgAwIBAgIQAjgHxmmRePMUA7W89J4iJDAKBggqhkjOPQQDAjBwMQsw\nCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy\nYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEZMBcGA1UEAxMQb3Jn\nMi5leGFtcGxlLmNvbTAeFw0xNzA0MjIxMjAyNTZaFw0yNzA0MjAxMjAyNTZaMFsx\nCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4g\nRnJhbmNpc2NvMR8wHQYDVQQDDBZBZG1pbkBvcmcyLmV4YW1wbGUuY29tMFkwEwYH\nKoZIzj0CAQYIKoZIzj0DAQcDQgAE/LzcUga8gVut24gLEXfECATFQUZZw3uVYvML\nfqefDQEqA7v12Dd/DUSWvTGzOCR2wpFUqX9zidR0EUajqnOl4KNiMGAwDgYDVR0P\nAQH/BAQDAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwKwYD\nVR0jBCQwIoAgRk1VD+m/nn2Jds31nRpdRyWY9UwFjDVGMXxcX7Dd/W4wCgYIKoZI\nzj0EAwIDRwAwRAIgBweV4tP8pYd4osOWIawmQTD4oqXtpp3F8y1g85Qz1BICIE8E\nVNeXeNlxRoUdToSMOBHSJE0EVqK4BP4NXibBJSgH\n-----END CERTIFICATE-----\n","tls_root_certs":"-----BEGIN CERTIFICATE-----\nMIICRzCCAe6gAwIBAgIRAO33HJTheTwvBgWroB6JK40wCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzIuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDoYTXB0\nMj9j+iSUyM1s7bZZVbDmP7tTej0qWNpS1K7PRsQO2hTfSuiwQrzpaTuGJ4UQPYgu\n9mTJKTWyEVWQ2pSjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCBGTVUP6b+efYl2\nzfWdGl1HJZj1TAWMNUYxfFxfsN39bjAKBggqhkjOPQQDAgNHADBEAiB2XoqoNSRw\nYzY6sgomVYtidm7HwiXEsqkrThUHasnOugIgejAgkgXWid6WEdFSAUVpEDsRiek4\nnM2KGw+XJ5/pm/Q=\n-----END CERTIFICATE-----\n","tls_intermediate_certs":""}},"orderers":{"OrdererMSP":{"endpoints":[{"host":"orderer.example.com","port":7050}]}},"peers_by_org":{"Org2MSP":{"peers":[{"mspid":"Org2MSP","endpoint":"peer0.org2.example.com:8051","ledger_height":{"low":3,"high":0,"unsigned":true},"chaincodes":[{"name":"first","version":"v10"}]}]},"Org1MSP":{"peers":[{"mspid":"Org1MSP","endpoint":"peer0.org1.example.com:7051","ledger_height":{"low":3,"high":0,"unsigned":true},"chaincodes":[{"name":"first","version":"v10"}]}]}},"endorsement_plans":[{"chaincode":"first","groups":{"G0":{"peers":[{"mspid":"Org1MSP","endpoint":"peer0.org1.example.com:7051","ledger_height":{"low":3,"high":0,"unsigned":true},"chaincodes":[{"name":"first","version":"v10"}]}]},"G1":{"peers":[{"mspid":"Org2MSP","endpoint":"peer0.org2.example.com:8051","ledger_height":{"low":3,"high":0,"unsigned":true},"chaincodes":[{"name":"first","version":"v10"}]}]}},"layouts":[{"G0":1},{"G1":1}]}]}[00m[00m[1m[38;5;2m
ok 1873 Checking MSP ID[00m[00m[1m[38;5;2m
ok 1874 Checking MSP ID[00m[00m[1m[38;5;2m
ok 1875 Checking MSP ID[00m[00m[1m[38;5;2m
ok 1876 Checking orderer host[00m[00m[1m[38;5;2m
ok 1877 Checking orderer port[00m[00m[1m[38;5;2m
ok 1878 Checking peer endpoint[00m[00m[1m[38;5;2m
ok 1879 Checking peer ledger_height[00m[00m[1m[38;5;2m
ok 1880 Checking peer chaincode name[00m[00m[1m[38;5;2m
ok 1881 Checking peer chaincode version[00m[00m[1m[38;5;2m
ok 1882 Checking plan peer endpoint[00m[00m[1m[38;5;2m
ok 1883 Checking plan peer ledger_height[00m[00m[1m[38;5;2m
ok 1884 Checking plan peer chaincode name[00m[00m[1m[38;5;2m
ok 1885 Checking plan peer chaincode version[00m[00m[1m[38;5;2m
ok 1886 Checking layout quantities_by_group[00m[00m[1m[38;5;2m
ok 1887 Checking layout quantities_by_group[00m[00m[2m[38;5;66m
# Found second test information ::{"msps":{"Org2MSP":{"id":"Org2MSP","orgs":[],"rootCerts":"-----BEGIN CERTIFICATE-----\nMIICRzCCAe6gAwIBAgIRAO33HJTheTwvBgWroB6JK40wCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzIuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDoYTXB0\nMj9j+iSUyM1s7bZZVbDmP7tTej0qWNpS1K7PRsQO2hTfSuiwQrzpaTuGJ4UQPYgu\n9mTJKTWyEVWQ2pSjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCBGTVUP6b+efYl2\nzfWdGl1HJZj1TAWMNUYxfFxfsN39bjAKBggqhkjOPQQDAgNHADBEAiB2XoqoNSRw\nYzY6sgomVYtidm7HwiXEsqkrThUHasnOugIgejAgkgXWid6WEdFSAUVpEDsRiek4\nnM2KGw+XJ5/pm/Q=\n-----END CERTIFICATE-----\n","intermediateCerts":"","admins":"-----BEGIN CERTIFICATE-----\nMIICKjCCAdGgAwIBAgIQAjgHxmmRePMUA7W89J4iJDAKBggqhkjOPQQDAjBwMQsw\nCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy\nYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEZMBcGA1UEAxMQb3Jn\nMi5leGFtcGxlLmNvbTAeFw0xNzA0MjIxMjAyNTZaFw0yNzA0MjAxMjAyNTZaMFsx\nCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4g\nRnJhbmNpc2NvMR8wHQYDVQQDDBZBZG1pbkBvcmcyLmV4YW1wbGUuY29tMFkwEwYH\nKoZIzj0CAQYIKoZIzj0DAQcDQgAE/LzcUga8gVut24gLEXfECATFQUZZw3uVYvML\nfqefDQEqA7v12Dd/DUSWvTGzOCR2wpFUqX9zidR0EUajqnOl4KNiMGAwDgYDVR0P\nAQH/BAQDAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwKwYD\nVR0jBCQwIoAgRk1VD+m/nn2Jds31nRpdRyWY9UwFjDVGMXxcX7Dd/W4wCgYIKoZI\nzj0EAwIDRwAwRAIgBweV4tP8pYd4osOWIawmQTD4oqXtpp3F8y1g85Qz1BICIE8E\nVNeXeNlxRoUdToSMOBHSJE0EVqK4BP4NXibBJSgH\n-----END CERTIFICATE-----\n","tls_root_certs":"-----BEGIN CERTIFICATE-----\nMIICRzCCAe6gAwIBAgIRAO33HJTheTwvBgWroB6JK40wCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzIuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDoYTXB0\nMj9j+iSUyM1s7bZZVbDmP7tTej0qWNpS1K7PRsQO2hTfSuiwQrzpaTuGJ4UQPYgu\n9mTJKTWyEVWQ2pSjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCBGTVUP6b+efYl2\nzfWdGl1HJZj1TAWMNUYxfFxfsN39bjAKBggqhkjOPQQDAgNHADBEAiB2XoqoNSRw\nYzY6sgomVYtidm7HwiXEsqkrThUHasnOugIgejAgkgXWid6WEdFSAUVpEDsRiek4\nnM2KGw+XJ5/pm/Q=\n-----END CERTIFICATE-----\n","tls_intermediate_certs":""},"OrdererMSP":{"id":"OrdererMSP","orgs":[],"rootCerts":"-----BEGIN CERTIFICATE-----\nMIICNDCCAdqgAwIBAgIRAIBOtq8vZiC0+uLSi2MIS4swCgYIKoZIzj0EAwIwZjEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xFDASBgNVBAoTC2V4YW1wbGUuY29tMRQwEgYDVQQDEwtleGFtcGxl\nLmNvbTAeFw0xNzA0MjIxMjAyNTZaFw0yNzA0MjAxMjAyNTZaMGYxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4gRnJhbmNpc2Nv\nMRQwEgYDVQQKEwtleGFtcGxlLmNvbTEUMBIGA1UEAxMLZXhhbXBsZS5jb20wWTAT\nBgcqhkjOPQIBBggqhkjOPQMBBwNCAARD2rvgyAmhn8hpu82kAjX3QUg2iqCUPEe1\nQ5CzD5MVv/dK5wrRgkcoMhJLe4HPxYbjV3rodm5Pwi5m3zMGkqNQo2kwZzAOBgNV\nHQ8BAf8EBAMCAaYwGQYDVR0lBBIwEAYEVR0lAAYIKwYBBQUHAwEwDwYDVR0TAQH/\nBAUwAwEB/zApBgNVHQ4EIgQg6q3lkIfG2X/PNQ6U83rZ8saSu2bxghSM5YlA3nCt\n6c4wCgYIKoZIzj0EAwIDSAAwRQIhAL5Lgy7jZ2W74L6i0B23a3JD0W8TSYlTcqXb\nRMSXlLIoAiB2glBl0wM/ITn5+tnHOnq2wrIGuYIiNbLK5oq2zf+gtA==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIBcjCCARigAwIBAwICA+gwCgYIKoZIzj0EAwIwFjEUMBIGA1UEAwwLb3JkZXJl\nck9yZzAwHhcNMTcwMjIwMTkwNjEwWhcNMTgwMjIwMTkwNjEwWjAWMRQwEgYDVQQD\nDAtvcmRlcmVyT3JnMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABK8Sv0EA9h06\nfmBkUCO+D/b/2INZ2huy+W/HCxSF22c7WGoJbRzQcWtQmW1KqZowUk86RcxVfFqv\njEMFVXzV38SjVjBUMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFCVakuvq\nxEcK8pYMf/Hw8hsexRMTMB8GA1UdIwQYMBaAFCVakuvqxEcK8pYMf/Hw8hsexRMT\nMAoGCCqGSM49BAMCA0gAMEUCIQCmXgDSRTyxpSk+PXg0FNlYZ4ijTVwKgLkYVhod\nzZPfngIgO4y0p3Fs/gNsJYrroKaaVDe955KrPp/O55jYDKAD/oY=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICSDCCAe6gAwIBAgIRAPnKpS42wlgtHsddm6q+kYcwCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzEuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLi5341r\nmriGFHCmVTLdgPGpDFRgwgmHSuLayMsGP0yEmsXh3hKAy24f1mjx/t8WT9G2sAdw\nONsPsfKMSCKpaRqjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCCiLa81ayqrV5Lq\nU+NfZvzO8dfxqis6K5Lb+/lqRI6iajAKBggqhkjOPQQDAgNIADBFAiEAr8LYCY2b\nq5kNqOUxgHwBa2KTi/zJBR9L3IsTRDjJo8ECICf1xiDgKqZKrAMh0OCebskYwf53\ndooG04HBoqBLvB8Q\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIBbDCCARKgAwIBAwICA+gwCgYIKoZIzj0EAwIwEzERMA8GA1UEAwwIcGVlck9y\nZzAwHhcNMTcwMjIwMTkwNjEwWhcNMTgwMjIwMTkwNjEwWjATMREwDwYDVQQDDAhw\nZWVyT3JnMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKJfDc/CcaiHRipTG2AB\nK5fA0LO9SOlbtC9bZcjLo/xsL157p+3QB3UVF3gt7nkwgMs/ul3FhSEFTk2EVNlF\n1QCjVjBUMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFFQzuQR1RZP/Qn/B\nNDtGSa8n4eN/MB8GA1UdIwQYMBaAFFQzuQR1RZP/Qn/BNDtGSa8n4eN/MAoGCCqG\nSM49BAMCA0gAMEUCIAuG+/Fy3x9JXAD1/rFsu3ZpCKbXiXZLGF7P6Gma8is5AiEA\npSQpRcdukxe4zvcfRmNBjMbNLWCoWlHSQA2jD678QGE=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICRzCCAe6gAwIBAgIRAO33HJTheTwvBgWroB6JK40wCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzIuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDoYTXB0\nMj9j+iSUyM1s7bZZVbDmP7tTej0qWNpS1K7PRsQO2hTfSuiwQrzpaTuGJ4UQPYgu\n9mTJKTWyEVWQ2pSjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCBGTVUP6b+efYl2\nzfWdGl1HJZj1TAWMNUYxfFxfsN39bjAKBggqhkjOPQQDAgNHADBEAiB2XoqoNSRw\nYzY6sgomVYtidm7HwiXEsqkrThUHasnOugIgejAgkgXWid6WEdFSAUVpEDsRiek4\nnM2KGw+XJ5/pm/Q=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIBbDCCARKgAwIBAwICA+gwCgYIKoZIzj0EAwIwEzERMA8GA1UEAwwIcGVlck9y\nZzEwHhcNMTcwMjIwMTkwNjEwWhcNMTgwMjIwMTkwNjEwWjATMREwDwYDVQQDDAhw\nZWVyT3JnMTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJ2S+UvyFgFZYL6qcrKo\nzy72Nkc/RQVzg1VfwC3X7QcnHEVBuCzba1nxdDVE8XPnhmKBWLKh0adn6GKUZpyf\nmbKjVjBUMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFAQlMVsXlKGMEWPf\nKMMM6QVASnlPMB8GA1UdIwQYMBaAFAQlMVsXlKGMEWPfKMMM6QVASnlPMAoGCCqG\nSM49BAMCA0gAMEUCIHr4AD6Xx3R6zFCsveIMnWao9Us88/0uGHoT4ELmMhA1AiEA\nyzfXU5qHp3xBJ1BrKOGi71UmQZVwWfO26INhxcfpCAg=\n-----END CERTIFICATE-----\n","intermediateCerts":"","admins":"-----BEGIN CERTIFICATE-----\nMIICHDCCAcOgAwIBAgIRAOVchZuZsk52YC0d82t2qj0wCgYIKoZIzj0EAwIwZjEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xFDASBgNVBAoTC2V4YW1wbGUuY29tMRQwEgYDVQQDEwtleGFtcGxl\nLmNvbTAeFw0xNzA0MjIxMjAyNTZaFw0yNzA0MjAxMjAyNTZaMFYxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4gRnJhbmNpc2Nv\nMRowGAYDVQQDDBFBZG1pbkBleGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49\nAwEHA0IABKR5qsiBaQSx0sy1K/7EFpBJDeVPC6cLbfqIjjtosuMfNNjDrVR9X8s+\ndPLeWbUP5qJmWnE1kZ/J0WyTnqRbKA2jYjBgMA4GA1UdDwEB/wQEAwIFoDATBgNV\nHSUEDDAKBggrBgEFBQcDATAMBgNVHRMBAf8EAjAAMCsGA1UdIwQkMCKAIOqt5ZCH\nxtl/zzUOlPN62fLGkrtm8YIUjOWJQN5wrenOMAoGCCqGSM49BAMCA0cAMEQCIEkj\nAoe3iCG+7t2BYDRmZgF/6jUZVDjHrNaRsabLzvXTAiA6PM/0GLppYtIcGQDA7qeJ\nVfRO4IGE/M3rSnpBrQCodA==\n-----END CERTIFICATE-----\n","tls_root_certs":"-----BEGIN CERTIFICATE-----\nMIICNDCCAdqgAwIBAgIRAIBOtq8vZiC0+uLSi2MIS4swCgYIKoZIzj0EAwIwZjEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xFDASBgNVBAoTC2V4YW1wbGUuY29tMRQwEgYDVQQDEwtleGFtcGxl\nLmNvbTAeFw0xNzA0MjIxMjAyNTZaFw0yNzA0MjAxMjAyNTZaMGYxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4gRnJhbmNpc2Nv\nMRQwEgYDVQQKEwtleGFtcGxlLmNvbTEUMBIGA1UEAxMLZXhhbXBsZS5jb20wWTAT\nBgcqhkjOPQIBBggqhkjOPQMBBwNCAARD2rvgyAmhn8hpu82kAjX3QUg2iqCUPEe1\nQ5CzD5MVv/dK5wrRgkcoMhJLe4HPxYbjV3rodm5Pwi5m3zMGkqNQo2kwZzAOBgNV\nHQ8BAf8EBAMCAaYwGQYDVR0lBBIwEAYEVR0lAAYIKwYBBQUHAwEwDwYDVR0TAQH/\nBAUwAwEB/zApBgNVHQ4EIgQg6q3lkIfG2X/PNQ6U83rZ8saSu2bxghSM5YlA3nCt\n6c4wCgYIKoZIzj0EAwIDSAAwRQIhAL5Lgy7jZ2W74L6i0B23a3JD0W8TSYlTcqXb\nRMSXlLIoAiB2glBl0wM/ITn5+tnHOnq2wrIGuYIiNbLK5oq2zf+gtA==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICNTCCAdygAwIBAgIRAPMzoI7K8QG4k7AzN7IhxhEwCgYIKoZIzj0EAwIwbDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xFDASBgNVBAoTC2V4YW1wbGUuY29tMRowGAYDVQQDExF0bHNjYS5l\neGFtcGxlLmNvbTAeFw0xODAyMjExODQwMzJaFw0yODAyMTkxODQwMzJaMGwxCzAJ\nBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4gRnJh\nbmNpc2NvMRQwEgYDVQQKEwtleGFtcGxlLmNvbTEaMBgGA1UEAxMRdGxzY2EuZXhh\nbXBsZS5jb20wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARXNh/8ySinCUnJi2T3\ncs4m3au0lHjallzAe6PcDz9++1bOl4CggAY0HxNov3nxtYoUJZcRhnE5an1PPipM\n71hdo18wXTAOBgNVHQ8BAf8EBAMCAaYwDwYDVR0lBAgwBgYEVR0lADAPBgNVHRMB\nAf8EBTADAQH/MCkGA1UdDgQiBCBQa5ovzv+NOu9CqfL/a885FjzDQZCg0D1kB+Oe\nIdcBUTAKBggqhkjOPQQDAgNHADBEAiAZ7PcHMWpc2iu0dc43lwhq0wKLLVleCfgZ\nJgRwdjw3wgIgMhcaHqv/W5MAudy9kjeJHIFembEJuWe/+krL6v//yw8=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICSDCCAe6gAwIBAgIRAPnKpS42wlgtHsddm6q+kYcwCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzEuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLi5341r\nmriGFHCmVTLdgPGpDFRgwgmHSuLayMsGP0yEmsXh3hKAy24f1mjx/t8WT9G2sAdw\nONsPsfKMSCKpaRqjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCCiLa81ayqrV5Lq\nU+NfZvzO8dfxqis6K5Lb+/lqRI6iajAKBggqhkjOPQQDAgNIADBFAiEAr8LYCY2b\nq5kNqOUxgHwBa2KTi/zJBR9L3IsTRDjJo8ECICf1xiDgKqZKrAMh0OCebskYwf53\ndooG04HBoqBLvB8Q\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICSTCCAfCgAwIBAgIRAN6NNLMddiNQbv9O9XXVtYkwCgYIKoZIzj0EAwIwdjEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHzAdBgNVBAMTFnRs\nc2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTgwMjIxMTg0MDMyWhcNMjgwMjE5MTg0\nMDMyWjB2MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UE\nBxMNU2FuIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEfMB0G\nA1UEAxMWdGxzY2Eub3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49\nAwEHA0IABDcanv4coQ10L/0jwxXuHcn8YtJEiqQRNSbKWLqf3/1mwYk8EEDHT4k9\nu1f+zS4T+qmSHSXbnFY+EN/ML5/1OGmjXzBdMA4GA1UdDwEB/wQEAwIBpjAPBgNV\nHSUECDAGBgRVHSUAMA8GA1UdEwEB/wQFMAMBAf8wKQYDVR0OBCIEIJDbRSUVw/eK\n6MzDHCybxAB60iGHBjtRkAIrOcT3xytTMAoGCCqGSM49BAMCA0cAMEQCIAGAMw2G\nKn0n52XceSFMyioH4Uo0dpkYaxKFk0P9vBTTAiBd0AQ0WFc/w1wuaShK3hWNg9Ey\nF9kotvRE5Hu0gweb1w==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICRzCCAe6gAwIBAgIRAO33HJTheTwvBgWroB6JK40wCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzIuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDoYTXB0\nMj9j+iSUyM1s7bZZVbDmP7tTej0qWNpS1K7PRsQO2hTfSuiwQrzpaTuGJ4UQPYgu\n9mTJKTWyEVWQ2pSjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCBGTVUP6b+efYl2\nzfWdGl1HJZj1TAWMNUYxfFxfsN39bjAKBggqhkjOPQQDAgNHADBEAiB2XoqoNSRw\nYzY6sgomVYtidm7HwiXEsqkrThUHasnOugIgejAgkgXWid6WEdFSAUVpEDsRiek4\nnM2KGw+XJ5/pm/Q=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICSTCCAfCgAwIBAgIRAMXlqdLr7+td1aShJFAZungwCgYIKoZIzj0EAwIwdjEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHzAdBgNVBAMTFnRs\nc2NhLm9yZzIuZXhhbXBsZS5jb20wHhcNMTgwMjIxMTg0MDMyWhcNMjgwMjE5MTg0\nMDMyWjB2MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UE\nBxMNU2FuIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEfMB0G\nA1UEAxMWdGxzY2Eub3JnMi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49\nAwEHA0IABO7WAyDbk/B2w9mmauuRSlOwFL1crwmiu9oDu83/Veh9ghrNRsbK2chV\nj5PoY+H5PlRbqA8ZdbmDhHhDho9KBqejXzBdMA4GA1UdDwEB/wQEAwIBpjAPBgNV\nHSUECDAGBgRVHSUAMA8GA1UdEwEB/wQFMAMBAf8wKQYDVR0OBCIEIO+KUPKtAXWt\nBPdjC4N80Yys3wJ9i4/mxz1ikCFJ890EMAoGCCqGSM49BAMCA0cAMEQCID4dOXH8\n6ginPTS17oyyowkdM34Z5ATPdA7WytfA8IW+AiA0jguTMYimuWEWuTulOgyNZ3ai\nhzFkzY/dm7duN86yJQ==\n-----END CERTIFICATE-----\n","tls_intermediate_certs":""},"Org1MSP":{"id":"Org1MSP","orgs":[],"rootCerts":"-----BEGIN CERTIFICATE-----\nMIICSDCCAe6gAwIBAgIRAPnKpS42wlgtHsddm6q+kYcwCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzEuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLi5341r\nmriGFHCmVTLdgPGpDFRgwgmHSuLayMsGP0yEmsXh3hKAy24f1mjx/t8WT9G2sAdw\nONsPsfKMSCKpaRqjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCCiLa81ayqrV5Lq\nU+NfZvzO8dfxqis6K5Lb+/lqRI6iajAKBggqhkjOPQQDAgNIADBFAiEAr8LYCY2b\nq5kNqOUxgHwBa2KTi/zJBR9L3IsTRDjJo8ECICf1xiDgKqZKrAMh0OCebskYwf53\ndooG04HBoqBLvB8Q\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIBbDCCARKgAwIBAwICA+gwCgYIKoZIzj0EAwIwEzERMA8GA1UEAwwIcGVlck9y\nZzAwHhcNMTcwMjIwMTkwNjEwWhcNMTgwMjIwMTkwNjEwWjATMREwDwYDVQQDDAhw\nZWVyT3JnMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKJfDc/CcaiHRipTG2AB\nK5fA0LO9SOlbtC9bZcjLo/xsL157p+3QB3UVF3gt7nkwgMs/ul3FhSEFTk2EVNlF\n1QCjVjBUMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFFQzuQR1RZP/Qn/B\nNDtGSa8n4eN/MB8GA1UdIwQYMBaAFFQzuQR1RZP/Qn/BNDtGSa8n4eN/MAoGCCqG\nSM49BAMCA0gAMEUCIAuG+/Fy3x9JXAD1/rFsu3ZpCKbXiXZLGF7P6Gma8is5AiEA\npSQpRcdukxe4zvcfRmNBjMbNLWCoWlHSQA2jD678QGE=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIBbDCCARKgAwIBAwICA+gwCgYIKoZIzj0EAwIwEzERMA8GA1UEAwwIcGVlck9y\nZzEwHhcNMTcwMjIwMTkwNjEwWhcNMTgwMjIwMTkwNjEwWjATMREwDwYDVQQDDAhw\nZWVyT3JnMTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJ2S+UvyFgFZYL6qcrKo\nzy72Nkc/RQVzg1VfwC3X7QcnHEVBuCzba1nxdDVE8XPnhmKBWLKh0adn6GKUZpyf\nmbKjVjBUMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFAQlMVsXlKGMEWPf\nKMMM6QVASnlPMB8GA1UdIwQYMBaAFAQlMVsXlKGMEWPfKMMM6QVASnlPMAoGCCqG\nSM49BAMCA0gAMEUCIHr4AD6Xx3R6zFCsveIMnWao9Us88/0uGHoT4ELmMhA1AiEA\nyzfXU5qHp3xBJ1BrKOGi71UmQZVwWfO26INhxcfpCAg=\n-----END CERTIFICATE-----\n","intermediateCerts":"","admins":"-----BEGIN CERTIFICATE-----\nMIICKjCCAdGgAwIBAgIQIVQ6HvVnJP1qZ5YKfh50hzAKBggqhkjOPQQDAjBwMQsw\nCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy\nYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEZMBcGA1UEAxMQb3Jn\nMS5leGFtcGxlLmNvbTAeFw0xNzA0MjIxMjAyNTZaFw0yNzA0MjAxMjAyNTZaMFsx\nCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4g\nRnJhbmNpc2NvMR8wHQYDVQQDDBZBZG1pbkBvcmcxLmV4YW1wbGUuY29tMFkwEwYH\nKoZIzj0CAQYIKoZIzj0DAQcDQgAEDuNSbFkBNqbdlGfwwXSHKWv4pw2eFOeD+VXC\nHV4CErBKnUXBiwc/nL766UzXnWnsjUUp3ZOSzCCf56cNkLmv6aNiMGAwDgYDVR0P\nAQH/BAQDAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwKwYD\nVR0jBCQwIoAgoi2vNWsqq1eS6lPjX2b8zvHX8aorOiuS2/v5akSOomowCgYIKoZI\nzj0EAwIDRwAwRAIgbEqKoKrFuYQG0ndiX7dT7GKGlF17Skf8DYil9cqbp00CID5T\nURQPp0/vJ3tldK0z9xjFvsSecj8aqnDvZvGz07/v\n-----END CERTIFICATE-----\n","tls_root_certs":"-----BEGIN CERTIFICATE-----\nMIICSDCCAe6gAwIBAgIRAPnKpS42wlgtHsddm6q+kYcwCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzEuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLi5341r\nmriGFHCmVTLdgPGpDFRgwgmHSuLayMsGP0yEmsXh3hKAy24f1mjx/t8WT9G2sAdw\nONsPsfKMSCKpaRqjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCCiLa81ayqrV5Lq\nU+NfZvzO8dfxqis6K5Lb+/lqRI6iajAKBggqhkjOPQQDAgNIADBFAiEAr8LYCY2b\nq5kNqOUxgHwBa2KTi/zJBR9L3IsTRDjJo8ECICf1xiDgKqZKrAMh0OCebskYwf53\ndooG04HBoqBLvB8Q\n-----END CERTIFICATE-----\n","tls_intermediate_certs":""}},"orderers":{"OrdererMSP":{"endpoints":[{"host":"orderer.example.com","port":7050}]}},"peers_by_org":{"Org1MSP":{"peers":[{"mspid":"Org1MSP","endpoint":"peer0.org1.example.com:7051","ledger_height":{"low":3,"high":0,"unsigned":true},"chaincodes":[{"name":"first","version":"v10"}]}]},"Org2MSP":{"peers":[{"mspid":"Org2MSP","endpoint":"peer0.org2.example.com:8051","ledger_height":{"low":3,"high":0,"unsigned":true},"chaincodes":[{"name":"first","version":"v10"}]}]}},"endorsement_plans":[{"chaincode":"first","groups":{"G1":{"peers":[{"mspid":"Org2MSP","endpoint":"peer0.org2.example.com:8051","ledger_height":{"low":3,"high":0,"unsigned":true},"chaincodes":[{"name":"first","version":"v10"}]}]},"G0":{"peers":[{"mspid":"Org1MSP","endpoint":"peer0.org1.example.com:7051","ledger_height":{"low":3,"high":0,"unsigned":true},"chaincodes":[{"name":"first","version":"v10"}]}]}},"layouts":[{"G0":1},{"G1":1}]}]}[00m[00m[1m[38;5;2m
ok 1888 Checking MSP ID[00m[00m[1m[38;5;2m
ok 1889 Checking MSP ID[00m[00m[1m[38;5;2m
ok 1890 Checking MSP ID[00m[00m[1m[38;5;2m
ok 1891 Checking orderer host[00m[00m[1m[38;5;2m
ok 1892 Checking orderer port[00m[00m[1m[38;5;2m
ok 1893 Checking peer endpoint[00m[00m[1m[38;5;2m
ok 1894 Checking peer ledger_height[00m[00m[1m[38;5;2m
ok 1895 Checking peer chaincode name[00m[00m[1m[38;5;2m
ok 1896 Checking peer chaincode version[00m[00m[1m[38;5;2m
ok 1897 Checking plan id[00m[00m[1m[38;5;2m
ok 1898 Checking plan peer endpoint[00m[00m[1m[38;5;2m
ok 1899 Checking plan peer ledger_height[00m[00m[1m[38;5;2m
ok 1900 Checking plan peer chaincode name[00m[00m[1m[38;5;2m
ok 1901 Checking plan peer chaincode version[00m[00m[1m[38;5;2m
ok 1902 Checking layout quantities_by_group[00m[00m[1m[38;5;2m
ok 1903 Checking layout quantities_by_group[00m[00m[2m[38;5;66m
# Found third test information ::{"msps":{"OrdererMSP":{"id":"OrdererMSP","orgs":[],"rootCerts":"-----BEGIN CERTIFICATE-----\nMIICNDCCAdqgAwIBAgIRAIBOtq8vZiC0+uLSi2MIS4swCgYIKoZIzj0EAwIwZjEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xFDASBgNVBAoTC2V4YW1wbGUuY29tMRQwEgYDVQQDEwtleGFtcGxl\nLmNvbTAeFw0xNzA0MjIxMjAyNTZaFw0yNzA0MjAxMjAyNTZaMGYxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4gRnJhbmNpc2Nv\nMRQwEgYDVQQKEwtleGFtcGxlLmNvbTEUMBIGA1UEAxMLZXhhbXBsZS5jb20wWTAT\nBgcqhkjOPQIBBggqhkjOPQMBBwNCAARD2rvgyAmhn8hpu82kAjX3QUg2iqCUPEe1\nQ5CzD5MVv/dK5wrRgkcoMhJLe4HPxYbjV3rodm5Pwi5m3zMGkqNQo2kwZzAOBgNV\nHQ8BAf8EBAMCAaYwGQYDVR0lBBIwEAYEVR0lAAYIKwYBBQUHAwEwDwYDVR0TAQH/\nBAUwAwEB/zApBgNVHQ4EIgQg6q3lkIfG2X/PNQ6U83rZ8saSu2bxghSM5YlA3nCt\n6c4wCgYIKoZIzj0EAwIDSAAwRQIhAL5Lgy7jZ2W74L6i0B23a3JD0W8TSYlTcqXb\nRMSXlLIoAiB2glBl0wM/ITn5+tnHOnq2wrIGuYIiNbLK5oq2zf+gtA==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIBcjCCARigAwIBAwICA+gwCgYIKoZIzj0EAwIwFjEUMBIGA1UEAwwLb3JkZXJl\nck9yZzAwHhcNMTcwMjIwMTkwNjEwWhcNMTgwMjIwMTkwNjEwWjAWMRQwEgYDVQQD\nDAtvcmRlcmVyT3JnMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABK8Sv0EA9h06\nfmBkUCO+D/b/2INZ2huy+W/HCxSF22c7WGoJbRzQcWtQmW1KqZowUk86RcxVfFqv\njEMFVXzV38SjVjBUMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFCVakuvq\nxEcK8pYMf/Hw8hsexRMTMB8GA1UdIwQYMBaAFCVakuvqxEcK8pYMf/Hw8hsexRMT\nMAoGCCqGSM49BAMCA0gAMEUCIQCmXgDSRTyxpSk+PXg0FNlYZ4ijTVwKgLkYVhod\nzZPfngIgO4y0p3Fs/gNsJYrroKaaVDe955KrPp/O55jYDKAD/oY=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICSDCCAe6gAwIBAgIRAPnKpS42wlgtHsddm6q+kYcwCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzEuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLi5341r\nmriGFHCmVTLdgPGpDFRgwgmHSuLayMsGP0yEmsXh3hKAy24f1mjx/t8WT9G2sAdw\nONsPsfKMSCKpaRqjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCCiLa81ayqrV5Lq\nU+NfZvzO8dfxqis6K5Lb+/lqRI6iajAKBggqhkjOPQQDAgNIADBFAiEAr8LYCY2b\nq5kNqOUxgHwBa2KTi/zJBR9L3IsTRDjJo8ECICf1xiDgKqZKrAMh0OCebskYwf53\ndooG04HBoqBLvB8Q\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIBbDCCARKgAwIBAwICA+gwCgYIKoZIzj0EAwIwEzERMA8GA1UEAwwIcGVlck9y\nZzAwHhcNMTcwMjIwMTkwNjEwWhcNMTgwMjIwMTkwNjEwWjATMREwDwYDVQQDDAhw\nZWVyT3JnMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKJfDc/CcaiHRipTG2AB\nK5fA0LO9SOlbtC9bZcjLo/xsL157p+3QB3UVF3gt7nkwgMs/ul3FhSEFTk2EVNlF\n1QCjVjBUMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFFQzuQR1RZP/Qn/B\nNDtGSa8n4eN/MB8GA1UdIwQYMBaAFFQzuQR1RZP/Qn/BNDtGSa8n4eN/MAoGCCqG\nSM49BAMCA0gAMEUCIAuG+/Fy3x9JXAD1/rFsu3ZpCKbXiXZLGF7P6Gma8is5AiEA\npSQpRcdukxe4zvcfRmNBjMbNLWCoWlHSQA2jD678QGE=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICRzCCAe6gAwIBAgIRAO33HJTheTwvBgWroB6JK40wCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzIuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDoYTXB0\nMj9j+iSUyM1s7bZZVbDmP7tTej0qWNpS1K7PRsQO2hTfSuiwQrzpaTuGJ4UQPYgu\n9mTJKTWyEVWQ2pSjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCBGTVUP6b+efYl2\nzfWdGl1HJZj1TAWMNUYxfFxfsN39bjAKBggqhkjOPQQDAgNHADBEAiB2XoqoNSRw\nYzY6sgomVYtidm7HwiXEsqkrThUHasnOugIgejAgkgXWid6WEdFSAUVpEDsRiek4\nnM2KGw+XJ5/pm/Q=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIBbDCCARKgAwIBAwICA+gwCgYIKoZIzj0EAwIwEzERMA8GA1UEAwwIcGVlck9y\nZzEwHhcNMTcwMjIwMTkwNjEwWhcNMTgwMjIwMTkwNjEwWjATMREwDwYDVQQDDAhw\nZWVyT3JnMTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJ2S+UvyFgFZYL6qcrKo\nzy72Nkc/RQVzg1VfwC3X7QcnHEVBuCzba1nxdDVE8XPnhmKBWLKh0adn6GKUZpyf\nmbKjVjBUMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFAQlMVsXlKGMEWPf\nKMMM6QVASnlPMB8GA1UdIwQYMBaAFAQlMVsXlKGMEWPfKMMM6QVASnlPMAoGCCqG\nSM49BAMCA0gAMEUCIHr4AD6Xx3R6zFCsveIMnWao9Us88/0uGHoT4ELmMhA1AiEA\nyzfXU5qHp3xBJ1BrKOGi71UmQZVwWfO26INhxcfpCAg=\n-----END CERTIFICATE-----\n","intermediateCerts":"","admins":"-----BEGIN CERTIFICATE-----\nMIICHDCCAcOgAwIBAgIRAOVchZuZsk52YC0d82t2qj0wCgYIKoZIzj0EAwIwZjEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xFDASBgNVBAoTC2V4YW1wbGUuY29tMRQwEgYDVQQDEwtleGFtcGxl\nLmNvbTAeFw0xNzA0MjIxMjAyNTZaFw0yNzA0MjAxMjAyNTZaMFYxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4gRnJhbmNpc2Nv\nMRowGAYDVQQDDBFBZG1pbkBleGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49\nAwEHA0IABKR5qsiBaQSx0sy1K/7EFpBJDeVPC6cLbfqIjjtosuMfNNjDrVR9X8s+\ndPLeWbUP5qJmWnE1kZ/J0WyTnqRbKA2jYjBgMA4GA1UdDwEB/wQEAwIFoDATBgNV\nHSUEDDAKBggrBgEFBQcDATAMBgNVHRMBAf8EAjAAMCsGA1UdIwQkMCKAIOqt5ZCH\nxtl/zzUOlPN62fLGkrtm8YIUjOWJQN5wrenOMAoGCCqGSM49BAMCA0cAMEQCIEkj\nAoe3iCG+7t2BYDRmZgF/6jUZVDjHrNaRsabLzvXTAiA6PM/0GLppYtIcGQDA7qeJ\nVfRO4IGE/M3rSnpBrQCodA==\n-----END CERTIFICATE-----\n","tls_root_certs":"-----BEGIN CERTIFICATE-----\nMIICNDCCAdqgAwIBAgIRAIBOtq8vZiC0+uLSi2MIS4swCgYIKoZIzj0EAwIwZjEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xFDASBgNVBAoTC2V4YW1wbGUuY29tMRQwEgYDVQQDEwtleGFtcGxl\nLmNvbTAeFw0xNzA0MjIxMjAyNTZaFw0yNzA0MjAxMjAyNTZaMGYxCzAJBgNVBAYT\nAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4gRnJhbmNpc2Nv\nMRQwEgYDVQQKEwtleGFtcGxlLmNvbTEUMBIGA1UEAxMLZXhhbXBsZS5jb20wWTAT\nBgcqhkjOPQIBBggqhkjOPQMBBwNCAARD2rvgyAmhn8hpu82kAjX3QUg2iqCUPEe1\nQ5CzD5MVv/dK5wrRgkcoMhJLe4HPxYbjV3rodm5Pwi5m3zMGkqNQo2kwZzAOBgNV\nHQ8BAf8EBAMCAaYwGQYDVR0lBBIwEAYEVR0lAAYIKwYBBQUHAwEwDwYDVR0TAQH/\nBAUwAwEB/zApBgNVHQ4EIgQg6q3lkIfG2X/PNQ6U83rZ8saSu2bxghSM5YlA3nCt\n6c4wCgYIKoZIzj0EAwIDSAAwRQIhAL5Lgy7jZ2W74L6i0B23a3JD0W8TSYlTcqXb\nRMSXlLIoAiB2glBl0wM/ITn5+tnHOnq2wrIGuYIiNbLK5oq2zf+gtA==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICNTCCAdygAwIBAgIRAPMzoI7K8QG4k7AzN7IhxhEwCgYIKoZIzj0EAwIwbDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xFDASBgNVBAoTC2V4YW1wbGUuY29tMRowGAYDVQQDExF0bHNjYS5l\neGFtcGxlLmNvbTAeFw0xODAyMjExODQwMzJaFw0yODAyMTkxODQwMzJaMGwxCzAJ\nBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4gRnJh\nbmNpc2NvMRQwEgYDVQQKEwtleGFtcGxlLmNvbTEaMBgGA1UEAxMRdGxzY2EuZXhh\nbXBsZS5jb20wWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAARXNh/8ySinCUnJi2T3\ncs4m3au0lHjallzAe6PcDz9++1bOl4CggAY0HxNov3nxtYoUJZcRhnE5an1PPipM\n71hdo18wXTAOBgNVHQ8BAf8EBAMCAaYwDwYDVR0lBAgwBgYEVR0lADAPBgNVHRMB\nAf8EBTADAQH/MCkGA1UdDgQiBCBQa5ovzv+NOu9CqfL/a885FjzDQZCg0D1kB+Oe\nIdcBUTAKBggqhkjOPQQDAgNHADBEAiAZ7PcHMWpc2iu0dc43lwhq0wKLLVleCfgZ\nJgRwdjw3wgIgMhcaHqv/W5MAudy9kjeJHIFembEJuWe/+krL6v//yw8=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICSDCCAe6gAwIBAgIRAPnKpS42wlgtHsddm6q+kYcwCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzEuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLi5341r\nmriGFHCmVTLdgPGpDFRgwgmHSuLayMsGP0yEmsXh3hKAy24f1mjx/t8WT9G2sAdw\nONsPsfKMSCKpaRqjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCCiLa81ayqrV5Lq\nU+NfZvzO8dfxqis6K5Lb+/lqRI6iajAKBggqhkjOPQQDAgNIADBFAiEAr8LYCY2b\nq5kNqOUxgHwBa2KTi/zJBR9L3IsTRDjJo8ECICf1xiDgKqZKrAMh0OCebskYwf53\ndooG04HBoqBLvB8Q\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICSTCCAfCgAwIBAgIRAN6NNLMddiNQbv9O9XXVtYkwCgYIKoZIzj0EAwIwdjEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xHzAdBgNVBAMTFnRs\nc2NhLm9yZzEuZXhhbXBsZS5jb20wHhcNMTgwMjIxMTg0MDMyWhcNMjgwMjE5MTg0\nMDMyWjB2MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UE\nBxMNU2FuIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEfMB0G\nA1UEAxMWdGxzY2Eub3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49\nAwEHA0IABDcanv4coQ10L/0jwxXuHcn8YtJEiqQRNSbKWLqf3/1mwYk8EEDHT4k9\nu1f+zS4T+qmSHSXbnFY+EN/ML5/1OGmjXzBdMA4GA1UdDwEB/wQEAwIBpjAPBgNV\nHSUECDAGBgRVHSUAMA8GA1UdEwEB/wQFMAMBAf8wKQYDVR0OBCIEIJDbRSUVw/eK\n6MzDHCybxAB60iGHBjtRkAIrOcT3xytTMAoGCCqGSM49BAMCA0cAMEQCIAGAMw2G\nKn0n52XceSFMyioH4Uo0dpkYaxKFk0P9vBTTAiBd0AQ0WFc/w1wuaShK3hWNg9Ey\nF9kotvRE5Hu0gweb1w==\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICRzCCAe6gAwIBAgIRAO33HJTheTwvBgWroB6JK40wCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzIuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDoYTXB0\nMj9j+iSUyM1s7bZZVbDmP7tTej0qWNpS1K7PRsQO2hTfSuiwQrzpaTuGJ4UQPYgu\n9mTJKTWyEVWQ2pSjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCBGTVUP6b+efYl2\nzfWdGl1HJZj1TAWMNUYxfFxfsN39bjAKBggqhkjOPQQDAgNHADBEAiB2XoqoNSRw\nYzY6sgomVYtidm7HwiXEsqkrThUHasnOugIgejAgkgXWid6WEdFSAUVpEDsRiek4\nnM2KGw+XJ5/pm/Q=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIICSTCCAfCgAwIBAgIRAMXlqdLr7+td1aShJFAZungwCgYIKoZIzj0EAwIwdjEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xHzAdBgNVBAMTFnRs\nc2NhLm9yZzIuZXhhbXBsZS5jb20wHhcNMTgwMjIxMTg0MDMyWhcNMjgwMjE5MTg0\nMDMyWjB2MQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UE\nBxMNU2FuIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEfMB0G\nA1UEAxMWdGxzY2Eub3JnMi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49\nAwEHA0IABO7WAyDbk/B2w9mmauuRSlOwFL1crwmiu9oDu83/Veh9ghrNRsbK2chV\nj5PoY+H5PlRbqA8ZdbmDhHhDho9KBqejXzBdMA4GA1UdDwEB/wQEAwIBpjAPBgNV\nHSUECDAGBgRVHSUAMA8GA1UdEwEB/wQFMAMBAf8wKQYDVR0OBCIEIO+KUPKtAXWt\nBPdjC4N80Yys3wJ9i4/mxz1ikCFJ890EMAoGCCqGSM49BAMCA0cAMEQCID4dOXH8\n6ginPTS17oyyowkdM34Z5ATPdA7WytfA8IW+AiA0jguTMYimuWEWuTulOgyNZ3ai\nhzFkzY/dm7duN86yJQ==\n-----END CERTIFICATE-----\n","tls_intermediate_certs":""},"Org1MSP":{"id":"Org1MSP","orgs":[],"rootCerts":"-----BEGIN CERTIFICATE-----\nMIICSDCCAe6gAwIBAgIRAPnKpS42wlgtHsddm6q+kYcwCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzEuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLi5341r\nmriGFHCmVTLdgPGpDFRgwgmHSuLayMsGP0yEmsXh3hKAy24f1mjx/t8WT9G2sAdw\nONsPsfKMSCKpaRqjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCCiLa81ayqrV5Lq\nU+NfZvzO8dfxqis6K5Lb+/lqRI6iajAKBggqhkjOPQQDAgNIADBFAiEAr8LYCY2b\nq5kNqOUxgHwBa2KTi/zJBR9L3IsTRDjJo8ECICf1xiDgKqZKrAMh0OCebskYwf53\ndooG04HBoqBLvB8Q\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIBbDCCARKgAwIBAwICA+gwCgYIKoZIzj0EAwIwEzERMA8GA1UEAwwIcGVlck9y\nZzAwHhcNMTcwMjIwMTkwNjEwWhcNMTgwMjIwMTkwNjEwWjATMREwDwYDVQQDDAhw\nZWVyT3JnMDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABKJfDc/CcaiHRipTG2AB\nK5fA0LO9SOlbtC9bZcjLo/xsL157p+3QB3UVF3gt7nkwgMs/ul3FhSEFTk2EVNlF\n1QCjVjBUMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFFQzuQR1RZP/Qn/B\nNDtGSa8n4eN/MB8GA1UdIwQYMBaAFFQzuQR1RZP/Qn/BNDtGSa8n4eN/MAoGCCqG\nSM49BAMCA0gAMEUCIAuG+/Fy3x9JXAD1/rFsu3ZpCKbXiXZLGF7P6Gma8is5AiEA\npSQpRcdukxe4zvcfRmNBjMbNLWCoWlHSQA2jD678QGE=\n-----END CERTIFICATE-----\n-----BEGIN CERTIFICATE-----\nMIIBbDCCARKgAwIBAwICA+gwCgYIKoZIzj0EAwIwEzERMA8GA1UEAwwIcGVlck9y\nZzEwHhcNMTcwMjIwMTkwNjEwWhcNMTgwMjIwMTkwNjEwWjATMREwDwYDVQQDDAhw\nZWVyT3JnMTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABJ2S+UvyFgFZYL6qcrKo\nzy72Nkc/RQVzg1VfwC3X7QcnHEVBuCzba1nxdDVE8XPnhmKBWLKh0adn6GKUZpyf\nmbKjVjBUMBIGA1UdEwEB/wQIMAYBAf8CAQAwHQYDVR0OBBYEFAQlMVsXlKGMEWPf\nKMMM6QVASnlPMB8GA1UdIwQYMBaAFAQlMVsXlKGMEWPfKMMM6QVASnlPMAoGCCqG\nSM49BAMCA0gAMEUCIHr4AD6Xx3R6zFCsveIMnWao9Us88/0uGHoT4ELmMhA1AiEA\nyzfXU5qHp3xBJ1BrKOGi71UmQZVwWfO26INhxcfpCAg=\n-----END CERTIFICATE-----\n","intermediateCerts":"","admins":"-----BEGIN CERTIFICATE-----\nMIICKjCCAdGgAwIBAgIQIVQ6HvVnJP1qZ5YKfh50hzAKBggqhkjOPQQDAjBwMQsw\nCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy\nYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEZMBcGA1UEAxMQb3Jn\nMS5leGFtcGxlLmNvbTAeFw0xNzA0MjIxMjAyNTZaFw0yNzA0MjAxMjAyNTZaMFsx\nCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4g\nRnJhbmNpc2NvMR8wHQYDVQQDDBZBZG1pbkBvcmcxLmV4YW1wbGUuY29tMFkwEwYH\nKoZIzj0CAQYIKoZIzj0DAQcDQgAEDuNSbFkBNqbdlGfwwXSHKWv4pw2eFOeD+VXC\nHV4CErBKnUXBiwc/nL766UzXnWnsjUUp3ZOSzCCf56cNkLmv6aNiMGAwDgYDVR0P\nAQH/BAQDAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwKwYD\nVR0jBCQwIoAgoi2vNWsqq1eS6lPjX2b8zvHX8aorOiuS2/v5akSOomowCgYIKoZI\nzj0EAwIDRwAwRAIgbEqKoKrFuYQG0ndiX7dT7GKGlF17Skf8DYil9cqbp00CID5T\nURQPp0/vJ3tldK0z9xjFvsSecj8aqnDvZvGz07/v\n-----END CERTIFICATE-----\n","tls_root_certs":"-----BEGIN CERTIFICATE-----\nMIICSDCCAe6gAwIBAgIRAPnKpS42wlgtHsddm6q+kYcwCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzEuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMS5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMS5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABLi5341r\nmriGFHCmVTLdgPGpDFRgwgmHSuLayMsGP0yEmsXh3hKAy24f1mjx/t8WT9G2sAdw\nONsPsfKMSCKpaRqjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCCiLa81ayqrV5Lq\nU+NfZvzO8dfxqis6K5Lb+/lqRI6iajAKBggqhkjOPQQDAgNIADBFAiEAr8LYCY2b\nq5kNqOUxgHwBa2KTi/zJBR9L3IsTRDjJo8ECICf1xiDgKqZKrAMh0OCebskYwf53\ndooG04HBoqBLvB8Q\n-----END CERTIFICATE-----\n","tls_intermediate_certs":""},"Org2MSP":{"id":"Org2MSP","orgs":[],"rootCerts":"-----BEGIN CERTIFICATE-----\nMIICRzCCAe6gAwIBAgIRAO33HJTheTwvBgWroB6JK40wCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzIuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDoYTXB0\nMj9j+iSUyM1s7bZZVbDmP7tTej0qWNpS1K7PRsQO2hTfSuiwQrzpaTuGJ4UQPYgu\n9mTJKTWyEVWQ2pSjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCBGTVUP6b+efYl2\nzfWdGl1HJZj1TAWMNUYxfFxfsN39bjAKBggqhkjOPQQDAgNHADBEAiB2XoqoNSRw\nYzY6sgomVYtidm7HwiXEsqkrThUHasnOugIgejAgkgXWid6WEdFSAUVpEDsRiek4\nnM2KGw+XJ5/pm/Q=\n-----END CERTIFICATE-----\n","intermediateCerts":"","admins":"-----BEGIN CERTIFICATE-----\nMIICKjCCAdGgAwIBAgIQAjgHxmmRePMUA7W89J4iJDAKBggqhkjOPQQDAjBwMQsw\nCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2FuIEZy\nYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEZMBcGA1UEAxMQb3Jn\nMi5leGFtcGxlLmNvbTAeFw0xNzA0MjIxMjAyNTZaFw0yNzA0MjAxMjAyNTZaMFsx\nCzAJBgNVBAYTAlVTMRMwEQYDVQQIEwpDYWxpZm9ybmlhMRYwFAYDVQQHEw1TYW4g\nRnJhbmNpc2NvMR8wHQYDVQQDDBZBZG1pbkBvcmcyLmV4YW1wbGUuY29tMFkwEwYH\nKoZIzj0CAQYIKoZIzj0DAQcDQgAE/LzcUga8gVut24gLEXfECATFQUZZw3uVYvML\nfqefDQEqA7v12Dd/DUSWvTGzOCR2wpFUqX9zidR0EUajqnOl4KNiMGAwDgYDVR0P\nAQH/BAQDAgWgMBMGA1UdJQQMMAoGCCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwKwYD\nVR0jBCQwIoAgRk1VD+m/nn2Jds31nRpdRyWY9UwFjDVGMXxcX7Dd/W4wCgYIKoZI\nzj0EAwIDRwAwRAIgBweV4tP8pYd4osOWIawmQTD4oqXtpp3F8y1g85Qz1BICIE8E\nVNeXeNlxRoUdToSMOBHSJE0EVqK4BP4NXibBJSgH\n-----END CERTIFICATE-----\n","tls_root_certs":"-----BEGIN CERTIFICATE-----\nMIICRzCCAe6gAwIBAgIRAO33HJTheTwvBgWroB6JK40wCgYIKoZIzj0EAwIwcDEL\nMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNhbiBG\ncmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMTEG9y\nZzIuZXhhbXBsZS5jb20wHhcNMTcwNDIyMTIwMjU2WhcNMjcwNDIwMTIwMjU2WjBw\nMQswCQYDVQQGEwJVUzETMBEGA1UECBMKQ2FsaWZvcm5pYTEWMBQGA1UEBxMNU2Fu\nIEZyYW5jaXNjbzEZMBcGA1UEChMQb3JnMi5leGFtcGxlLmNvbTEZMBcGA1UEAxMQ\nb3JnMi5leGFtcGxlLmNvbTBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABDoYTXB0\nMj9j+iSUyM1s7bZZVbDmP7tTej0qWNpS1K7PRsQO2hTfSuiwQrzpaTuGJ4UQPYgu\n9mTJKTWyEVWQ2pSjaTBnMA4GA1UdDwEB/wQEAwIBpjAZBgNVHSUEEjAQBgRVHSUA\nBggrBgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MCkGA1UdDgQiBCBGTVUP6b+efYl2\nzfWdGl1HJZj1TAWMNUYxfFxfsN39bjAKBggqhkjOPQQDAgNHADBEAiB2XoqoNSRw\nYzY6sgomVYtidm7HwiXEsqkrThUHasnOugIgejAgkgXWid6WEdFSAUVpEDsRiek4\nnM2KGw+XJ5/pm/Q=\n-----END CERTIFICATE-----\n","tls_intermediate_certs":""}},"orderers":{"OrdererMSP":{"endpoints":[{"host":"orderer.example.com","port":7050}]}},"peers_by_org":{"Org2MSP":{"peers":[{"mspid":"Org2MSP","endpoint":"peer0.org2.example.com:8051","ledger_height":{"low":3,"high":0,"unsigned":true},"chaincodes":[{"name":"first","version":"v10"}]}]},"Org1MSP":{"peers":[{"mspid":"Org1MSP","endpoint":"peer0.org1.example.com:7051","ledger_height":{"low":3,"high":0,"unsigned":true},"chaincodes":[{"name":"first","version":"v10"}]}]}},"endorsement_plans":[{"chaincode":"first","groups":{"G1":{"peers":[{"mspid":"Org2MSP","endpoint":"peer0.org2.example.com:8051","ledger_height":{"low":3,"high":0,"unsigned":true},"chaincodes":[{"name":"first","version":"v10"}]}]},"G0":{"peers":[{"mspid":"Org1MSP","endpoint":"peer0.org1.example.com:7051","ledger_height":{"low":3,"high":0,"unsigned":true},"chaincodes":[{"name":"first","version":"v10"}]}]}},"layouts":[{"G0":1},{"G1":1}]}]}[00m[00m[1m[38;5;2m
ok 1904 Checking MSP ID[00m[00m[1m[38;5;2m
ok 1905 Checking MSP ID[00m[00m[1m[38;5;2m
ok 1906 Checking MSP ID[00m[00m[1m[38;5;2m
ok 1907 Checking orderer host[00m[00m[1m[38;5;2m
ok 1908 Checking orderer port[00m[00m[1m[38;5;2m
ok 1909 Checking peer endpoint[00m[00m[1m[38;5;2m
ok 1910 Checking peer ledger_height[00m[00m[1m[38;5;2m
ok 1911 Checking peer chaincode name[00m[00m[1m[38;5;2m
ok 1912 Checking peer chaincode version[00m[00m[1m[38;5;2m
ok 1913 Checking plan peer endpoint[00m[00m[1m[38;5;2m
ok 1914 Checking plan peer ledger_height[00m[00m[1m[38;5;2m
ok 1915 Checking plan peer chaincode name[00m[00m[1m[38;5;2m
ok 1916 Checking plan peer chaincode version[00m[00m[1m[38;5;2m
ok 1917 Checking layout quantities_by_group[00m[00m[1m[38;5;2m
ok 1918 Checking layout quantities_by_group[00m[00m[2m[38;5;66m
# Found local peer information ::{"peers_by_org":{"Org2MSP":{"peers":[{"mspid":"Org2MSP","endpoint":"peer0.org2.example.com:8051"}]},"Org1MSP":{"peers":[{"mspid":"Org1MSP","endpoint":"peer0.org1.example.com:7051"}]}}}[00m[00m[1m[38;5;2m
ok 1919 Checking org1 peer endpoint[00m[00m[1m[38;5;2m
ok 1920 Checking org2 peer endpoint[00m[00m[1m[38;5;2m
ok 1921 Checking that there are no peers assigned to the channel[00m[00m[1m[38;5;2m
ok 1922 Checking that there are no orderers assigned to the channel[00m[00m[1m[38;5;2m
ok 1923 Checking that there are two orderers assigned to the channel[00m[00m[1m[38;5;2m
ok 1924 Checking call to get organizations on the channel after using the discovery service for Org2MSP[00m[00m[1m[38;5;2m
ok 1925 Checking call to get organizations on the channel after using the discovery service for OrdererMSP[00m[00m[1m[38;5;2m
ok 1926 Checking call to get organizations on the channel after using the discovery service for Org1MSP[00m[00m[1m[38;5;2m
ok 1927 Checking orderer url[00m[00m[1m[38;5;2m
ok 1928 Checking number of found peers[00m[00m[1m[38;5;2m
ok 1929 Checking able to query using a discovered peer[00m[00m[1m[38;5;2m
ok 1930 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1931 Successfully registered event for 1c253d040d356f5278926cd72f882d62ba1adb116da3173fc6c40a7157f1c190[00m[00m[1m[38;5;2m
ok 1932 Successfully called connect on localhost:7051[00m[00m[1m[38;5;2m
ok 1933 Event has been seen with transaction code:VALID for transaction id:1c253d040d356f5278926cd72f882d62ba1adb116da3173fc6c40a7157f1c190 for block_num:3[00m[00m[1m[38;5;2m
ok 1934 Successfully committed transaction 1c253d040d356f5278926cd72f882d62ba1adb116da3173fc6c40a7157f1c190[00m[00m[1m[38;5;2m
ok 1935 Successfully got query results :: 300[00m[00m[1m[38;5;2m
ok 1936 Successfully got query results :: 300[00m[00m[1m[38;5;2m
ok 1937 Checking able to find our block number by admin[00m[00m[1m[38;5;2m
ok 1938 Successfully got the block height by admin:: 4[00m[00m[1m[38;5;2m
ok 1939 Successfully got block by hash by admin ::2[00m[00m[1m[38;5;2m
ok 1940 Checking able to find our transaction validationCode by admin[00m[00m[1m[38;5;2m
ok 1941 Checking the size of discovered peers[00m[00m[1m[38;5;2m
ok 1942 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1943 Successfully registered event for 9f67a9731d0eabcdc58a6c9101916453dba9b89a25117068aacff109c9ec867b[00m[00m[1m[38;5;2m
ok 1944 Successfully called connect on localhost:7051[00m[00m[1m[38;5;2m
ok 1945 Event has been seen with transaction code:VALID for transaction id:9f67a9731d0eabcdc58a6c9101916453dba9b89a25117068aacff109c9ec867b for block_num:4[00m[00m[1m[38;5;2m
ok 1946 Successfully committed transaction 9f67a9731d0eabcdc58a6c9101916453dba9b89a25117068aacff109c9ec867b[00m[00m[1m[38;5;2m
ok 1947 ***** Invokes and Queries complete *****[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { name: 'peer0.org1.example.com',
       clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUEIBvaRk6sCADVqbxJI+vBUncK10wCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwNzAwWhcNMTkxMDIyMTMxMjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEJijS0/ss96abqStEwmD54bINAZD+NrlqeeWtKU/BMtOk\nW8nvtPFI65OfAhPhWLxeupSXSTRW8jqx4KxZwOBtAaOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFIc6tV3/t4mb4Y6xxi2xTwkt2qN9MCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQD+v3n60aCS0WWemFKvCUAV8mPO5QfxDIisYTQ0m+R6CQIgR3JBvCPTInU4Mpwm\nOtFJbM9v8CKm6jNgcyxF8P02s90=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgrBjyshUjR2XI29cI\r\nI792aAxxVWM1XhdmBieXYFtlUc6hRANCAAQmKNLT+yz3ppupK0TCYPnhsg0BkP42\r\nuWp55a0pT8Ey06Rbye+08Ujrk58CE+FYvF66lJdJNFbyOrHgrFnA4G0B\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUEIBvaRk6sCADVqbxJI+vBUncK10wCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwNzAwWhcNMTkxMDIyMTMxMjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEJijS0/ss96abqStEwmD54bINAZD+NrlqeeWtKU/BMtOk\nW8nvtPFI65OfAhPhWLxeupSXSTRW8jqx4KxZwOBtAaOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFIc6tV3/t4mb4Y6xxi2xTwkt2qN9MCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0gAMEUC\nIQD+v3n60aCS0WWemFKvCUAV8mPO5QfxDIisYTQ0m+R6CQIgR3JBvCPTInU4Mpwm\nOtFJbM9v8CKm6jNgcyxF8P02s90=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'peer0.org1.example.com',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1948 Successfully got an error when the hint was not found Error: No endorsement plan available for {"chaincodes":[{"name":"shouldNotFindMe"}]}[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { name: 'peer0.org2.example.com',
       clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUEoKtDw/6kftTbEW3pMKYjxJS9mUwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwNzAwWhcNMTkxMDIyMTMxMjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEOjymio1vbDy1HwNgUvTjTn70ze5ffJF7EW7XXutVcXJv\n1kOKz1t9gYk/xCsutlQYxpw4TcEIychf/Hb0YoYElKOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFPIGJ/uQGqxleWvzjKx7eynlcD64MCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0cAMEQC\nIGhhrOD7/vssnek5iYM6ZqMPlNY7AEdPEuCkNs7P+Q1BAiBUE8f1C8RCOeMsbwYM\n448xR3bsRVF1QtdBX9JT24R9cQ==\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg9g0GN2bTtks74ylg\r\nY42ENvIbU1pm8le/nC9NFRrlXQmhRANCAAQ6PKaKjW9sPLUfA2BS9ONOfvTN7l98\r\nkXsRbtde61Vxcm/WQ4rPW32BiT/EKy62VBjGnDhNwQjJyF/8dvRihgSU\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org2.example.com',
       'grpc.default_authority': 'peer0.org2.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUEoKtDw/6kftTbEW3pMKYjxJS9mUwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwNzAwWhcNMTkxMDIyMTMxMjAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEOjymio1vbDy1HwNgUvTjTn70ze5ffJF7EW7XXutVcXJv\n1kOKz1t9gYk/xCsutlQYxpw4TcEIychf/Hb0YoYElKOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFPIGJ/uQGqxleWvzjKx7eynlcD64MCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0cAMEQC\nIGhhrOD7/vssnek5iYM6ZqMPlNY7AEdPEuCkNs7P+Q1BAiBUE8f1C8RCOeMsbwYM\n448xR3bsRVF1QtdBX9JT24R9cQ==\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:8051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:8051' },
    _name: 'peer0.org2.example.com',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1949 Able to install chaincode second on the peer[00m[00m[1m[38;5;2m
ok 1950 Able to install chaincode second on the peer[00m[00m[1m[38;5;2m
ok 1951 Chaincode commited and running[00m[00m[1m[38;5;2m
ok 1952 ***** Second chaincode has been installed and started *****[00m[00m[1m[38;5;2m
ok 1953 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1954 Successfully endorsed chaincode to chaincode[00m[00m[1m[38;5;2m
ok 1955 transaction proposal has response status of good[00m[00m[1m[38;5;2m
ok 1956 Successfully endorsed chaincode to chaincode with collections[00m[00m[1m[38;5;2m
ok 1957 End discovery testing[00m[00m[2m[38;5;66m
# [00m

*** GRPC message size tests ***

[00m[1m[38;5;2m
ok 1958 Successfully loaded member from persistence[00m[00m[1m[38;5;2m
ok 1959 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUSTMKsGFiM3BrY70glG2fi0sOUn4wCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwOTAwWhcNMTkxMDIyMTMxNDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEyNXv8sMejNfJT52YVmQMW0qpceCkXGazwOO+Sd2BoqHr\n0OC9SbJ4CNtm1uY3aOV3FLQuotreYIsHLvd8CV7G8qOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFMkAPEDbBamXfkfCCMFKgNwdT/o2MCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0cAMEQC\nIFqPRxvVMmv1UV1Y1QT3qIv/TtXVBUPlPUbgG+TOAGTzAiBhXvtiYhMny68ahNJ8\nnkM/setQk5SuEKcVQTdDgADX3w==\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQglYnbubgx5t1ii4Ls\r\nshsVrGTKU+wP9A9XDDA7/Xy6dQehRANCAATI1e/ywx6M18lPnZhWZAxbSqlx4KRc\r\nZrPA475J3YGioevQ4L1JsngI22bW5jdo5XcUtC6i2t5giwcu93wJXsby\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUSTMKsGFiM3BrY70glG2fi0sOUn4wCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwOTAwWhcNMTkxMDIyMTMxNDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEyNXv8sMejNfJT52YVmQMW0qpceCkXGazwOO+Sd2BoqHr\n0OC9SbJ4CNtm1uY3aOV3FLQuotreYIsHLvd8CV7G8qOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFMkAPEDbBamXfkfCCMFKgNwdT/o2MCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0cAMEQC\nIFqPRxvVMmv1UV1Y1QT3qIv/TtXVBUPlPUbgG+TOAGTzAiBhXvtiYhMny68ahNJ8\nnkM/setQk5SuEKcVQTdDgADX3w==\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'localhost:7051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1960 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1961 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 1962 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUeXgSl74SBKF/lv+QliLPjGtb3LMwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwOTAwWhcNMTkxMDIyMTMxNDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEa0uB0K4TbA7BHezh89aVQpgsEmfKNCuL2MFWbWhWJ5aq\nxjXIbGLMMaOwyJD5vYu6HlfSy4jwBdPAisqkK7lJ+6OBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFDgz/g8h5yxVoOuzNqosKirtBn3hMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0cAMEQC\nIFj8LL9n+bE0oq24M89Ru4KoTB2MsXrIhJOtCF8Z+yn1AiBzZ8+UjLJVy8KcacL7\n1Jv7iBh3Fp/blWC8idiSs4pRnA==\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgt7Jh6k/tgNfN5OOJ\r\nTHEfEAaBAnks1kLi3WUiR8LCntShRANCAARrS4HQrhNsDsEd7OHz1pVCmCwSZ8o0\r\nK4vYwVZtaFYnlqrGNchsYswxo7DIkPm9i7oeV9LLiPAF08CKyqQruUn7\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org2.example.com',
       'grpc.default_authority': 'peer0.org2.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIUeXgSl74SBKF/lv+QliLPjGtb3LMwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwOTAwWhcNMTkxMDIyMTMxNDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEa0uB0K4TbA7BHezh89aVQpgsEmfKNCuL2MFWbWhWJ5aq\nxjXIbGLMMaOwyJD5vYu6HlfSy4jwBdPAisqkK7lJ+6OBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFDgz/g8h5yxVoOuzNqosKirtBn3hMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0cAMEQC\nIFj8LL9n+bE0oq24M89Ru4KoTB2MsXrIhJOtCF8Z+yn1AiBzZ8+UjLJVy8KcacL7\n1Jv7iBh3Fp/blWC8idiSs4pRnA==\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:8051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:8051' },
    _name: 'localhost:8051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1963 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1964 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 1965 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1966 Successfully enrolled user 'admin' (e2eUtil 2)[00m[00m[1m[38;5;2m
ok 1967 Successfully initialized Channel[00m[00m[1m[38;5;2m
ok 1968 Successfully sent Proposal and received ProposalResponse[00m[00m[1m[38;5;2m
ok 1969 The chaincode upgrade transaction has been committed on peer localhost:8051[00m[00m[1m[38;5;2m
ok 1970 The chaincode upgrade transaction was valid.[00m[00m[1m[38;5;2m
ok 1971 The chaincode upgrade transaction has been committed on peer localhost:7051[00m[00m[1m[38;5;2m
ok 1972 The chaincode upgrade transaction was valid.[00m[00m[1m[38;5;2m
ok 1973 Successfully sent upgradetransaction to the orderer.[00m[00m[1m[38;5;2m
ok 1974 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIULOHYlfax+HkKP8S6wldbxNwCF4UwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwOTAwWhcNMTkxMDIyMTMxNDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEnQTTbZy0U3U8SWyDC56hUT3OM4jZ40sBKIW+aVj3C8SR\nK9XT8U1DEAekRkG0Btrjl+14Fns7j371Ku4OY1mI1aOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFB1Qfr8yfboGSUnOBN0WezzsKkIdMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0cAMEQC\nIBL01S7z1tvKyt1X7s7iS1BMaQzsidimxqpJZqEk1Zr4AiABOh/rdaSpqh1JXYgf\ngngfW2RDYSk+AHJYXINUQE7WdQ==\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgSFAzV7W13RvKvUlb\r\n+ZEmqbB/csztF32Ckm10M8GvwMChRANCAASdBNNtnLRTdTxJbIMLnqFRPc4ziNnj\r\nSwEohb5pWPcLxJEr1dPxTUMQB6RGQbQG2uOX7XgWezuPfvUq7g5jWYjV\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org1.example.com',
       'grpc.default_authority': 'peer0.org1.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICHzCCAcagAwIBAgIULOHYlfax+HkKP8S6wldbxNwCF4UwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzEuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzEuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwOTAwWhcNMTkxMDIyMTMxNDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEnQTTbZy0U3U8SWyDC56hUT3OM4jZ40sBKIW+aVj3C8SR\nK9XT8U1DEAekRkG0Btrjl+14Fns7j371Ku4OY1mI1aOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFB1Qfr8yfboGSUnOBN0WezzsKkIdMCsGA1UdIwQkMCKAIKIt\nrzVrKqtXkupT419m/M7x1/GqKzorktv7+WpEjqJqMAoGCCqGSM49BAMCA0cAMEQC\nIBL01S7z1tvKyt1X7s7iS1BMaQzsidimxqpJZqEk1Zr4AiABOh/rdaSpqh1JXYgf\ngngfW2RDYSk+AHJYXINUQE7WdQ==\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:7051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:7051' },
    _name: 'localhost:7051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1975 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1976 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 1977 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
request.targets [ Peer {
    _options: 
     { clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUI5b+aY+cdb2hT8HLOs2XUX17xfAwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwOTAwWhcNMTkxMDIyMTMxNDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEn4eRl2/e1weuvO5ge1tGeV51na9wsSSKl2+1cNRi6CuA\n+9nm3dS1ZFGzRL0yguDqXcwWJW0lnBJkGWSFhmCrvqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFGgjO86N4FZzRpqwAG7L4aWpeCqgMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0gAMEUC\nIQClpCgE3lorKpGvLDitpn5K2pG/h80LaT5zvmF7nnhyRwIgK+n6HQ8FbtZ61Aie\ntFOMnnqTcJGJmKuvCn80f7dH8ZI=\n-----END CERTIFICATE-----\n',
       clientKey: '-----BEGIN PRIVATE KEY-----\r\nMIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQgodN4NbxbzmHMMKyJ\r\nlyGrufjzJazB5FWEbF2v/a2MnQmhRANCAASfh5GXb97XB6687mB7W0Z5XnWdr3Cx\r\nJIqXb7Vw1GLoK4D72ebd1LVkUbNEvTKC4OpdzBYlbSWcEmQZZIWGYKu+\r\n-----END PRIVATE KEY-----\r\n',
       'grpc.ssl_target_name_override': 'peer0.org2.example.com',
       'grpc.default_authority': 'peer0.org2.example.com',
       'grpc.max_receive_message_length': -1,
       'grpc.max_send_message_length': -1 },
    clientCert: '-----BEGIN CERTIFICATE-----\nMIICIDCCAcagAwIBAgIUI5b+aY+cdb2hT8HLOs2XUX17xfAwCgYIKoZIzj0EAwIw\ncDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCkNhbGlmb3JuaWExFjAUBgNVBAcTDVNh\nbiBGcmFuY2lzY28xGTAXBgNVBAoTEG9yZzIuZXhhbXBsZS5jb20xGTAXBgNVBAMT\nEG9yZzIuZXhhbXBsZS5jb20wHhcNMTgxMDIyMTMwOTAwWhcNMTkxMDIyMTMxNDAw\nWjAhMQ8wDQYDVQQLEwZjbGllbnQxDjAMBgNVBAMTBWFkbWluMFkwEwYHKoZIzj0C\nAQYIKoZIzj0DAQcDQgAEn4eRl2/e1weuvO5ge1tGeV51na9wsSSKl2+1cNRi6CuA\n+9nm3dS1ZFGzRL0yguDqXcwWJW0lnBJkGWSFhmCrvqOBjDCBiTAOBgNVHQ8BAf8E\nBAMCA6gwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQC\nMAAwHQYDVR0OBBYEFGgjO86N4FZzRpqwAG7L4aWpeCqgMCsGA1UdIwQkMCKAIEZN\nVQ/pv559iXbN9Z0aXUclmPVMBYw1RjF8XF+w3f1uMAoGCCqGSM49BAMCA0gAMEUC\nIQClpCgE3lorKpGvLDitpn5K2pG/h80LaT5zvmF7nnhyRwIgK+n6HQ8FbtZ61Aie\ntFOMnnqTcJGJmKuvCn80f7dH8ZI=\n-----END CERTIFICATE-----\n',
    _url: 'grpcs://localhost:8051',
    _endpoint: Endpoint { creds: ChannelCredentials {}, addr: 'localhost:8051' },
    _name: 'localhost:8051',
    _request_timeout: 60000,
    _grpc_wait_for_ready_timeout: 3000,
    _endorserClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} },
    _discoveryClient: 
     ServiceClient {
       '$interceptors': [],
       '$interceptor_providers': [],
       '$channel': Channel {} } } ]
ok 1978 Successfully enrolled user 'admin' (e2eUtil 1)[00m[00m[1m[38;5;2m
ok 1979 Successfully sent install Proposal and received ProposalResponse: Status - 200[00m[00m[1m[38;5;2m
ok 1980 Successfully retrieved TLS certificate[00m[00m[1m[38;5;2m
ok 1981 Successfully enrolled user 'admin' (e2eUtil 2)[00m[00m[1m[38;5;2m
-----------------------------------|----------|----------|----------|----------|-------------------|
File                               |  % Stmts | % Branch |  % Funcs |  % Lines | Uncovered Line #s |
-----------------------------------|----------|----------|----------|----------|-------------------|
All files                          |    94.85 |    88.57 |    97.21 |    94.98 |                   |
 fabric-ca-client/lib              |    81.21 |    67.65 |    94.44 |    81.21 |                   |
  AffiliationService.js            |       82 |       75 |      100 |       82 |... 51,154,158,172 |
  IdentityService.js               |    82.09 |    64.29 |    88.89 |    82.09 |... 24,227,230,236 |
  helper.js                        |    78.13 |       60 |      100 |    78.13 |... 25,29,43,71,75 |
 fabric-client/lib                 |    97.12 |    92.99 |    99.45 |    97.14 |                   |
  BaseClient.js                    |      100 |      100 |      100 |      100 |                   |
  BlockDecoder.js                  |      100 |      100 |      100 |      100 |                   |
  CertificateAuthority.js          |      100 |      100 |      100 |      100 |                   |
  Channel.js                       |    92.03 |    80.84 |    98.31 |    92.06 |... 3852,3853,3895 |
  ChannelEventHub.js               |      100 |      100 |      100 |      100 |                   |
  Client.js                        |      100 |      100 |      100 |      100 |                   |
  Config.js                        |      100 |      100 |      100 |      100 |                   |
  Constants.js                     |      100 |      100 |      100 |      100 |                   |
  Orderer.js                       |      100 |      100 |      100 |      100 |                   |
  Organization.js                  |      100 |      100 |      100 |      100 |                   |
  Package.js                       |      100 |      100 |      100 |      100 |                   |
  Packager.js                      |      100 |      100 |      100 |      100 |                   |
  Peer.js                          |      100 |    94.44 |      100 |      100 |             62,66 |
  Policy.js                        |      100 |    93.88 |      100 |      100 |        81,171,191 |
  Remote.js                        |      100 |      100 |      100 |      100 |                   |
  SideDB.js                        |      100 |      100 |      100 |      100 |                   |
  TransactionID.js                 |      100 |      100 |      100 |      100 |                   |
  User.js                          |      100 |    98.33 |      100 |      100 |                61 |
  api.js                           |      100 |      100 |      100 |      100 |                   |
  client-utils.js                  |      100 |      100 |      100 |      100 |                   |
  hash.js                          |      100 |      100 |      100 |      100 |                   |
  utils.js                         |    94.07 |    89.52 |    97.14 |    94.07 |... 17,218,219,558 |
 fabric-client/lib/impl            |    87.83 |    80.09 |    94.44 |    88.07 |                   |
  BasicCommitHandler.js            |    88.33 |       85 |      100 |    88.33 |... 19,120,123,124 |
  CouchDBKeyValueStore.js          |    80.82 |    63.33 |    93.33 |    81.69 |... 46,147,160,161 |
  CryptoKeyStore.js                |      100 |     87.5 |      100 |      100 |             42,76 |
  CryptoSuite_ECDSA_AES.js         |     84.4 |    71.84 |    78.95 |       85 |... 78,307,324,330 |
  DiscoveryEndorsementHandler.js   |    86.71 |    76.39 |      100 |    86.71 |... 87,289,297,299 |
  FileKeyValueStore.js             |    91.89 |    83.33 |      100 |    91.89 |          47,48,65 |
  NetworkConfig_1_0.js             |    97.89 |     87.5 |      100 |    97.85 |... 74,388,421,422 |
  bccsp_pkcs11.js                  |    82.56 |    80.09 |    94.44 |    82.88 |... 1031,1035,1037 |
 fabric-client/lib/impl/aes        |    59.26 |       65 |    33.33 |    59.26 |                   |
  pkcs11_key.js                    |    59.26 |       65 |    33.33 |    59.26 |... 28,43,47,51,55 |
 fabric-client/lib/impl/ecdsa      |    82.86 |       75 |       80 |    85.93 |                   |
  key.js                           |    98.41 |    96.15 |      100 |    98.41 |               182 |
  pkcs11_key.js                    |    70.13 |    64.81 |    63.64 |       75 |... 47,159,160,162 |
 fabric-client/lib/msp             |    79.55 |    65.17 |    76.67 |    79.31 |                   |
  identity.js                      |    89.29 |    69.23 |    84.62 |    89.29 |... 96,106,107,201 |
  msp-manager.js                   |    86.54 |    81.82 |      100 |       86 |... 5,76,77,78,146 |
  msp.js                           |    66.18 |    46.43 |       50 |    66.18 |... 38,139,181,182 |
 fabric-client/lib/packager        |      100 |      100 |      100 |      100 |                   |
  BasePackager.js                  |      100 |      100 |      100 |      100 |                   |
  Car.js                           |      100 |      100 |      100 |      100 |                   |
  Golang.js                        |      100 |      100 |      100 |      100 |                   |
  Java.js                          |      100 |      100 |      100 |      100 |                   |
  Node.js                          |      100 |      100 |      100 |      100 |                   |
 fabric-client/lib/utils           |      100 |      100 |      100 |      100 |                   |
  ChannelHelper.js                 |      100 |      100 |      100 |      100 |                   |
 fabric-network/lib                |      100 |      100 |      100 |      100 |                   |
  contract.js                      |      100 |      100 |      100 |      100 |                   |
  gateway.js                       |      100 |      100 |      100 |      100 |                   |
  logger.js                        |      100 |      100 |      100 |      100 |                   |
  network.js                       |      100 |      100 |      100 |      100 |                   |
 fabric-network/lib/api            |      100 |      100 |      100 |      100 |                   |
  queryhandler.js                  |      100 |      100 |      100 |      100 |                   |
  wallet.js                        |      100 |      100 |      100 |      100 |                   |
 fabric-network/lib/impl/event     |      100 |      100 |      100 |      100 |                   |
  abstracteventstrategy.js         |      100 |      100 |      100 |      100 |                   |
  allfortxstrategy.js              |      100 |      100 |      100 |      100 |                   |
  anyfortxstrategy.js              |      100 |      100 |      100 |      100 |                   |
  defaulteventhandlerstrategies.js |      100 |      100 |      100 |      100 |                   |
  eventhubfactory.js               |      100 |      100 |      100 |      100 |                   |
  transactioneventhandler.js       |      100 |      100 |      100 |      100 |                   |
 fabric-network/lib/impl/query     |      100 |      100 |      100 |      100 |                   |
  defaultqueryhandler.js           |      100 |      100 |      100 |      100 |                   |
 fabric-network/lib/impl/wallet    |      100 |      100 |      100 |      100 |                   |
  basewallet.js                    |      100 |      100 |      100 |      100 |                   |
  couchdbwallet.js                 |      100 |      100 |      100 |      100 |                   |
  filesystemwallet.js              |      100 |      100 |      100 |      100 |                   |
  hsmwalletmixin.js                |      100 |      100 |      100 |      100 |                   |
  inmemorywallet.js                |      100 |      100 |      100 |      100 |                   |
  x509walletmixin.js               |      100 |      100 |      100 |      100 |                   |
-----------------------------------|----------|----------|----------|----------|-------------------|

=============================== Coverage summary ===============================
Statements   : 94.85% ( 6747/7113 )
Branches     : 88.57% ( 2790/3150 )
Functions    : 97.21% ( 906/932 )
Lines        : 94.98% ( 6710/7065 )
================================================================================
